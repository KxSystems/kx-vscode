// Generated from q.g4 by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');
var qListener = require('./qListener').qListener;
var qVisitor = require('./qVisitor').qVisitor;

var grammarFileName = "q.g4";


var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0003\u00b1\u04b5\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004",
    "\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007",
    "\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f",
    "\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010",
    "\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014",
    "\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017",
    "\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b",
    "\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e",
    "\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#\t#\u0004",
    "$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004*\t*\u0004",
    "+\t+\u0004,\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u00041\t1\u0004",
    "2\t2\u00043\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u00048\t8\u0004",
    "9\t9\u0004:\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004?\t?\u0004",
    "@\t@\u0004A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004F\tF\u0004",
    "G\tG\u0004H\tH\u0004I\tI\u0004J\tJ\u0004K\tK\u0004L\tL\u0004M\tM\u0004",
    "N\tN\u0004O\tO\u0004P\tP\u0004Q\tQ\u0004R\tR\u0004S\tS\u0004T\tT\u0004",
    "U\tU\u0004V\tV\u0004W\tW\u0004X\tX\u0004Y\tY\u0004Z\tZ\u0004[\t[\u0004",
    "\\\t\\\u0004]\t]\u0004^\t^\u0004_\t_\u0004`\t`\u0004a\ta\u0004b\tb\u0004",
    "c\tc\u0004d\td\u0004e\te\u0004f\tf\u0004g\tg\u0004h\th\u0004i\ti\u0004",
    "j\tj\u0004k\tk\u0004l\tl\u0004m\tm\u0004n\tn\u0004o\to\u0004p\tp\u0004",
    "q\tq\u0004r\tr\u0004s\ts\u0004t\tt\u0004u\tu\u0004v\tv\u0004w\tw\u0004",
    "x\tx\u0004y\ty\u0004z\tz\u0004{\t{\u0004|\t|\u0004}\t}\u0004~\t~\u0004",
    "\u007f\t\u007f\u0004\u0080\t\u0080\u0004\u0081\t\u0081\u0004\u0082\t",
    "\u0082\u0004\u0083\t\u0083\u0004\u0084\t\u0084\u0004\u0085\t\u0085\u0004",
    "\u0086\t\u0086\u0004\u0087\t\u0087\u0004\u0088\t\u0088\u0004\u0089\t",
    "\u0089\u0004\u008a\t\u008a\u0004\u008b\t\u008b\u0004\u008c\t\u008c\u0004",
    "\u008d\t\u008d\u0004\u008e\t\u008e\u0004\u008f\t\u008f\u0004\u0090\t",
    "\u0090\u0004\u0091\t\u0091\u0004\u0092\t\u0092\u0004\u0093\t\u0093\u0004",
    "\u0094\t\u0094\u0004\u0095\t\u0095\u0004\u0096\t\u0096\u0004\u0097\t",
    "\u0097\u0004\u0098\t\u0098\u0004\u0099\t\u0099\u0004\u009a\t\u009a\u0004",
    "\u009b\t\u009b\u0004\u009c\t\u009c\u0004\u009d\t\u009d\u0004\u009e\t",
    "\u009e\u0004\u009f\t\u009f\u0004\u00a0\t\u00a0\u0003\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003",
    "\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006",
    "\u0003\u0006\u0007\u0006\u0150\n\u0006\f\u0006\u000e\u0006\u0153\u000b",
    "\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0007\u0007\u0158\n\u0007",
    "\f\u0007\u000e\u0007\u015b\u000b\u0007\u0003\b\u0003\b\u0003\b\u0007",
    "\b\u0160\n\b\f\b\u000e\b\u0163\u000b\b\u0003\t\u0003\t\u0003\t\u0007",
    "\t\u0168\n\t\f\t\u000e\t\u016b\u000b\t\u0003\n\u0003\n\u0003\n\u0007",
    "\n\u0170\n\n\f\n\u000e\n\u0173\u000b\n\u0003\u000b\u0003\u000b\u0003",
    "\u000b\u0005\u000b\u0178\n\u000b\u0003\f\u0003\f\u0003\f\u0003\f\u0003",
    "\f\u0003\f\u0003\f\u0005\f\u0181\n\f\u0003\r\u0003\r\u0003\r\u0003\r",
    "\u0003\r\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u0010",
    "\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0011\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0012",
    "\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013",
    "\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014",
    "\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017",
    "\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0018\u0003\u0018\u0003\u0018",
    "\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019",
    "\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u001a\u0003\u001a\u0003\u001a",
    "\u0003\u001a\u0003\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c",
    "\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001d",
    "\u0003\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e",
    "\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003 ",
    "\u0003 \u0003 \u0003 \u0003 \u0003!\u0003!\u0003!\u0003!\u0003!\u0003",
    "\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003#\u0003#\u0003",
    "#\u0003#\u0003#\u0003#\u0003#\u0003$\u0003$\u0003$\u0003$\u0003$\u0003",
    "%\u0003%\u0003%\u0003%\u0003%\u0003&\u0003&\u0003&\u0003&\u0003&\u0003",
    "&\u0003&\u0003\'\u0003\'\u0003\'\u0003\'\u0003\'\u0003(\u0003(\u0003",
    "(\u0003(\u0003(\u0003)\u0003)\u0003)\u0003)\u0003)\u0003*\u0003*\u0003",
    "*\u0003*\u0003*\u0003+\u0003+\u0003+\u0003+\u0003+\u0003+\u0003+\u0003",
    ",\u0003,\u0003,\u0003,\u0003,\u0003-\u0003-\u0003-\u0003-\u0003-\u0003",
    ".\u0003.\u0003.\u0003.\u0003.\u0003/\u0003/\u0003/\u0003/\u0003/\u0003",
    "/\u0003/\u00030\u00030\u00030\u00030\u00030\u00031\u00031\u00031\u0003",
    "1\u00031\u00032\u00032\u00032\u00032\u00032\u00033\u00033\u00033\u0003",
    "3\u00033\u00034\u00034\u00034\u00034\u00034\u00034\u00034\u00035\u0003",
    "5\u00035\u00035\u00035\u00035\u00035\u00036\u00036\u00036\u00036\u0003",
    "6\u00036\u00036\u00037\u00037\u00037\u00037\u00037\u00037\u00037\u0003",
    "8\u00038\u00038\u00038\u00038\u00039\u00039\u00039\u00039\u00039\u0003",
    ":\u0003:\u0003:\u0003:\u0003:\u0003;\u0003;\u0003;\u0003;\u0003;\u0003",
    ";\u0003;\u0003<\u0003<\u0003<\u0003<\u0003<\u0003=\u0003=\u0003=\u0003",
    "=\u0003=\u0003=\u0003=\u0003>\u0003>\u0003>\u0003>\u0003>\u0003?\u0003",
    "?\u0003?\u0003?\u0003?\u0003@\u0003@\u0003@\u0003@\u0003@\u0003A\u0003",
    "A\u0003A\u0003A\u0003A\u0003A\u0003A\u0003B\u0003B\u0003B\u0003B\u0003",
    "B\u0003C\u0003C\u0003C\u0003C\u0003C\u0003D\u0003D\u0003D\u0003D\u0003",
    "D\u0003D\u0003D\u0003E\u0003E\u0003E\u0003E\u0003E\u0003F\u0003F\u0003",
    "F\u0003F\u0003F\u0003G\u0003G\u0003G\u0003G\u0003G\u0003H\u0003H\u0003",
    "H\u0003H\u0003H\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003I\u0003",
    "J\u0003J\u0003J\u0003J\u0003J\u0003K\u0003K\u0003K\u0003K\u0003K\u0003",
    "L\u0003L\u0003L\u0003L\u0003L\u0003M\u0003M\u0003M\u0003M\u0003M\u0003",
    "N\u0003N\u0003N\u0003N\u0003N\u0003N\u0003N\u0003O\u0003O\u0003O\u0003",
    "O\u0003O\u0003O\u0003O\u0003P\u0003P\u0003P\u0003P\u0003P\u0003Q\u0003",
    "Q\u0003Q\u0003Q\u0003Q\u0003Q\u0003Q\u0003R\u0003R\u0003R\u0003R\u0003",
    "R\u0003S\u0003S\u0003S\u0003S\u0003S\u0003T\u0003T\u0003T\u0003T\u0003",
    "T\u0003U\u0003U\u0003U\u0003U\u0003U\u0003V\u0003V\u0003V\u0003V\u0003",
    "V\u0003W\u0003W\u0003W\u0003W\u0003W\u0003X\u0003X\u0003X\u0003X\u0003",
    "X\u0003Y\u0003Y\u0003Y\u0003Y\u0003Y\u0003Z\u0003Z\u0003Z\u0003Z\u0003",
    "Z\u0003[\u0003[\u0003[\u0003[\u0003[\u0003[\u0003[\u0003\\\u0003\\\u0003",
    "\\\u0003\\\u0003\\\u0003]\u0003]\u0003]\u0003]\u0003]\u0003^\u0003^",
    "\u0003^\u0003^\u0003^\u0003_\u0003_\u0003_\u0003_\u0003_\u0003`\u0003",
    "`\u0003`\u0003`\u0003`\u0003a\u0003a\u0003a\u0003a\u0003a\u0003b\u0003",
    "b\u0003b\u0003b\u0003b\u0003c\u0003c\u0003c\u0003c\u0003c\u0003d\u0003",
    "d\u0003d\u0003d\u0003d\u0003e\u0003e\u0003e\u0003e\u0003e\u0003f\u0003",
    "f\u0003f\u0003f\u0003f\u0003g\u0003g\u0003g\u0003g\u0003g\u0003h\u0003",
    "h\u0003h\u0003h\u0003h\u0003i\u0003i\u0003i\u0003i\u0003i\u0003i\u0003",
    "i\u0003j\u0003j\u0003j\u0003j\u0003j\u0003j\u0003j\u0003k\u0003k\u0003",
    "k\u0003k\u0003k\u0003l\u0003l\u0003l\u0003l\u0003l\u0003l\u0003l\u0003",
    "m\u0003m\u0003m\u0003m\u0003m\u0003m\u0003m\u0003n\u0003n\u0003n\u0003",
    "n\u0003n\u0003o\u0003o\u0003o\u0003o\u0003o\u0003o\u0003o\u0003p\u0003",
    "p\u0003p\u0003p\u0003p\u0003q\u0003q\u0003q\u0003q\u0003q\u0003r\u0003",
    "r\u0003r\u0003r\u0003r\u0003s\u0003s\u0003s\u0003s\u0003s\u0003t\u0003",
    "t\u0003t\u0003t\u0003t\u0003t\u0003t\u0003u\u0003u\u0003u\u0003u\u0003",
    "u\u0003v\u0003v\u0003v\u0003v\u0003v\u0003v\u0003v\u0003w\u0003w\u0003",
    "w\u0003w\u0003w\u0003x\u0003x\u0003x\u0003x\u0003x\u0003y\u0003y\u0003",
    "y\u0003y\u0003y\u0003z\u0003z\u0003z\u0003z\u0003z\u0003{\u0003{\u0003",
    "{\u0003{\u0003{\u0003|\u0003|\u0003|\u0003|\u0003|\u0003}\u0003}\u0003",
    "}\u0003}\u0003}\u0003~\u0003~\u0003~\u0003~\u0003~\u0003\u007f\u0003",
    "\u007f\u0003\u007f\u0003\u007f\u0003\u007f\u0003\u0080\u0003\u0080\u0003",
    "\u0080\u0003\u0080\u0003\u0080\u0003\u0080\u0003\u0080\u0003\u0081\u0003",
    "\u0081\u0003\u0081\u0003\u0081\u0003\u0081\u0003\u0082\u0003\u0082\u0003",
    "\u0082\u0003\u0082\u0003\u0082\u0003\u0082\u0003\u0082\u0003\u0083\u0003",
    "\u0083\u0003\u0083\u0003\u0083\u0003\u0083\u0003\u0083\u0003\u0083\u0003",
    "\u0084\u0003\u0084\u0003\u0084\u0003\u0084\u0003\u0084\u0003\u0085\u0003",
    "\u0085\u0003\u0085\u0003\u0085\u0003\u0085\u0003\u0085\u0003\u0085\u0003",
    "\u0086\u0003\u0086\u0003\u0086\u0003\u0086\u0003\u0086\u0003\u0087\u0003",
    "\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0088\u0003\u0088\u0003",
    "\u0088\u0003\u0088\u0003\u0088\u0003\u0089\u0003\u0089\u0003\u0089\u0003",
    "\u0089\u0003\u0089\u0003\u008a\u0003\u008a\u0003\u008a\u0003\u008a\u0003",
    "\u008a\u0003\u008a\u0003\u008a\u0003\u008b\u0003\u008b\u0003\u008b\u0003",
    "\u008b\u0003\u008b\u0003\u008c\u0003\u008c\u0003\u008c\u0003\u008c\u0003",
    "\u008c\u0003\u008c\u0003\u008c\u0003\u008d\u0003\u008d\u0003\u008d\u0003",
    "\u008d\u0003\u008d\u0003\u008d\u0003\u008d\u0003\u008e\u0003\u008e\u0003",
    "\u008e\u0003\u008e\u0003\u008e\u0003\u008e\u0003\u008e\u0003\u008f\u0003",
    "\u008f\u0003\u008f\u0003\u008f\u0003\u008f\u0003\u0090\u0003\u0090\u0003",
    "\u0090\u0003\u0090\u0003\u0090\u0003\u0091\u0003\u0091\u0003\u0091\u0003",
    "\u0091\u0003\u0091\u0003\u0091\u0003\u0091\u0003\u0092\u0003\u0092\u0003",
    "\u0092\u0003\u0092\u0003\u0092\u0003\u0093\u0003\u0093\u0003\u0093\u0003",
    "\u0093\u0003\u0093\u0003\u0094\u0003\u0094\u0003\u0094\u0003\u0094\u0003",
    "\u0094\u0003\u0095\u0003\u0095\u0003\u0095\u0003\u0095\u0003\u0095\u0003",
    "\u0095\u0003\u0095\u0003\u0096\u0003\u0096\u0003\u0096\u0003\u0096\u0003",
    "\u0096\u0003\u0096\u0003\u0096\u0003\u0097\u0003\u0097\u0003\u0097\u0003",
    "\u0097\u0003\u0097\u0003\u0098\u0003\u0098\u0003\u0098\u0003\u0098\u0003",
    "\u0098\u0003\u0099\u0003\u0099\u0003\u0099\u0003\u0099\u0003\u0099\u0003",
    "\u009a\u0003\u009a\u0003\u009a\u0003\u009a\u0003\u009a\u0003\u009b\u0003",
    "\u009b\u0003\u009b\u0003\u009b\u0003\u009b\u0003\u009c\u0003\u009c\u0003",
    "\u009c\u0003\u009c\u0003\u009c\u0003\u009d\u0003\u009d\u0003\u009d\u0003",
    "\u009d\u0003\u009d\u0003\u009e\u0003\u009e\u0003\u009e\u0003\u009e\u0003",
    "\u009e\u0003\u009f\u0003\u009f\u0003\u009f\u0003\u009f\u0003\u009f\u0003",
    "\u00a0\u0003\u00a0\u0003\u00a0\u0003\u00a0\u0003\u00a0\u0003\u00a0\u0003",
    "\u00a0\u0003\u00a0\u0002\u0002\u00a1\u0002\u0004\u0006\b\n\f\u000e\u0010",
    "\u0012\u0014\u0016\u0018\u001a\u001c\u001e \"$&(*,.02468:<>@BDFHJLN",
    "PRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086\u0088\u008a\u008c",
    "\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e\u00a0\u00a2\u00a4",
    "\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6\u00b8\u00ba\u00bc",
    "\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc\u00ce\u00d0\u00d2\u00d4",
    "\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4\u00e6\u00e8\u00ea\u00ec",
    "\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc\u00fe\u0100\u0102\u0104",
    "\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114\u0116\u0118\u011a\u011c",
    "\u011e\u0120\u0122\u0124\u0126\u0128\u012a\u012c\u012e\u0130\u0132\u0134",
    "\u0136\u0138\u013a\u013c\u013e\u0002\u0003\u0003\u0002\u00a5\u00ab\u0002",
    "\u041e\u0002\u0140\u0003\u0002\u0002\u0002\u0004\u0146\u0003\u0002\u0002",
    "\u0002\u0006\u0148\u0003\u0002\u0002\u0002\b\u014a\u0003\u0002\u0002",
    "\u0002\n\u014c\u0003\u0002\u0002\u0002\f\u0154\u0003\u0002\u0002\u0002",
    "\u000e\u015c\u0003\u0002\u0002\u0002\u0010\u0164\u0003\u0002\u0002\u0002",
    "\u0012\u016c\u0003\u0002\u0002\u0002\u0014\u0177\u0003\u0002\u0002\u0002",
    "\u0016\u0180\u0003\u0002\u0002\u0002\u0018\u0182\u0003\u0002\u0002\u0002",
    "\u001a\u0187\u0003\u0002\u0002\u0002\u001c\u018c\u0003\u0002\u0002\u0002",
    "\u001e\u0191\u0003\u0002\u0002\u0002 \u0196\u0003\u0002\u0002\u0002",
    "\"\u019b\u0003\u0002\u0002\u0002$\u01a0\u0003\u0002\u0002\u0002&\u01a5",
    "\u0003\u0002\u0002\u0002(\u01aa\u0003\u0002\u0002\u0002*\u01af\u0003",
    "\u0002\u0002\u0002,\u01b4\u0003\u0002\u0002\u0002.\u01b9\u0003\u0002",
    "\u0002\u00020\u01c0\u0003\u0002\u0002\u00022\u01c5\u0003\u0002\u0002",
    "\u00024\u01ca\u0003\u0002\u0002\u00026\u01cf\u0003\u0002\u0002\u0002",
    "8\u01d4\u0003\u0002\u0002\u0002:\u01db\u0003\u0002\u0002\u0002<\u01e0",
    "\u0003\u0002\u0002\u0002>\u01e5\u0003\u0002\u0002\u0002@\u01ea\u0003",
    "\u0002\u0002\u0002B\u01ef\u0003\u0002\u0002\u0002D\u01f6\u0003\u0002",
    "\u0002\u0002F\u01fd\u0003\u0002\u0002\u0002H\u0202\u0003\u0002\u0002",
    "\u0002J\u0207\u0003\u0002\u0002\u0002L\u020e\u0003\u0002\u0002\u0002",
    "N\u0213\u0003\u0002\u0002\u0002P\u0218\u0003\u0002\u0002\u0002R\u021d",
    "\u0003\u0002\u0002\u0002T\u0222\u0003\u0002\u0002\u0002V\u0229\u0003",
    "\u0002\u0002\u0002X\u022e\u0003\u0002\u0002\u0002Z\u0233\u0003\u0002",
    "\u0002\u0002\\\u0238\u0003\u0002\u0002\u0002^\u023f\u0003\u0002\u0002",
    "\u0002`\u0244\u0003\u0002\u0002\u0002b\u0249\u0003\u0002\u0002\u0002",
    "d\u024e\u0003\u0002\u0002\u0002f\u0253\u0003\u0002\u0002\u0002h\u025a",
    "\u0003\u0002\u0002\u0002j\u0261\u0003\u0002\u0002\u0002l\u0268\u0003",
    "\u0002\u0002\u0002n\u026f\u0003\u0002\u0002\u0002p\u0274\u0003\u0002",
    "\u0002\u0002r\u0279\u0003\u0002\u0002\u0002t\u027e\u0003\u0002\u0002",
    "\u0002v\u0285\u0003\u0002\u0002\u0002x\u028a\u0003\u0002\u0002\u0002",
    "z\u0291\u0003\u0002\u0002\u0002|\u0296\u0003\u0002\u0002\u0002~\u029b",
    "\u0003\u0002\u0002\u0002\u0080\u02a0\u0003\u0002\u0002\u0002\u0082\u02a7",
    "\u0003\u0002\u0002\u0002\u0084\u02ac\u0003\u0002\u0002\u0002\u0086\u02b1",
    "\u0003\u0002\u0002\u0002\u0088\u02b8\u0003\u0002\u0002\u0002\u008a\u02bd",
    "\u0003\u0002\u0002\u0002\u008c\u02c2\u0003\u0002\u0002\u0002\u008e\u02c7",
    "\u0003\u0002\u0002\u0002\u0090\u02cc\u0003\u0002\u0002\u0002\u0092\u02d3",
    "\u0003\u0002\u0002\u0002\u0094\u02d8\u0003\u0002\u0002\u0002\u0096\u02dd",
    "\u0003\u0002\u0002\u0002\u0098\u02e2\u0003\u0002\u0002\u0002\u009a\u02e7",
    "\u0003\u0002\u0002\u0002\u009c\u02ee\u0003\u0002\u0002\u0002\u009e\u02f5",
    "\u0003\u0002\u0002\u0002\u00a0\u02fa\u0003\u0002\u0002\u0002\u00a2\u0301",
    "\u0003\u0002\u0002\u0002\u00a4\u0306\u0003\u0002\u0002\u0002\u00a6\u030b",
    "\u0003\u0002\u0002\u0002\u00a8\u0310\u0003\u0002\u0002\u0002\u00aa\u0315",
    "\u0003\u0002\u0002\u0002\u00ac\u031a\u0003\u0002\u0002\u0002\u00ae\u031f",
    "\u0003\u0002\u0002\u0002\u00b0\u0324\u0003\u0002\u0002\u0002\u00b2\u0329",
    "\u0003\u0002\u0002\u0002\u00b4\u032e\u0003\u0002\u0002\u0002\u00b6\u0335",
    "\u0003\u0002\u0002\u0002\u00b8\u033a\u0003\u0002\u0002\u0002\u00ba\u033f",
    "\u0003\u0002\u0002\u0002\u00bc\u0344\u0003\u0002\u0002\u0002\u00be\u0349",
    "\u0003\u0002\u0002\u0002\u00c0\u034e\u0003\u0002\u0002\u0002\u00c2\u0353",
    "\u0003\u0002\u0002\u0002\u00c4\u0358\u0003\u0002\u0002\u0002\u00c6\u035d",
    "\u0003\u0002\u0002\u0002\u00c8\u0362\u0003\u0002\u0002\u0002\u00ca\u0367",
    "\u0003\u0002\u0002\u0002\u00cc\u036c\u0003\u0002\u0002\u0002\u00ce\u0371",
    "\u0003\u0002\u0002\u0002\u00d0\u0376\u0003\u0002\u0002\u0002\u00d2\u037d",
    "\u0003\u0002\u0002\u0002\u00d4\u0384\u0003\u0002\u0002\u0002\u00d6\u0389",
    "\u0003\u0002\u0002\u0002\u00d8\u0390\u0003\u0002\u0002\u0002\u00da\u0397",
    "\u0003\u0002\u0002\u0002\u00dc\u039c\u0003\u0002\u0002\u0002\u00de\u03a3",
    "\u0003\u0002\u0002\u0002\u00e0\u03a8\u0003\u0002\u0002\u0002\u00e2\u03ad",
    "\u0003\u0002\u0002\u0002\u00e4\u03b2\u0003\u0002\u0002\u0002\u00e6\u03b7",
    "\u0003\u0002\u0002\u0002\u00e8\u03be\u0003\u0002\u0002\u0002\u00ea\u03c3",
    "\u0003\u0002\u0002\u0002\u00ec\u03ca\u0003\u0002\u0002\u0002\u00ee\u03cf",
    "\u0003\u0002\u0002\u0002\u00f0\u03d4\u0003\u0002\u0002\u0002\u00f2\u03d9",
    "\u0003\u0002\u0002\u0002\u00f4\u03de\u0003\u0002\u0002\u0002\u00f6\u03e3",
    "\u0003\u0002\u0002\u0002\u00f8\u03e8\u0003\u0002\u0002\u0002\u00fa\u03ed",
    "\u0003\u0002\u0002\u0002\u00fc\u03f2\u0003\u0002\u0002\u0002\u00fe\u03f7",
    "\u0003\u0002\u0002\u0002\u0100\u03fe\u0003\u0002\u0002\u0002\u0102\u0403",
    "\u0003\u0002\u0002\u0002\u0104\u040a\u0003\u0002\u0002\u0002\u0106\u0411",
    "\u0003\u0002\u0002\u0002\u0108\u0416\u0003\u0002\u0002\u0002\u010a\u041d",
    "\u0003\u0002\u0002\u0002\u010c\u0422\u0003\u0002\u0002\u0002\u010e\u0427",
    "\u0003\u0002\u0002\u0002\u0110\u042c\u0003\u0002\u0002\u0002\u0112\u0431",
    "\u0003\u0002\u0002\u0002\u0114\u0438\u0003\u0002\u0002\u0002\u0116\u043d",
    "\u0003\u0002\u0002\u0002\u0118\u0444\u0003\u0002\u0002\u0002\u011a\u044b",
    "\u0003\u0002\u0002\u0002\u011c\u0452\u0003\u0002\u0002\u0002\u011e\u0457",
    "\u0003\u0002\u0002\u0002\u0120\u045c\u0003\u0002\u0002\u0002\u0122\u0463",
    "\u0003\u0002\u0002\u0002\u0124\u0468\u0003\u0002\u0002\u0002\u0126\u046d",
    "\u0003\u0002\u0002\u0002\u0128\u0472\u0003\u0002\u0002\u0002\u012a\u0479",
    "\u0003\u0002\u0002\u0002\u012c\u0480\u0003\u0002\u0002\u0002\u012e\u0485",
    "\u0003\u0002\u0002\u0002\u0130\u048a\u0003\u0002\u0002\u0002\u0132\u048f",
    "\u0003\u0002\u0002\u0002\u0134\u0494\u0003\u0002\u0002\u0002\u0136\u0499",
    "\u0003\u0002\u0002\u0002\u0138\u049e\u0003\u0002\u0002\u0002\u013a\u04a3",
    "\u0003\u0002\u0002\u0002\u013c\u04a8\u0003\u0002\u0002\u0002\u013e\u04ad",
    "\u0003\u0002\u0002\u0002\u0140\u0141\u0005\u0004\u0003\u0002\u0141\u0142",
    "\u0005\u0006\u0004\u0002\u0142\u0143\u0007\u009c\u0002\u0002\u0143\u0144",
    "\u0005\b\u0005\u0002\u0144\u0145\u0007\u0003\u0002\u0002\u0145\u0003",
    "\u0003\u0002\u0002\u0002\u0146\u0147\t\u0002\u0002\u0002\u0147\u0005",
    "\u0003\u0002\u0002\u0002\u0148\u0149\u0007\u00ac\u0002\u0002\u0149\u0007",
    "\u0003\u0002\u0002\u0002\u014a\u014b\u0005\n\u0006\u0002\u014b\t\u0003",
    "\u0002\u0002\u0002\u014c\u0151\u0005\f\u0007\u0002\u014d\u014e\u0007",
    "\u00a3\u0002\u0002\u014e\u0150\u0005\f\u0007\u0002\u014f\u014d\u0003",
    "\u0002\u0002\u0002\u0150\u0153\u0003\u0002\u0002\u0002\u0151\u014f\u0003",
    "\u0002\u0002\u0002\u0151\u0152\u0003\u0002\u0002\u0002\u0152\u000b\u0003",
    "\u0002\u0002\u0002\u0153\u0151\u0003\u0002\u0002\u0002\u0154\u0159\u0005",
    "\u000e\b\u0002\u0155\u0156\u0007\u00a2\u0002\u0002\u0156\u0158\u0005",
    "\u000e\b\u0002\u0157\u0155\u0003\u0002\u0002\u0002\u0158\u015b\u0003",
    "\u0002\u0002\u0002\u0159\u0157\u0003\u0002\u0002\u0002\u0159\u015a\u0003",
    "\u0002\u0002\u0002\u015a\r\u0003\u0002\u0002\u0002\u015b\u0159\u0003",
    "\u0002\u0002\u0002\u015c\u0161\u0005\u0010\t\u0002\u015d\u015e\u0007",
    "\u009c\u0002\u0002\u015e\u0160\u0005\u0010\t\u0002\u015f\u015d\u0003",
    "\u0002\u0002\u0002\u0160\u0163\u0003\u0002\u0002\u0002\u0161\u015f\u0003",
    "\u0002\u0002\u0002\u0161\u0162\u0003\u0002\u0002\u0002\u0162\u000f\u0003",
    "\u0002\u0002\u0002\u0163\u0161\u0003\u0002\u0002\u0002\u0164\u0169\u0005",
    "\u0012\n\u0002\u0165\u0166\u0007\u0098\u0002\u0002\u0166\u0168\u0005",
    "\u0012\n\u0002\u0167\u0165\u0003\u0002\u0002\u0002\u0168\u016b\u0003",
    "\u0002\u0002\u0002\u0169\u0167\u0003\u0002\u0002\u0002\u0169\u016a\u0003",
    "\u0002\u0002\u0002\u016a\u0011\u0003\u0002\u0002\u0002\u016b\u0169\u0003",
    "\u0002\u0002\u0002\u016c\u0171\u0005\u0014\u000b\u0002\u016d\u016e\u0007",
    "\u009a\u0002\u0002\u016e\u0170\u0005\u0014\u000b\u0002\u016f\u016d\u0003",
    "\u0002\u0002\u0002\u0170\u0173\u0003\u0002\u0002\u0002\u0171\u016f\u0003",
    "\u0002\u0002\u0002\u0171\u0172\u0003\u0002\u0002\u0002\u0172\u0013\u0003",
    "\u0002\u0002\u0002\u0173\u0171\u0003\u0002\u0002\u0002\u0174\u0178\u0005",
    "\u0016\f\u0002\u0175\u0176\u0007\u0099\u0002\u0002\u0176\u0178\u0005",
    "\u0016\f\u0002\u0177\u0174\u0003\u0002\u0002\u0002\u0177\u0175\u0003",
    "\u0002\u0002\u0002\u0178\u0015\u0003\u0002\u0002\u0002\u0179\u0181\u0007",
    "\u00ae\u0002\u0002\u017a\u0181\u0007\u00af\u0002\u0002\u017b\u0181\u0005",
    "\u0006\u0004\u0002\u017c\u017d\u0007\u0004\u0002\u0002\u017d\u017e\u0005",
    "\b\u0005\u0002\u017e\u017f\u0007\u0005\u0002\u0002\u017f\u0181\u0003",
    "\u0002\u0002\u0002\u0180\u0179\u0003\u0002\u0002\u0002\u0180\u017a\u0003",
    "\u0002\u0002\u0002\u0180\u017b\u0003\u0002\u0002\u0002\u0180\u017c\u0003",
    "\u0002\u0002\u0002\u0181\u0017\u0003\u0002\u0002\u0002\u0182\u0183\u0007",
    "\u0006\u0002\u0002\u0183\u0184\u0007\u0004\u0002\u0002\u0184\u0185\u0005",
    "\b\u0005\u0002\u0185\u0186\u0007\u0005\u0002\u0002\u0186\u0019\u0003",
    "\u0002\u0002\u0002\u0187\u0188\u0007\u0007\u0002\u0002\u0188\u0189\u0007",
    "\u0004\u0002\u0002\u0189\u018a\u0005\b\u0005\u0002\u018a\u018b\u0007",
    "\u0005\u0002\u0002\u018b\u001b\u0003\u0002\u0002\u0002\u018c\u018d\u0007",
    "\b\u0002\u0002\u018d\u018e\u0007\u0004\u0002\u0002\u018e\u018f\u0005",
    "\b\u0005\u0002\u018f\u0190\u0007\u0005\u0002\u0002\u0190\u001d\u0003",
    "\u0002\u0002\u0002\u0191\u0192\u0007\u00a2\u0002\u0002\u0192\u0193\u0007",
    "\u0004\u0002\u0002\u0193\u0194\u0005\b\u0005\u0002\u0194\u0195\u0007",
    "\u0005\u0002\u0002\u0195\u001f\u0003\u0002\u0002\u0002\u0196\u0197\u0007",
    "\t\u0002\u0002\u0197\u0198\u0007\u0004\u0002\u0002\u0198\u0199\u0005",
    "\b\u0005\u0002\u0199\u019a\u0007\u0005\u0002\u0002\u019a!\u0003\u0002",
    "\u0002\u0002\u019b\u019c\u0007\n\u0002\u0002\u019c\u019d\u0007\u0004",
    "\u0002\u0002\u019d\u019e\u0005\b\u0005\u0002\u019e\u019f\u0007\u0005",
    "\u0002\u0002\u019f#\u0003\u0002\u0002\u0002\u01a0\u01a1\u0007\u000b",
    "\u0002\u0002\u01a1\u01a2\u0007\u0004\u0002\u0002\u01a2\u01a3\u0005\b",
    "\u0005\u0002\u01a3\u01a4\u0007\u0005\u0002\u0002\u01a4%\u0003\u0002",
    "\u0002\u0002\u01a5\u01a6\u0007\f\u0002\u0002\u01a6\u01a7\u0007\u0004",
    "\u0002\u0002\u01a7\u01a8\u0005\b\u0005\u0002\u01a8\u01a9\u0007\u0005",
    "\u0002\u0002\u01a9\'\u0003\u0002\u0002\u0002\u01aa\u01ab\u0007\r\u0002",
    "\u0002\u01ab\u01ac\u0007\u0004\u0002\u0002\u01ac\u01ad\u0005\b\u0005",
    "\u0002\u01ad\u01ae\u0007\u0005\u0002\u0002\u01ae)\u0003\u0002\u0002",
    "\u0002\u01af\u01b0\u0007\u000e\u0002\u0002\u01b0\u01b1\u0007\u0004\u0002",
    "\u0002\u01b1\u01b2\u0005\b\u0005\u0002\u01b2\u01b3\u0007\u0005\u0002",
    "\u0002\u01b3+\u0003\u0002\u0002\u0002\u01b4\u01b5\u0007\u000f\u0002",
    "\u0002\u01b5\u01b6\u0007\u0004\u0002\u0002\u01b6\u01b7\u0005\b\u0005",
    "\u0002\u01b7\u01b8\u0007\u0005\u0002\u0002\u01b8-\u0003\u0002\u0002",
    "\u0002\u01b9\u01ba\u0007\u0010\u0002\u0002\u01ba\u01bb\u0007\u0004\u0002",
    "\u0002\u01bb\u01bc\u0005\b\u0005\u0002\u01bc\u01bd\u0007\u0011\u0002",
    "\u0002\u01bd\u01be\u0005\b\u0005\u0002\u01be\u01bf\u0007\u0005\u0002",
    "\u0002\u01bf/\u0003\u0002\u0002\u0002\u01c0\u01c1\u0007\u0012\u0002",
    "\u0002\u01c1\u01c2\u0007\u0004\u0002\u0002\u01c2\u01c3\u0005\b\u0005",
    "\u0002\u01c3\u01c4\u0007\u0005\u0002\u0002\u01c41\u0003\u0002\u0002",
    "\u0002\u01c5\u01c6\u0007\u0013\u0002\u0002\u01c6\u01c7\u0007\u0004\u0002",
    "\u0002\u01c7\u01c8\u0005\b\u0005\u0002\u01c8\u01c9\u0007\u0005\u0002",
    "\u0002\u01c93\u0003\u0002\u0002\u0002\u01ca\u01cb\u0007\u0014\u0002",
    "\u0002\u01cb\u01cc\u0007\u0004\u0002\u0002\u01cc\u01cd\u0005\b\u0005",
    "\u0002\u01cd\u01ce\u0007\u0005\u0002\u0002\u01ce5\u0003\u0002\u0002",
    "\u0002\u01cf\u01d0\u0007\u0015\u0002\u0002\u01d0\u01d1\u0007\u0004\u0002",
    "\u0002\u01d1\u01d2\u0005\b\u0005\u0002\u01d2\u01d3\u0007\u0005\u0002",
    "\u0002\u01d37\u0003\u0002\u0002\u0002\u01d4\u01d5\u0007\u0016\u0002",
    "\u0002\u01d5\u01d6\u0007\u0004\u0002\u0002\u01d6\u01d7\u0005\b\u0005",
    "\u0002\u01d7\u01d8\u0007\u0011\u0002\u0002\u01d8\u01d9\u0005\b\u0005",
    "\u0002\u01d9\u01da\u0007\u0005\u0002\u0002\u01da9\u0003\u0002\u0002",
    "\u0002\u01db\u01dc\u0007\u0017\u0002\u0002\u01dc\u01dd\u0007\u0004\u0002",
    "\u0002\u01dd\u01de\u0005\b\u0005\u0002\u01de\u01df\u0007\u0005\u0002",
    "\u0002\u01df;\u0003\u0002\u0002\u0002\u01e0\u01e1\u0007\u0018\u0002",
    "\u0002\u01e1\u01e2\u0007\u0004\u0002\u0002\u01e2\u01e3\u0005\b\u0005",
    "\u0002\u01e3\u01e4\u0007\u0005\u0002\u0002\u01e4=\u0003\u0002\u0002",
    "\u0002\u01e5\u01e6\u0007\u0019\u0002\u0002\u01e6\u01e7\u0007\u0004\u0002",
    "\u0002\u01e7\u01e8\u0005\b\u0005\u0002\u01e8\u01e9\u0007\u0005\u0002",
    "\u0002\u01e9?\u0003\u0002\u0002\u0002\u01ea\u01eb\u0007\u001a\u0002",
    "\u0002\u01eb\u01ec\u0007\u0004\u0002\u0002\u01ec\u01ed\u0005\b\u0005",
    "\u0002\u01ed\u01ee\u0007\u0005\u0002\u0002\u01eeA\u0003\u0002\u0002",
    "\u0002\u01ef\u01f0\u0007\u001b\u0002\u0002\u01f0\u01f1\u0007\u0004\u0002",
    "\u0002\u01f1\u01f2\u0005\b\u0005\u0002\u01f2\u01f3\u0007\u0011\u0002",
    "\u0002\u01f3\u01f4\u0005\b\u0005\u0002\u01f4\u01f5\u0007\u0005\u0002",
    "\u0002\u01f5C\u0003\u0002\u0002\u0002\u01f6\u01f7\u0007\u001c\u0002",
    "\u0002\u01f7\u01f8\u0007\u0004\u0002\u0002\u01f8\u01f9\u0005\b\u0005",
    "\u0002\u01f9\u01fa\u0007\u0011\u0002\u0002\u01fa\u01fb\u0005\b\u0005",
    "\u0002\u01fb\u01fc\u0007\u0005\u0002\u0002\u01fcE\u0003\u0002\u0002",
    "\u0002\u01fd\u01fe\u0007\u001d\u0002\u0002\u01fe\u01ff\u0007\u0004\u0002",
    "\u0002\u01ff\u0200\u0005\b\u0005\u0002\u0200\u0201\u0007\u0005\u0002",
    "\u0002\u0201G\u0003\u0002\u0002\u0002\u0202\u0203\u0007\u001e\u0002",
    "\u0002\u0203\u0204\u0007\u0004\u0002\u0002\u0204\u0205\u0005\b\u0005",
    "\u0002\u0205\u0206\u0007\u0005\u0002\u0002\u0206I\u0003\u0002\u0002",
    "\u0002\u0207\u0208\u0007\u001f\u0002\u0002\u0208\u0209\u0007\u0004\u0002",
    "\u0002\u0209\u020a\u0005\b\u0005\u0002\u020a\u020b\u0007\u0011\u0002",
    "\u0002\u020b\u020c\u0005\b\u0005\u0002\u020c\u020d\u0007\u0005\u0002",
    "\u0002\u020dK\u0003\u0002\u0002\u0002\u020e\u020f\u0007 \u0002\u0002",
    "\u020f\u0210\u0007\u0004\u0002\u0002\u0210\u0211\u0005\b\u0005\u0002",
    "\u0211\u0212\u0007\u0005\u0002\u0002\u0212M\u0003\u0002\u0002\u0002",
    "\u0213\u0214\u0007!\u0002\u0002\u0214\u0215\u0007\u0004\u0002\u0002",
    "\u0215\u0216\u0005\b\u0005\u0002\u0216\u0217\u0007\u0005\u0002\u0002",
    "\u0217O\u0003\u0002\u0002\u0002\u0218\u0219\u0007\"\u0002\u0002\u0219",
    "\u021a\u0007\u0004\u0002\u0002\u021a\u021b\u0005\b\u0005\u0002\u021b",
    "\u021c\u0007\u0005\u0002\u0002\u021cQ\u0003\u0002\u0002\u0002\u021d",
    "\u021e\u0007#\u0002\u0002\u021e\u021f\u0007\u0004\u0002\u0002\u021f",
    "\u0220\u0005\b\u0005\u0002\u0220\u0221\u0007\u0005\u0002\u0002\u0221",
    "S\u0003\u0002\u0002\u0002\u0222\u0223\u0007$\u0002\u0002\u0223\u0224",
    "\u0007\u0004\u0002\u0002\u0224\u0225\u0005\b\u0005\u0002\u0225\u0226",
    "\u0007\u0011\u0002\u0002\u0226\u0227\u0005\b\u0005\u0002\u0227\u0228",
    "\u0007\u0005\u0002\u0002\u0228U\u0003\u0002\u0002\u0002\u0229\u022a",
    "\u0007%\u0002\u0002\u022a\u022b\u0007\u0004\u0002\u0002\u022b\u022c",
    "\u0005\b\u0005\u0002\u022c\u022d\u0007\u0005\u0002\u0002\u022dW\u0003",
    "\u0002\u0002\u0002\u022e\u022f\u0007&\u0002\u0002\u022f\u0230\u0007",
    "\u0004\u0002\u0002\u0230\u0231\u0005\b\u0005\u0002\u0231\u0232\u0007",
    "\u0005\u0002\u0002\u0232Y\u0003\u0002\u0002\u0002\u0233\u0234\u0007",
    "\'\u0002\u0002\u0234\u0235\u0007\u0004\u0002\u0002\u0235\u0236\u0005",
    "\b\u0005\u0002\u0236\u0237\u0007\u0005\u0002\u0002\u0237[\u0003\u0002",
    "\u0002\u0002\u0238\u0239\u0007(\u0002\u0002\u0239\u023a\u0007\u0004",
    "\u0002\u0002\u023a\u023b\u0005\b\u0005\u0002\u023b\u023c\u0007\u0011",
    "\u0002\u0002\u023c\u023d\u0005\b\u0005\u0002\u023d\u023e\u0007\u0005",
    "\u0002\u0002\u023e]\u0003\u0002\u0002\u0002\u023f\u0240\u0007)\u0002",
    "\u0002\u0240\u0241\u0007\u0004\u0002\u0002\u0241\u0242\u0005\b\u0005",
    "\u0002\u0242\u0243\u0007\u0005\u0002\u0002\u0243_\u0003\u0002\u0002",
    "\u0002\u0244\u0245\u0007*\u0002\u0002\u0245\u0246\u0007\u0004\u0002",
    "\u0002\u0246\u0247\u0005\b\u0005\u0002\u0247\u0248\u0007\u0005\u0002",
    "\u0002\u0248a\u0003\u0002\u0002\u0002\u0249\u024a\u0007+\u0002\u0002",
    "\u024a\u024b\u0007\u0004\u0002\u0002\u024b\u024c\u0005\b\u0005\u0002",
    "\u024c\u024d\u0007\u0005\u0002\u0002\u024dc\u0003\u0002\u0002\u0002",
    "\u024e\u024f\u0007,\u0002\u0002\u024f\u0250\u0007\u0004\u0002\u0002",
    "\u0250\u0251\u0005\b\u0005\u0002\u0251\u0252\u0007\u0005\u0002\u0002",
    "\u0252e\u0003\u0002\u0002\u0002\u0253\u0254\u0007-\u0002\u0002\u0254",
    "\u0255\u0007\u0004\u0002\u0002\u0255\u0256\u0005\b\u0005\u0002\u0256",
    "\u0257\u0007\u0011\u0002\u0002\u0257\u0258\u0005\b\u0005\u0002\u0258",
    "\u0259\u0007\u0005\u0002\u0002\u0259g\u0003\u0002\u0002\u0002\u025a",
    "\u025b\u0007.\u0002\u0002\u025b\u025c\u0007\u0004\u0002\u0002\u025c",
    "\u025d\u0005\b\u0005\u0002\u025d\u025e\u0007\u0011\u0002\u0002\u025e",
    "\u025f\u0005\b\u0005\u0002\u025f\u0260\u0007\u0005\u0002\u0002\u0260",
    "i\u0003\u0002\u0002\u0002\u0261\u0262\u0007/\u0002\u0002\u0262\u0263",
    "\u0007\u0004\u0002\u0002\u0263\u0264\u0005\b\u0005\u0002\u0264\u0265",
    "\u0007\u0011\u0002\u0002\u0265\u0266\u0005\b\u0005\u0002\u0266\u0267",
    "\u0007\u0005\u0002\u0002\u0267k\u0003\u0002\u0002\u0002\u0268\u0269",
    "\u00070\u0002\u0002\u0269\u026a\u0007\u0004\u0002\u0002\u026a\u026b",
    "\u0005\b\u0005\u0002\u026b\u026c\u0007\u0011\u0002\u0002\u026c\u026d",
    "\u0005\b\u0005\u0002\u026d\u026e\u0007\u0005\u0002\u0002\u026em\u0003",
    "\u0002\u0002\u0002\u026f\u0270\u00071\u0002\u0002\u0270\u0271\u0007",
    "\u0004\u0002\u0002\u0271\u0272\u0005\b\u0005\u0002\u0272\u0273\u0007",
    "\u0005\u0002\u0002\u0273o\u0003\u0002\u0002\u0002\u0274\u0275\u0007",
    "2\u0002\u0002\u0275\u0276\u0007\u0004\u0002\u0002\u0276\u0277\u0005",
    "\b\u0005\u0002\u0277\u0278\u0007\u0005\u0002\u0002\u0278q\u0003\u0002",
    "\u0002\u0002\u0279\u027a\u00073\u0002\u0002\u027a\u027b\u0007\u0004",
    "\u0002\u0002\u027b\u027c\u0005\b\u0005\u0002\u027c\u027d\u0007\u0005",
    "\u0002\u0002\u027ds\u0003\u0002\u0002\u0002\u027e\u027f\u00074\u0002",
    "\u0002\u027f\u0280\u0007\u0004\u0002\u0002\u0280\u0281\u0005\b\u0005",
    "\u0002\u0281\u0282\u0007\u0011\u0002\u0002\u0282\u0283\u0005\b\u0005",
    "\u0002\u0283\u0284\u0007\u0005\u0002\u0002\u0284u\u0003\u0002\u0002",
    "\u0002\u0285\u0286\u00075\u0002\u0002\u0286\u0287\u0007\u0004\u0002",
    "\u0002\u0287\u0288\u0005\b\u0005\u0002\u0288\u0289\u0007\u0005\u0002",
    "\u0002\u0289w\u0003\u0002\u0002\u0002\u028a\u028b\u00076\u0002\u0002",
    "\u028b\u028c\u0007\u0004\u0002\u0002\u028c\u028d\u0005\b\u0005\u0002",
    "\u028d\u028e\u0007\u0011\u0002\u0002\u028e\u028f\u0005\b\u0005\u0002",
    "\u028f\u0290\u0007\u0005\u0002\u0002\u0290y\u0003\u0002\u0002\u0002",
    "\u0291\u0292\u00077\u0002\u0002\u0292\u0293\u0007\u0004\u0002\u0002",
    "\u0293\u0294\u0005\b\u0005\u0002\u0294\u0295\u0007\u0005\u0002\u0002",
    "\u0295{\u0003\u0002\u0002\u0002\u0296\u0297\u00078\u0002\u0002\u0297",
    "\u0298\u0007\u0004\u0002\u0002\u0298\u0299\u0005\b\u0005\u0002\u0299",
    "\u029a\u0007\u0005\u0002\u0002\u029a}\u0003\u0002\u0002\u0002\u029b",
    "\u029c\u00079\u0002\u0002\u029c\u029d\u0007\u0004\u0002\u0002\u029d",
    "\u029e\u0005\b\u0005\u0002\u029e\u029f\u0007\u0005\u0002\u0002\u029f",
    "\u007f\u0003\u0002\u0002\u0002\u02a0\u02a1\u0007:\u0002\u0002\u02a1",
    "\u02a2\u0007\u0004\u0002\u0002\u02a2\u02a3\u0005\b\u0005\u0002\u02a3",
    "\u02a4\u0007\u0011\u0002\u0002\u02a4\u02a5\u0005\b\u0005\u0002\u02a5",
    "\u02a6\u0007\u0005\u0002\u0002\u02a6\u0081\u0003\u0002\u0002\u0002\u02a7",
    "\u02a8\u0007;\u0002\u0002\u02a8\u02a9\u0007\u0004\u0002\u0002\u02a9",
    "\u02aa\u0005\b\u0005\u0002\u02aa\u02ab\u0007\u0005\u0002\u0002\u02ab",
    "\u0083\u0003\u0002\u0002\u0002\u02ac\u02ad\u0007<\u0002\u0002\u02ad",
    "\u02ae\u0007\u0004\u0002\u0002\u02ae\u02af\u0005\b\u0005\u0002\u02af",
    "\u02b0\u0007\u0005\u0002\u0002\u02b0\u0085\u0003\u0002\u0002\u0002\u02b1",
    "\u02b2\u0007=\u0002\u0002\u02b2\u02b3\u0007\u0004\u0002\u0002\u02b3",
    "\u02b4\u0005\b\u0005\u0002\u02b4\u02b5\u0007\u0011\u0002\u0002\u02b5",
    "\u02b6\u0005\b\u0005\u0002\u02b6\u02b7\u0007\u0005\u0002\u0002\u02b7",
    "\u0087\u0003\u0002\u0002\u0002\u02b8\u02b9\u0007>\u0002\u0002\u02b9",
    "\u02ba\u0007\u0004\u0002\u0002\u02ba\u02bb\u0005\b\u0005\u0002\u02bb",
    "\u02bc\u0007\u0005\u0002\u0002\u02bc\u0089\u0003\u0002\u0002\u0002\u02bd",
    "\u02be\u0007?\u0002\u0002\u02be\u02bf\u0007\u0004\u0002\u0002\u02bf",
    "\u02c0\u0005\b\u0005\u0002\u02c0\u02c1\u0007\u0005\u0002\u0002\u02c1",
    "\u008b\u0003\u0002\u0002\u0002\u02c2\u02c3\u0007@\u0002\u0002\u02c3",
    "\u02c4\u0007\u0004\u0002\u0002\u02c4\u02c5\u0005\b\u0005\u0002\u02c5",
    "\u02c6\u0007\u0005\u0002\u0002\u02c6\u008d\u0003\u0002\u0002\u0002\u02c7",
    "\u02c8\u0007A\u0002\u0002\u02c8\u02c9\u0007\u0004\u0002\u0002\u02c9",
    "\u02ca\u0005\b\u0005\u0002\u02ca\u02cb\u0007\u0005\u0002\u0002\u02cb",
    "\u008f\u0003\u0002\u0002\u0002\u02cc\u02cd\u0007B\u0002\u0002\u02cd",
    "\u02ce\u0007\u0004\u0002\u0002\u02ce\u02cf\u0005\b\u0005\u0002\u02cf",
    "\u02d0\u0007\u0011\u0002\u0002\u02d0\u02d1\u0005\b\u0005\u0002\u02d1",
    "\u02d2\u0007\u0005\u0002\u0002\u02d2\u0091\u0003\u0002\u0002\u0002\u02d3",
    "\u02d4\u0007C\u0002\u0002\u02d4\u02d5\u0007\u0004\u0002\u0002\u02d5",
    "\u02d6\u0005\b\u0005\u0002\u02d6\u02d7\u0007\u0005\u0002\u0002\u02d7",
    "\u0093\u0003\u0002\u0002\u0002\u02d8\u02d9\u0007D\u0002\u0002\u02d9",
    "\u02da\u0007\u0004\u0002\u0002\u02da\u02db\u0005\b\u0005\u0002\u02db",
    "\u02dc\u0007\u0005\u0002\u0002\u02dc\u0095\u0003\u0002\u0002\u0002\u02dd",
    "\u02de\u0007E\u0002\u0002\u02de\u02df\u0007\u0004\u0002\u0002\u02df",
    "\u02e0\u0005\b\u0005\u0002\u02e0\u02e1\u0007\u0005\u0002\u0002\u02e1",
    "\u0097\u0003\u0002\u0002\u0002\u02e2\u02e3\u0007F\u0002\u0002\u02e3",
    "\u02e4\u0007\u0004\u0002\u0002\u02e4\u02e5\u0005\b\u0005\u0002\u02e5",
    "\u02e6\u0007\u0005\u0002\u0002\u02e6\u0099\u0003\u0002\u0002\u0002\u02e7",
    "\u02e8\u0007G\u0002\u0002\u02e8\u02e9\u0007\u0004\u0002\u0002\u02e9",
    "\u02ea\u0005\b\u0005\u0002\u02ea\u02eb\u0007\u0011\u0002\u0002\u02eb",
    "\u02ec\u0005\b\u0005\u0002\u02ec\u02ed\u0007\u0005\u0002\u0002\u02ed",
    "\u009b\u0003\u0002\u0002\u0002\u02ee\u02ef\u0007H\u0002\u0002\u02ef",
    "\u02f0\u0007\u0004\u0002\u0002\u02f0\u02f1\u0005\b\u0005\u0002\u02f1",
    "\u02f2\u0007\u0011\u0002\u0002\u02f2\u02f3\u0005\b\u0005\u0002\u02f3",
    "\u02f4\u0007\u0005\u0002\u0002\u02f4\u009d\u0003\u0002\u0002\u0002\u02f5",
    "\u02f6\u0007I\u0002\u0002\u02f6\u02f7\u0007\u0004\u0002\u0002\u02f7",
    "\u02f8\u0005\b\u0005\u0002\u02f8\u02f9\u0007\u0005\u0002\u0002\u02f9",
    "\u009f\u0003\u0002\u0002\u0002\u02fa\u02fb\u0007J\u0002\u0002\u02fb",
    "\u02fc\u0007\u0004\u0002\u0002\u02fc\u02fd\u0005\b\u0005\u0002\u02fd",
    "\u02fe\u0007\u0011\u0002\u0002\u02fe\u02ff\u0005\b\u0005\u0002\u02ff",
    "\u0300\u0007\u0005\u0002\u0002\u0300\u00a1\u0003\u0002\u0002\u0002\u0301",
    "\u0302\u0007K\u0002\u0002\u0302\u0303\u0007\u0004\u0002\u0002\u0303",
    "\u0304\u0005\b\u0005\u0002\u0304\u0305\u0007\u0005\u0002\u0002\u0305",
    "\u00a3\u0003\u0002\u0002\u0002\u0306\u0307\u0007L\u0002\u0002\u0307",
    "\u0308\u0007\u0004\u0002\u0002\u0308\u0309\u0005\b\u0005\u0002\u0309",
    "\u030a\u0007\u0005\u0002\u0002\u030a\u00a5\u0003\u0002\u0002\u0002\u030b",
    "\u030c\u0007M\u0002\u0002\u030c\u030d\u0007\u0004\u0002\u0002\u030d",
    "\u030e\u0005\b\u0005\u0002\u030e\u030f\u0007\u0005\u0002\u0002\u030f",
    "\u00a7\u0003\u0002\u0002\u0002\u0310\u0311\u0007\u00a4\u0002\u0002\u0311",
    "\u0312\u0007\u0004\u0002\u0002\u0312\u0313\u0005\b\u0005\u0002\u0313",
    "\u0314\u0007\u0005\u0002\u0002\u0314\u00a9\u0003\u0002\u0002\u0002\u0315",
    "\u0316\u0007N\u0002\u0002\u0316\u0317\u0007\u0004\u0002\u0002\u0317",
    "\u0318\u0005\b\u0005\u0002\u0318\u0319\u0007\u0005\u0002\u0002\u0319",
    "\u00ab\u0003\u0002\u0002\u0002\u031a\u031b\u0007\u00a3\u0002\u0002\u031b",
    "\u031c\u0007\u0004\u0002\u0002\u031c\u031d\u0005\b\u0005\u0002\u031d",
    "\u031e\u0007\u0005\u0002\u0002\u031e\u00ad\u0003\u0002\u0002\u0002\u031f",
    "\u0320\u0007O\u0002\u0002\u0320\u0321\u0007\u0004\u0002\u0002\u0321",
    "\u0322\u0005\b\u0005\u0002\u0322\u0323\u0007\u0005\u0002\u0002\u0323",
    "\u00af\u0003\u0002\u0002\u0002\u0324\u0325\u0007P\u0002\u0002\u0325",
    "\u0326\u0007\u0004\u0002\u0002\u0326\u0327\u0005\b\u0005\u0002\u0327",
    "\u0328\u0007\u0005\u0002\u0002\u0328\u00b1\u0003\u0002\u0002\u0002\u0329",
    "\u032a\u0007Q\u0002\u0002\u032a\u032b\u0007\u0004\u0002\u0002\u032b",
    "\u032c\u0005\b\u0005\u0002\u032c\u032d\u0007\u0005\u0002\u0002\u032d",
    "\u00b3\u0003\u0002\u0002\u0002\u032e\u032f\u0007R\u0002\u0002\u032f",
    "\u0330\u0007\u0004\u0002\u0002\u0330\u0331\u0005\b\u0005\u0002\u0331",
    "\u0332\u0007\u0011\u0002\u0002\u0332\u0333\u0005\b\u0005\u0002\u0333",
    "\u0334\u0007\u0005\u0002\u0002\u0334\u00b5\u0003\u0002\u0002\u0002\u0335",
    "\u0336\u0007S\u0002\u0002\u0336\u0337\u0007\u0004\u0002\u0002\u0337",
    "\u0338\u0005\b\u0005\u0002\u0338\u0339\u0007\u0005\u0002\u0002\u0339",
    "\u00b7\u0003\u0002\u0002\u0002\u033a\u033b\u0007T\u0002\u0002\u033b",
    "\u033c\u0007\u0004\u0002\u0002\u033c\u033d\u0005\b\u0005\u0002\u033d",
    "\u033e\u0007\u0005\u0002\u0002\u033e\u00b9\u0003\u0002\u0002\u0002\u033f",
    "\u0340\u0007U\u0002\u0002\u0340\u0341\u0007\u0004\u0002\u0002\u0341",
    "\u0342\u0005\b\u0005\u0002\u0342\u0343\u0007\u0005\u0002\u0002\u0343",
    "\u00bb\u0003\u0002\u0002\u0002\u0344\u0345\u0007V\u0002\u0002\u0345",
    "\u0346\u0007\u0004\u0002\u0002\u0346\u0347\u0005\b\u0005\u0002\u0347",
    "\u0348\u0007\u0005\u0002\u0002\u0348\u00bd\u0003\u0002\u0002\u0002\u0349",
    "\u034a\u0007W\u0002\u0002\u034a\u034b\u0007\u0004\u0002\u0002\u034b",
    "\u034c\u0005\b\u0005\u0002\u034c\u034d\u0007\u0005\u0002\u0002\u034d",
    "\u00bf\u0003\u0002\u0002\u0002\u034e\u034f\u0007X\u0002\u0002\u034f",
    "\u0350\u0007\u0004\u0002\u0002\u0350\u0351\u0005\b\u0005\u0002\u0351",
    "\u0352\u0007\u0005\u0002\u0002\u0352\u00c1\u0003\u0002\u0002\u0002\u0353",
    "\u0354\u0007Y\u0002\u0002\u0354\u0355\u0007\u0004\u0002\u0002\u0355",
    "\u0356\u0005\b\u0005\u0002\u0356\u0357\u0007\u0005\u0002\u0002\u0357",
    "\u00c3\u0003\u0002\u0002\u0002\u0358\u0359\u0007Z\u0002\u0002\u0359",
    "\u035a\u0007\u0004\u0002\u0002\u035a\u035b\u0005\b\u0005\u0002\u035b",
    "\u035c\u0007\u0005\u0002\u0002\u035c\u00c5\u0003\u0002\u0002\u0002\u035d",
    "\u035e\u0007[\u0002\u0002\u035e\u035f\u0007\u0004\u0002\u0002\u035f",
    "\u0360\u0005\b\u0005\u0002\u0360\u0361\u0007\u0005\u0002\u0002\u0361",
    "\u00c7\u0003\u0002\u0002\u0002\u0362\u0363\u0007\\\u0002\u0002\u0363",
    "\u0364\u0007\u0004\u0002\u0002\u0364\u0365\u0005\b\u0005\u0002\u0365",
    "\u0366\u0007\u0005\u0002\u0002\u0366\u00c9\u0003\u0002\u0002\u0002\u0367",
    "\u0368\u0007]\u0002\u0002\u0368\u0369\u0007\u0004\u0002\u0002\u0369",
    "\u036a\u0005\b\u0005\u0002\u036a\u036b\u0007\u0005\u0002\u0002\u036b",
    "\u00cb\u0003\u0002\u0002\u0002\u036c\u036d\u0007^\u0002\u0002\u036d",
    "\u036e\u0007\u0004\u0002\u0002\u036e\u036f\u0005\b\u0005\u0002\u036f",
    "\u0370\u0007\u0005\u0002\u0002\u0370\u00cd\u0003\u0002\u0002\u0002\u0371",
    "\u0372\u0007_\u0002\u0002\u0372\u0373\u0007\u0004\u0002\u0002\u0373",
    "\u0374\u0005\b\u0005\u0002\u0374\u0375\u0007\u0005\u0002\u0002\u0375",
    "\u00cf\u0003\u0002\u0002\u0002\u0376\u0377\u0007`\u0002\u0002\u0377",
    "\u0378\u0007\u0004\u0002\u0002\u0378\u0379\u0005\b\u0005\u0002\u0379",
    "\u037a\u0007\u0011\u0002\u0002\u037a\u037b\u0005\b\u0005\u0002\u037b",
    "\u037c\u0007\u0005\u0002\u0002\u037c\u00d1\u0003\u0002\u0002\u0002\u037d",
    "\u037e\u0007a\u0002\u0002\u037e\u037f\u0007\u0004\u0002\u0002\u037f",
    "\u0380\u0005\b\u0005\u0002\u0380\u0381\u0007\u0011\u0002\u0002\u0381",
    "\u0382\u0005\b\u0005\u0002\u0382\u0383\u0007\u0005\u0002\u0002\u0383",
    "\u00d3\u0003\u0002\u0002\u0002\u0384\u0385\u0007b\u0002\u0002\u0385",
    "\u0386\u0007\u0004\u0002\u0002\u0386\u0387\u0005\b\u0005\u0002\u0387",
    "\u0388\u0007\u0005\u0002\u0002\u0388\u00d5\u0003\u0002\u0002\u0002\u0389",
    "\u038a\u0007c\u0002\u0002\u038a\u038b\u0007\u0004\u0002\u0002\u038b",
    "\u038c\u0005\b\u0005\u0002\u038c\u038d\u0007\u0011\u0002\u0002\u038d",
    "\u038e\u0005\b\u0005\u0002\u038e\u038f\u0007\u0005\u0002\u0002\u038f",
    "\u00d7\u0003\u0002\u0002\u0002\u0390\u0391\u0007d\u0002\u0002\u0391",
    "\u0392\u0007\u0004\u0002\u0002\u0392\u0393\u0005\b\u0005\u0002\u0393",
    "\u0394\u0007\u0011\u0002\u0002\u0394\u0395\u0005\b\u0005\u0002\u0395",
    "\u0396\u0007\u0005\u0002\u0002\u0396\u00d9\u0003\u0002\u0002\u0002\u0397",
    "\u0398\u0007e\u0002\u0002\u0398\u0399\u0007\u0004\u0002\u0002\u0399",
    "\u039a\u0005\b\u0005\u0002\u039a\u039b\u0007\u0005\u0002\u0002\u039b",
    "\u00db\u0003\u0002\u0002\u0002\u039c\u039d\u0007f\u0002\u0002\u039d",
    "\u039e\u0007\u0004\u0002\u0002\u039e\u039f\u0005\b\u0005\u0002\u039f",
    "\u03a0\u0007\u0011\u0002\u0002\u03a0\u03a1\u0005\b\u0005\u0002\u03a1",
    "\u03a2\u0007\u0005\u0002\u0002\u03a2\u00dd\u0003\u0002\u0002\u0002\u03a3",
    "\u03a4\u0007g\u0002\u0002\u03a4\u03a5\u0007\u0004\u0002\u0002\u03a5",
    "\u03a6\u0005\b\u0005\u0002\u03a6\u03a7\u0007\u0005\u0002\u0002\u03a7",
    "\u00df\u0003\u0002\u0002\u0002\u03a8\u03a9\u0007h\u0002\u0002\u03a9",
    "\u03aa\u0007\u0004\u0002\u0002\u03aa\u03ab\u0005\b\u0005\u0002\u03ab",
    "\u03ac\u0007\u0005\u0002\u0002\u03ac\u00e1\u0003\u0002\u0002\u0002\u03ad",
    "\u03ae\u0007i\u0002\u0002\u03ae\u03af\u0007\u0004\u0002\u0002\u03af",
    "\u03b0\u0005\b\u0005\u0002\u03b0\u03b1\u0007\u0005\u0002\u0002\u03b1",
    "\u00e3\u0003\u0002\u0002\u0002\u03b2\u03b3\u0007j\u0002\u0002\u03b3",
    "\u03b4\u0007\u0004\u0002\u0002\u03b4\u03b5\u0005\b\u0005\u0002\u03b5",
    "\u03b6\u0007\u0005\u0002\u0002\u03b6\u00e5\u0003\u0002\u0002\u0002\u03b7",
    "\u03b8\u0007k\u0002\u0002\u03b8\u03b9\u0007\u0004\u0002\u0002\u03b9",
    "\u03ba\u0005\b\u0005\u0002\u03ba\u03bb\u0007\u0011\u0002\u0002\u03bb",
    "\u03bc\u0005\b\u0005\u0002\u03bc\u03bd\u0007\u0005\u0002\u0002\u03bd",
    "\u00e7\u0003\u0002\u0002\u0002\u03be\u03bf\u0007l\u0002\u0002\u03bf",
    "\u03c0\u0007\u0004\u0002\u0002\u03c0\u03c1\u0005\b\u0005\u0002\u03c1",
    "\u03c2\u0007\u0005\u0002\u0002\u03c2\u00e9\u0003\u0002\u0002\u0002\u03c3",
    "\u03c4\u0007m\u0002\u0002\u03c4\u03c5\u0007\u0004\u0002\u0002\u03c5",
    "\u03c6\u0005\b\u0005\u0002\u03c6\u03c7\u0007\u0011\u0002\u0002\u03c7",
    "\u03c8\u0005\b\u0005\u0002\u03c8\u03c9\u0007\u0005\u0002\u0002\u03c9",
    "\u00eb\u0003\u0002\u0002\u0002\u03ca\u03cb\u0007n\u0002\u0002\u03cb",
    "\u03cc\u0007\u0004\u0002\u0002\u03cc\u03cd\u0005\b\u0005\u0002\u03cd",
    "\u03ce\u0007\u0005\u0002\u0002\u03ce\u00ed\u0003\u0002\u0002\u0002\u03cf",
    "\u03d0\u0007o\u0002\u0002\u03d0\u03d1\u0007\u0004\u0002\u0002\u03d1",
    "\u03d2\u0005\b\u0005\u0002\u03d2\u03d3\u0007\u0005\u0002\u0002\u03d3",
    "\u00ef\u0003\u0002\u0002\u0002\u03d4\u03d5\u0007p\u0002\u0002\u03d5",
    "\u03d6\u0007\u0004\u0002\u0002\u03d6\u03d7\u0005\b\u0005\u0002\u03d7",
    "\u03d8\u0007\u0005\u0002\u0002\u03d8\u00f1\u0003\u0002\u0002\u0002\u03d9",
    "\u03da\u0007q\u0002\u0002\u03da\u03db\u0007\u0004\u0002\u0002\u03db",
    "\u03dc\u0005\b\u0005\u0002\u03dc\u03dd\u0007\u0005\u0002\u0002\u03dd",
    "\u00f3\u0003\u0002\u0002\u0002\u03de\u03df\u0007r\u0002\u0002\u03df",
    "\u03e0\u0007\u0004\u0002\u0002\u03e0\u03e1\u0005\b\u0005\u0002\u03e1",
    "\u03e2\u0007\u0005\u0002\u0002\u03e2\u00f5\u0003\u0002\u0002\u0002\u03e3",
    "\u03e4\u0007s\u0002\u0002\u03e4\u03e5\u0007\u0004\u0002\u0002\u03e5",
    "\u03e6\u0005\b\u0005\u0002\u03e6\u03e7\u0007\u0005\u0002\u0002\u03e7",
    "\u00f7\u0003\u0002\u0002\u0002\u03e8\u03e9\u0007t\u0002\u0002\u03e9",
    "\u03ea\u0007\u0004\u0002\u0002\u03ea\u03eb\u0005\b\u0005\u0002\u03eb",
    "\u03ec\u0007\u0005\u0002\u0002\u03ec\u00f9\u0003\u0002\u0002\u0002\u03ed",
    "\u03ee\u0007u\u0002\u0002\u03ee\u03ef\u0007\u0004\u0002\u0002\u03ef",
    "\u03f0\u0005\b\u0005\u0002\u03f0\u03f1\u0007\u0005\u0002\u0002\u03f1",
    "\u00fb\u0003\u0002\u0002\u0002\u03f2\u03f3\u0007v\u0002\u0002\u03f3",
    "\u03f4\u0007\u0004\u0002\u0002\u03f4\u03f5\u0005\b\u0005\u0002\u03f5",
    "\u03f6\u0007\u0005\u0002\u0002\u03f6\u00fd\u0003\u0002\u0002\u0002\u03f7",
    "\u03f8\u0007w\u0002\u0002\u03f8\u03f9\u0007\u0004\u0002\u0002\u03f9",
    "\u03fa\u0005\b\u0005\u0002\u03fa\u03fb\u0007\u0011\u0002\u0002\u03fb",
    "\u03fc\u0005\b\u0005\u0002\u03fc\u03fd\u0007\u0005\u0002\u0002\u03fd",
    "\u00ff\u0003\u0002\u0002\u0002\u03fe\u03ff\u0007x\u0002\u0002\u03ff",
    "\u0400\u0007\u0004\u0002\u0002\u0400\u0401\u0005\b\u0005\u0002\u0401",
    "\u0402\u0007\u0005\u0002\u0002\u0402\u0101\u0003\u0002\u0002\u0002\u0403",
    "\u0404\u0007y\u0002\u0002\u0404\u0405\u0007\u0004\u0002\u0002\u0405",
    "\u0406\u0005\b\u0005\u0002\u0406\u0407\u0007\u0011\u0002\u0002\u0407",
    "\u0408\u0005\b\u0005\u0002\u0408\u0409\u0007\u0005\u0002\u0002\u0409",
    "\u0103\u0003\u0002\u0002\u0002\u040a\u040b\u0007z\u0002\u0002\u040b",
    "\u040c\u0007\u0004\u0002\u0002\u040c\u040d\u0005\b\u0005\u0002\u040d",
    "\u040e\u0007\u0011\u0002\u0002\u040e\u040f\u0005\b\u0005\u0002\u040f",
    "\u0410\u0007\u0005\u0002\u0002\u0410\u0105\u0003\u0002\u0002\u0002\u0411",
    "\u0412\u0007{\u0002\u0002\u0412\u0413\u0007\u0004\u0002\u0002\u0413",
    "\u0414\u0005\b\u0005\u0002\u0414\u0415\u0007\u0005\u0002\u0002\u0415",
    "\u0107\u0003\u0002\u0002\u0002\u0416\u0417\u0007|\u0002\u0002\u0417",
    "\u0418\u0007\u0004\u0002\u0002\u0418\u0419\u0005\b\u0005\u0002\u0419",
    "\u041a\u0007\u0011\u0002\u0002\u041a\u041b\u0005\b\u0005\u0002\u041b",
    "\u041c\u0007\u0005\u0002\u0002\u041c\u0109\u0003\u0002\u0002\u0002\u041d",
    "\u041e\u0007}\u0002\u0002\u041e\u041f\u0007\u0004\u0002\u0002\u041f",
    "\u0420\u0005\b\u0005\u0002\u0420\u0421\u0007\u0005\u0002\u0002\u0421",
    "\u010b\u0003\u0002\u0002\u0002\u0422\u0423\u0007~\u0002\u0002\u0423",
    "\u0424\u0007\u0004\u0002\u0002\u0424\u0425\u0005\b\u0005\u0002\u0425",
    "\u0426\u0007\u0005\u0002\u0002\u0426\u010d\u0003\u0002\u0002\u0002\u0427",
    "\u0428\u0007\u007f\u0002\u0002\u0428\u0429\u0007\u0004\u0002\u0002\u0429",
    "\u042a\u0005\b\u0005\u0002\u042a\u042b\u0007\u0005\u0002\u0002\u042b",
    "\u010f\u0003\u0002\u0002\u0002\u042c\u042d\u0007\u0080\u0002\u0002\u042d",
    "\u042e\u0007\u0004\u0002\u0002\u042e\u042f\u0005\b\u0005\u0002\u042f",
    "\u0430\u0007\u0005\u0002\u0002\u0430\u0111\u0003\u0002\u0002\u0002\u0431",
    "\u0432\u0007\u0081\u0002\u0002\u0432\u0433\u0007\u0004\u0002\u0002\u0433",
    "\u0434\u0005\b\u0005\u0002\u0434\u0435\u0007\u0011\u0002\u0002\u0435",
    "\u0436\u0005\b\u0005\u0002\u0436\u0437\u0007\u0005\u0002\u0002\u0437",
    "\u0113\u0003\u0002\u0002\u0002\u0438\u0439\u0007\u0082\u0002\u0002\u0439",
    "\u043a\u0007\u0004\u0002\u0002\u043a\u043b\u0005\b\u0005\u0002\u043b",
    "\u043c\u0007\u0005\u0002\u0002\u043c\u0115\u0003\u0002\u0002\u0002\u043d",
    "\u043e\u0007\u0083\u0002\u0002\u043e\u043f\u0007\u0004\u0002\u0002\u043f",
    "\u0440\u0005\b\u0005\u0002\u0440\u0441\u0007\u0011\u0002\u0002\u0441",
    "\u0442\u0005\b\u0005\u0002\u0442\u0443\u0007\u0005\u0002\u0002\u0443",
    "\u0117\u0003\u0002\u0002\u0002\u0444\u0445\u0007\u0084\u0002\u0002\u0445",
    "\u0446\u0007\u0004\u0002\u0002\u0446\u0447\u0005\b\u0005\u0002\u0447",
    "\u0448\u0007\u0011\u0002\u0002\u0448\u0449\u0005\b\u0005\u0002\u0449",
    "\u044a\u0007\u0005\u0002\u0002\u044a\u0119\u0003\u0002\u0002\u0002\u044b",
    "\u044c\u0007\u0085\u0002\u0002\u044c\u044d\u0007\u0004\u0002\u0002\u044d",
    "\u044e\u0005\b\u0005\u0002\u044e\u044f\u0007\u0011\u0002\u0002\u044f",
    "\u0450\u0005\b\u0005\u0002\u0450\u0451\u0007\u0005\u0002\u0002\u0451",
    "\u011b\u0003\u0002\u0002\u0002\u0452\u0453\u0007\u0086\u0002\u0002\u0453",
    "\u0454\u0007\u0004\u0002\u0002\u0454\u0455\u0005\b\u0005\u0002\u0455",
    "\u0456\u0007\u0005\u0002\u0002\u0456\u011d\u0003\u0002\u0002\u0002\u0457",
    "\u0458\u0007\u0087\u0002\u0002\u0458\u0459\u0007\u0004\u0002\u0002\u0459",
    "\u045a\u0005\b\u0005\u0002\u045a\u045b\u0007\u0005\u0002\u0002\u045b",
    "\u011f\u0003\u0002\u0002\u0002\u045c\u045d\u0007\u0088\u0002\u0002\u045d",
    "\u045e\u0007\u0004\u0002\u0002\u045e\u045f\u0005\b\u0005\u0002\u045f",
    "\u0460\u0007\u0011\u0002\u0002\u0460\u0461\u0005\b\u0005\u0002\u0461",
    "\u0462\u0007\u0005\u0002\u0002\u0462\u0121\u0003\u0002\u0002\u0002\u0463",
    "\u0464\u0007\u0089\u0002\u0002\u0464\u0465\u0007\u0004\u0002\u0002\u0465",
    "\u0466\u0005\b\u0005\u0002\u0466\u0467\u0007\u0005\u0002\u0002\u0467",
    "\u0123\u0003\u0002\u0002\u0002\u0468\u0469\u0007\u008a\u0002\u0002\u0469",
    "\u046a\u0007\u0004\u0002\u0002\u046a\u046b\u0005\b\u0005\u0002\u046b",
    "\u046c\u0007\u0005\u0002\u0002\u046c\u0125\u0003\u0002\u0002\u0002\u046d",
    "\u046e\u0007\u008b\u0002\u0002\u046e\u046f\u0007\u0004\u0002\u0002\u046f",
    "\u0470\u0005\b\u0005\u0002\u0470\u0471\u0007\u0005\u0002\u0002\u0471",
    "\u0127\u0003\u0002\u0002\u0002\u0472\u0473\u0007\u008c\u0002\u0002\u0473",
    "\u0474\u0007\u0004\u0002\u0002\u0474\u0475\u0005\b\u0005\u0002\u0475",
    "\u0476\u0007\u0011\u0002\u0002\u0476\u0477\u0005\b\u0005\u0002\u0477",
    "\u0478\u0007\u0005\u0002\u0002\u0478\u0129\u0003\u0002\u0002\u0002\u0479",
    "\u047a\u0007\u008d\u0002\u0002\u047a\u047b\u0007\u0004\u0002\u0002\u047b",
    "\u047c\u0005\b\u0005\u0002\u047c\u047d\u0007\u0011\u0002\u0002\u047d",
    "\u047e\u0005\b\u0005\u0002\u047e\u047f\u0007\u0005\u0002\u0002\u047f",
    "\u012b\u0003\u0002\u0002\u0002\u0480\u0481\u0007\u008e\u0002\u0002\u0481",
    "\u0482\u0007\u0004\u0002\u0002\u0482\u0483\u0005\b\u0005\u0002\u0483",
    "\u0484\u0007\u0005\u0002\u0002\u0484\u012d\u0003\u0002\u0002\u0002\u0485",
    "\u0486\u0007\u008f\u0002\u0002\u0486\u0487\u0007\u0004\u0002\u0002\u0487",
    "\u0488\u0005\b\u0005\u0002\u0488\u0489\u0007\u0005\u0002\u0002\u0489",
    "\u012f\u0003\u0002\u0002\u0002\u048a\u048b\u0007\u0090\u0002\u0002\u048b",
    "\u048c\u0007\u0004\u0002\u0002\u048c\u048d\u0005\b\u0005\u0002\u048d",
    "\u048e\u0007\u0005\u0002\u0002\u048e\u0131\u0003\u0002\u0002\u0002\u048f",
    "\u0490\u0007\u0091\u0002\u0002\u0490\u0491\u0007\u0004\u0002\u0002\u0491",
    "\u0492\u0005\b\u0005\u0002\u0492\u0493\u0007\u0005\u0002\u0002\u0493",
    "\u0133\u0003\u0002\u0002\u0002\u0494\u0495\u0007\u0092\u0002\u0002\u0495",
    "\u0496\u0007\u0004\u0002\u0002\u0496\u0497\u0005\b\u0005\u0002\u0497",
    "\u0498\u0007\u0005\u0002\u0002\u0498\u0135\u0003\u0002\u0002\u0002\u0499",
    "\u049a\u0007\u0093\u0002\u0002\u049a\u049b\u0007\u0004\u0002\u0002\u049b",
    "\u049c\u0005\b\u0005\u0002\u049c\u049d\u0007\u0005\u0002\u0002\u049d",
    "\u0137\u0003\u0002\u0002\u0002\u049e\u049f\u0007\u0094\u0002\u0002\u049f",
    "\u04a0\u0007\u0004\u0002\u0002\u04a0\u04a1\u0005\b\u0005\u0002\u04a1",
    "\u04a2\u0007\u0005\u0002\u0002\u04a2\u0139\u0003\u0002\u0002\u0002\u04a3",
    "\u04a4\u0007\u0095\u0002\u0002\u04a4\u04a5\u0007\u0004\u0002\u0002\u04a5",
    "\u04a6\u0005\b\u0005\u0002\u04a6\u04a7\u0007\u0005\u0002\u0002\u04a7",
    "\u013b\u0003\u0002\u0002\u0002\u04a8\u04a9\u0007\u0096\u0002\u0002\u04a9",
    "\u04aa\u0007\u0004\u0002\u0002\u04aa\u04ab\u0005\b\u0005\u0002\u04ab",
    "\u04ac\u0007\u0005\u0002\u0002\u04ac\u013d\u0003\u0002\u0002\u0002\u04ad",
    "\u04ae\u0007\u0097\u0002\u0002\u04ae\u04af\u0007\u0004\u0002\u0002\u04af",
    "\u04b0\u0005\b\u0005\u0002\u04b0\u04b1\u0007\u0011\u0002\u0002\u04b1",
    "\u04b2\u0005\b\u0005\u0002\u04b2\u04b3\u0007\u0005\u0002\u0002\u04b3",
    "\u013f\u0003\u0002\u0002\u0002\t\u0151\u0159\u0161\u0169\u0171\u0177",
    "\u0180"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ null, "';'", "'('", "')'", "'abs'", "'acos'", "'all'", 
                     "'any'", "'asin'", "'atan'", "'avg'", "'ceiling'", 
                     "'cos'", "'count'", "'cross'", "','", "'delete'", "'deltas'", 
                     "'dev'", "'distinct'", "'div'", "'drop'", "'each'", 
                     "'enlist'", "'eval'", "'except'", "'exec'", "'exp'", 
                     "'fby'", "'fill'", "'first'", "'flip'", "'floor'", 
                     "'get'", "'group'", "'gtime'", "'hclose'", "'hcount'", 
                     "'hdel'", "'hopen'", "'hsym'", "'iasc'", "'idesc'", 
                     "'ij'", "'in'", "'insert'", "'inter'", "'inv'", "'keys'", 
                     "'last'", "'like'", "'list'", "'lj'", "'load'", "'log'", 
                     "'lower'", "'lsq'", "'ltime'", "'ltrim'", "'mavg'", 
                     "'max'", "'maxs'", "'mcount'", "'md5'", "'mdev'", "'med'", 
                     "'meta'", "'min'", "'mins'", "'mmax'", "'mmin'", "'mmu'", 
                     "'mod'", "'msum'", "'neg'", "'next'", "'null'", "'over'", 
                     "'parse'", "'peach'", "'pj'", "'plist'", "'prd'", "'prev'", 
                     "'prior'", "'rand'", "'rank'", "'ratios'", "'raze'", 
                     "'read0'", "'read1'", "'reciprocal'", "'reverse'", 
                     "'rload'", "'rotate'", "'rsave'", "'rtrim'", "'save'", 
                     "'scan'", "'select'", "'set'", "'show'", "'signum'", 
                     "'sin'", "'sqrt'", "'ssr'", "'string'", "'sublist'", 
                     "'sum'", "'sums'", "'sv'", "'system'", "'tables'", 
                     "'tan'", "'til'", "'trim'", "'type'", "'uj'", "'ungroup'", 
                     "'union'", "'update'", "'upper'", "'upsert'", "'value'", 
                     "'var'", "'view'", "'vs'", "'wavg'", "'where'", "'within'", 
                     "'wj1'", "'wj2'", "'ww'", "'xasc'", "'xbar'", "'xcols'", 
                     "'xdesc'", "'xexp'", "'xgroup'", "'xkey'", "'xlog'", 
                     "'xprev'", "'xrank'", "'xranked'", "'xrecs'", "'xrows'", 
                     "'xss'", "'xtype'", "'yield'", "'zip'", "'+'", "'-'", 
                     "'*'", "'%'", "'='", "'<>'", "'<'", "'<='", "'>'", 
                     "'>='", "'and'", "'or'", "'not'", "'int'", "'long'", 
                     "'float'", "'double'", "'char'", "'symbol'", "'timestamp'" ];

var symbolicNames = [ null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, "PLUS", "MINUS", 
                      "MULTIPLY", "DIVIDE", "EQUALS", "NOT_EQUALS", "LESS_THAN", 
                      "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", 
                      "AND", "OR", "NOT", "INT", "LONG", "FLOAT", "DOUBLE", 
                      "CHAR", "SYMBOL", "TIMESTAMP", "ID", "DIGIT", "NUMBER", 
                      "STRING", "ESC", "WS" ];

var ruleNames =  [ "variable_declaration", "storage_type", "variable_name", 
                   "expression", "or_expression", "and_expression", "comparison_expression", 
                   "additive_expression", "multiplicative_expression", "unary_expression", 
                   "primary_expression", "abs_function", "acos_function", 
                   "all_function", "and_function", "any_function", "asin_function", 
                   "atan_function", "avg_function", "ceiling_function", 
                   "cos_function", "count_function", "cross_function", "delete_function", 
                   "deltas_function", "dev_function", "distinct_function", 
                   "div_function", "drop_function", "each_function", "enlist_function", 
                   "eval_function", "except_function", "exec_function", 
                   "exp_function", "fby_function", "fill_function", "first_function", 
                   "flip_function", "floor_function", "get_function", "group_function", 
                   "gtime_function", "hclose_function", "hcount_function", 
                   "hdel_function", "hopen_function", "hsym_function", "iasc_function", 
                   "idesc_function", "ij_function", "in_function", "insert_function", 
                   "inter_function", "inv_function", "keys_function", "last_function", 
                   "like_function", "list_function", "lj_function", "load_function", 
                   "log_function", "lower_function", "lsq_function", "ltime_function", 
                   "ltrim_function", "mavg_function", "max_function", "maxs_function", 
                   "mcount_function", "md5_function", "mdev_function", "med_function", 
                   "meta_function", "min_function", "mins_function", "mmax_function", 
                   "mmin_function", "mmu_function", "mod_function", "msum_function", 
                   "neg_function", "next_function", "not_function", "null_function", 
                   "or_function", "over_function", "parse_function", "peach_function", 
                   "pj_function", "plist_function", "prd_function", "prev_function", 
                   "prior_function", "rand_function", "rank_function", "ratios_function", 
                   "raze_function", "read0_function", "read1_function", 
                   "reciprocal_function", "reverse_function", "rload_function", 
                   "rotate_function", "rsave_function", "rtrim_function", 
                   "save_function", "scan_function", "select_function", 
                   "set_function", "show_function", "signum_function", "sin_function", 
                   "sqrt_function", "ssr_function", "string_function", "sublist_function", 
                   "sum_function", "sums_function", "sv_function", "system_function", 
                   "tables_function", "tan_function", "til_function", "trim_function", 
                   "type_function", "uj_function", "ungroup_function", "union_function", 
                   "update_function", "upper_function", "upsert_function", 
                   "value_function", "var_function", "view_function", "vs_function", 
                   "wavg_function", "where_function", "within_function", 
                   "wj1_function", "wj2_function", "ww_function", "xasc_function", 
                   "xbar_function", "xcols_function", "xdesc_function", 
                   "xexp_function", "xgroup_function", "xkey_function", 
                   "xlog_function", "xprev_function", "xrank_function", 
                   "xranked_function", "xrecs_function", "xrows_function", 
                   "xss_function", "xtype_function", "yield_function", "zip_function" ];

function qParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

qParser.prototype = Object.create(antlr4.Parser.prototype);
qParser.prototype.constructor = qParser;

Object.defineProperty(qParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

qParser.EOF = antlr4.Token.EOF;
qParser.T__0 = 1;
qParser.T__1 = 2;
qParser.T__2 = 3;
qParser.T__3 = 4;
qParser.T__4 = 5;
qParser.T__5 = 6;
qParser.T__6 = 7;
qParser.T__7 = 8;
qParser.T__8 = 9;
qParser.T__9 = 10;
qParser.T__10 = 11;
qParser.T__11 = 12;
qParser.T__12 = 13;
qParser.T__13 = 14;
qParser.T__14 = 15;
qParser.T__15 = 16;
qParser.T__16 = 17;
qParser.T__17 = 18;
qParser.T__18 = 19;
qParser.T__19 = 20;
qParser.T__20 = 21;
qParser.T__21 = 22;
qParser.T__22 = 23;
qParser.T__23 = 24;
qParser.T__24 = 25;
qParser.T__25 = 26;
qParser.T__26 = 27;
qParser.T__27 = 28;
qParser.T__28 = 29;
qParser.T__29 = 30;
qParser.T__30 = 31;
qParser.T__31 = 32;
qParser.T__32 = 33;
qParser.T__33 = 34;
qParser.T__34 = 35;
qParser.T__35 = 36;
qParser.T__36 = 37;
qParser.T__37 = 38;
qParser.T__38 = 39;
qParser.T__39 = 40;
qParser.T__40 = 41;
qParser.T__41 = 42;
qParser.T__42 = 43;
qParser.T__43 = 44;
qParser.T__44 = 45;
qParser.T__45 = 46;
qParser.T__46 = 47;
qParser.T__47 = 48;
qParser.T__48 = 49;
qParser.T__49 = 50;
qParser.T__50 = 51;
qParser.T__51 = 52;
qParser.T__52 = 53;
qParser.T__53 = 54;
qParser.T__54 = 55;
qParser.T__55 = 56;
qParser.T__56 = 57;
qParser.T__57 = 58;
qParser.T__58 = 59;
qParser.T__59 = 60;
qParser.T__60 = 61;
qParser.T__61 = 62;
qParser.T__62 = 63;
qParser.T__63 = 64;
qParser.T__64 = 65;
qParser.T__65 = 66;
qParser.T__66 = 67;
qParser.T__67 = 68;
qParser.T__68 = 69;
qParser.T__69 = 70;
qParser.T__70 = 71;
qParser.T__71 = 72;
qParser.T__72 = 73;
qParser.T__73 = 74;
qParser.T__74 = 75;
qParser.T__75 = 76;
qParser.T__76 = 77;
qParser.T__77 = 78;
qParser.T__78 = 79;
qParser.T__79 = 80;
qParser.T__80 = 81;
qParser.T__81 = 82;
qParser.T__82 = 83;
qParser.T__83 = 84;
qParser.T__84 = 85;
qParser.T__85 = 86;
qParser.T__86 = 87;
qParser.T__87 = 88;
qParser.T__88 = 89;
qParser.T__89 = 90;
qParser.T__90 = 91;
qParser.T__91 = 92;
qParser.T__92 = 93;
qParser.T__93 = 94;
qParser.T__94 = 95;
qParser.T__95 = 96;
qParser.T__96 = 97;
qParser.T__97 = 98;
qParser.T__98 = 99;
qParser.T__99 = 100;
qParser.T__100 = 101;
qParser.T__101 = 102;
qParser.T__102 = 103;
qParser.T__103 = 104;
qParser.T__104 = 105;
qParser.T__105 = 106;
qParser.T__106 = 107;
qParser.T__107 = 108;
qParser.T__108 = 109;
qParser.T__109 = 110;
qParser.T__110 = 111;
qParser.T__111 = 112;
qParser.T__112 = 113;
qParser.T__113 = 114;
qParser.T__114 = 115;
qParser.T__115 = 116;
qParser.T__116 = 117;
qParser.T__117 = 118;
qParser.T__118 = 119;
qParser.T__119 = 120;
qParser.T__120 = 121;
qParser.T__121 = 122;
qParser.T__122 = 123;
qParser.T__123 = 124;
qParser.T__124 = 125;
qParser.T__125 = 126;
qParser.T__126 = 127;
qParser.T__127 = 128;
qParser.T__128 = 129;
qParser.T__129 = 130;
qParser.T__130 = 131;
qParser.T__131 = 132;
qParser.T__132 = 133;
qParser.T__133 = 134;
qParser.T__134 = 135;
qParser.T__135 = 136;
qParser.T__136 = 137;
qParser.T__137 = 138;
qParser.T__138 = 139;
qParser.T__139 = 140;
qParser.T__140 = 141;
qParser.T__141 = 142;
qParser.T__142 = 143;
qParser.T__143 = 144;
qParser.T__144 = 145;
qParser.T__145 = 146;
qParser.T__146 = 147;
qParser.T__147 = 148;
qParser.T__148 = 149;
qParser.PLUS = 150;
qParser.MINUS = 151;
qParser.MULTIPLY = 152;
qParser.DIVIDE = 153;
qParser.EQUALS = 154;
qParser.NOT_EQUALS = 155;
qParser.LESS_THAN = 156;
qParser.LESS_THAN_OR_EQUAL = 157;
qParser.GREATER_THAN = 158;
qParser.GREATER_THAN_OR_EQUAL = 159;
qParser.AND = 160;
qParser.OR = 161;
qParser.NOT = 162;
qParser.INT = 163;
qParser.LONG = 164;
qParser.FLOAT = 165;
qParser.DOUBLE = 166;
qParser.CHAR = 167;
qParser.SYMBOL = 168;
qParser.TIMESTAMP = 169;
qParser.ID = 170;
qParser.DIGIT = 171;
qParser.NUMBER = 172;
qParser.STRING = 173;
qParser.ESC = 174;
qParser.WS = 175;

qParser.RULE_variable_declaration = 0;
qParser.RULE_storage_type = 1;
qParser.RULE_variable_name = 2;
qParser.RULE_expression = 3;
qParser.RULE_or_expression = 4;
qParser.RULE_and_expression = 5;
qParser.RULE_comparison_expression = 6;
qParser.RULE_additive_expression = 7;
qParser.RULE_multiplicative_expression = 8;
qParser.RULE_unary_expression = 9;
qParser.RULE_primary_expression = 10;
qParser.RULE_abs_function = 11;
qParser.RULE_acos_function = 12;
qParser.RULE_all_function = 13;
qParser.RULE_and_function = 14;
qParser.RULE_any_function = 15;
qParser.RULE_asin_function = 16;
qParser.RULE_atan_function = 17;
qParser.RULE_avg_function = 18;
qParser.RULE_ceiling_function = 19;
qParser.RULE_cos_function = 20;
qParser.RULE_count_function = 21;
qParser.RULE_cross_function = 22;
qParser.RULE_delete_function = 23;
qParser.RULE_deltas_function = 24;
qParser.RULE_dev_function = 25;
qParser.RULE_distinct_function = 26;
qParser.RULE_div_function = 27;
qParser.RULE_drop_function = 28;
qParser.RULE_each_function = 29;
qParser.RULE_enlist_function = 30;
qParser.RULE_eval_function = 31;
qParser.RULE_except_function = 32;
qParser.RULE_exec_function = 33;
qParser.RULE_exp_function = 34;
qParser.RULE_fby_function = 35;
qParser.RULE_fill_function = 36;
qParser.RULE_first_function = 37;
qParser.RULE_flip_function = 38;
qParser.RULE_floor_function = 39;
qParser.RULE_get_function = 40;
qParser.RULE_group_function = 41;
qParser.RULE_gtime_function = 42;
qParser.RULE_hclose_function = 43;
qParser.RULE_hcount_function = 44;
qParser.RULE_hdel_function = 45;
qParser.RULE_hopen_function = 46;
qParser.RULE_hsym_function = 47;
qParser.RULE_iasc_function = 48;
qParser.RULE_idesc_function = 49;
qParser.RULE_ij_function = 50;
qParser.RULE_in_function = 51;
qParser.RULE_insert_function = 52;
qParser.RULE_inter_function = 53;
qParser.RULE_inv_function = 54;
qParser.RULE_keys_function = 55;
qParser.RULE_last_function = 56;
qParser.RULE_like_function = 57;
qParser.RULE_list_function = 58;
qParser.RULE_lj_function = 59;
qParser.RULE_load_function = 60;
qParser.RULE_log_function = 61;
qParser.RULE_lower_function = 62;
qParser.RULE_lsq_function = 63;
qParser.RULE_ltime_function = 64;
qParser.RULE_ltrim_function = 65;
qParser.RULE_mavg_function = 66;
qParser.RULE_max_function = 67;
qParser.RULE_maxs_function = 68;
qParser.RULE_mcount_function = 69;
qParser.RULE_md5_function = 70;
qParser.RULE_mdev_function = 71;
qParser.RULE_med_function = 72;
qParser.RULE_meta_function = 73;
qParser.RULE_min_function = 74;
qParser.RULE_mins_function = 75;
qParser.RULE_mmax_function = 76;
qParser.RULE_mmin_function = 77;
qParser.RULE_mmu_function = 78;
qParser.RULE_mod_function = 79;
qParser.RULE_msum_function = 80;
qParser.RULE_neg_function = 81;
qParser.RULE_next_function = 82;
qParser.RULE_not_function = 83;
qParser.RULE_null_function = 84;
qParser.RULE_or_function = 85;
qParser.RULE_over_function = 86;
qParser.RULE_parse_function = 87;
qParser.RULE_peach_function = 88;
qParser.RULE_pj_function = 89;
qParser.RULE_plist_function = 90;
qParser.RULE_prd_function = 91;
qParser.RULE_prev_function = 92;
qParser.RULE_prior_function = 93;
qParser.RULE_rand_function = 94;
qParser.RULE_rank_function = 95;
qParser.RULE_ratios_function = 96;
qParser.RULE_raze_function = 97;
qParser.RULE_read0_function = 98;
qParser.RULE_read1_function = 99;
qParser.RULE_reciprocal_function = 100;
qParser.RULE_reverse_function = 101;
qParser.RULE_rload_function = 102;
qParser.RULE_rotate_function = 103;
qParser.RULE_rsave_function = 104;
qParser.RULE_rtrim_function = 105;
qParser.RULE_save_function = 106;
qParser.RULE_scan_function = 107;
qParser.RULE_select_function = 108;
qParser.RULE_set_function = 109;
qParser.RULE_show_function = 110;
qParser.RULE_signum_function = 111;
qParser.RULE_sin_function = 112;
qParser.RULE_sqrt_function = 113;
qParser.RULE_ssr_function = 114;
qParser.RULE_string_function = 115;
qParser.RULE_sublist_function = 116;
qParser.RULE_sum_function = 117;
qParser.RULE_sums_function = 118;
qParser.RULE_sv_function = 119;
qParser.RULE_system_function = 120;
qParser.RULE_tables_function = 121;
qParser.RULE_tan_function = 122;
qParser.RULE_til_function = 123;
qParser.RULE_trim_function = 124;
qParser.RULE_type_function = 125;
qParser.RULE_uj_function = 126;
qParser.RULE_ungroup_function = 127;
qParser.RULE_union_function = 128;
qParser.RULE_update_function = 129;
qParser.RULE_upper_function = 130;
qParser.RULE_upsert_function = 131;
qParser.RULE_value_function = 132;
qParser.RULE_var_function = 133;
qParser.RULE_view_function = 134;
qParser.RULE_vs_function = 135;
qParser.RULE_wavg_function = 136;
qParser.RULE_where_function = 137;
qParser.RULE_within_function = 138;
qParser.RULE_wj1_function = 139;
qParser.RULE_wj2_function = 140;
qParser.RULE_ww_function = 141;
qParser.RULE_xasc_function = 142;
qParser.RULE_xbar_function = 143;
qParser.RULE_xcols_function = 144;
qParser.RULE_xdesc_function = 145;
qParser.RULE_xexp_function = 146;
qParser.RULE_xgroup_function = 147;
qParser.RULE_xkey_function = 148;
qParser.RULE_xlog_function = 149;
qParser.RULE_xprev_function = 150;
qParser.RULE_xrank_function = 151;
qParser.RULE_xranked_function = 152;
qParser.RULE_xrecs_function = 153;
qParser.RULE_xrows_function = 154;
qParser.RULE_xss_function = 155;
qParser.RULE_xtype_function = 156;
qParser.RULE_yield_function = 157;
qParser.RULE_zip_function = 158;


function Variable_declarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_variable_declaration;
    return this;
}

Variable_declarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Variable_declarationContext.prototype.constructor = Variable_declarationContext;

Variable_declarationContext.prototype.storage_type = function() {
    return this.getTypedRuleContext(Storage_typeContext,0);
};

Variable_declarationContext.prototype.variable_name = function() {
    return this.getTypedRuleContext(Variable_nameContext,0);
};

Variable_declarationContext.prototype.EQUALS = function() {
    return this.getToken(qParser.EQUALS, 0);
};

Variable_declarationContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Variable_declarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterVariable_declaration(this);
	}
};

Variable_declarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitVariable_declaration(this);
	}
};

Variable_declarationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitVariable_declaration(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Variable_declarationContext = Variable_declarationContext;

qParser.prototype.variable_declaration = function() {

    var localctx = new Variable_declarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, qParser.RULE_variable_declaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 318;
        this.storage_type();
        this.state = 319;
        this.variable_name();
        this.state = 320;
        this.match(qParser.EQUALS);
        this.state = 321;
        this.expression();
        this.state = 322;
        this.match(qParser.T__0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Storage_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_storage_type;
    return this;
}

Storage_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Storage_typeContext.prototype.constructor = Storage_typeContext;

Storage_typeContext.prototype.INT = function() {
    return this.getToken(qParser.INT, 0);
};

Storage_typeContext.prototype.LONG = function() {
    return this.getToken(qParser.LONG, 0);
};

Storage_typeContext.prototype.FLOAT = function() {
    return this.getToken(qParser.FLOAT, 0);
};

Storage_typeContext.prototype.DOUBLE = function() {
    return this.getToken(qParser.DOUBLE, 0);
};

Storage_typeContext.prototype.CHAR = function() {
    return this.getToken(qParser.CHAR, 0);
};

Storage_typeContext.prototype.SYMBOL = function() {
    return this.getToken(qParser.SYMBOL, 0);
};

Storage_typeContext.prototype.TIMESTAMP = function() {
    return this.getToken(qParser.TIMESTAMP, 0);
};

Storage_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterStorage_type(this);
	}
};

Storage_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitStorage_type(this);
	}
};

Storage_typeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitStorage_type(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Storage_typeContext = Storage_typeContext;

qParser.prototype.storage_type = function() {

    var localctx = new Storage_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, qParser.RULE_storage_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 324;
        _la = this._input.LA(1);
        if(!(((((_la - 163)) & ~0x1f) == 0 && ((1 << (_la - 163)) & ((1 << (qParser.INT - 163)) | (1 << (qParser.LONG - 163)) | (1 << (qParser.FLOAT - 163)) | (1 << (qParser.DOUBLE - 163)) | (1 << (qParser.CHAR - 163)) | (1 << (qParser.SYMBOL - 163)) | (1 << (qParser.TIMESTAMP - 163)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Variable_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_variable_name;
    return this;
}

Variable_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Variable_nameContext.prototype.constructor = Variable_nameContext;

Variable_nameContext.prototype.ID = function() {
    return this.getToken(qParser.ID, 0);
};

Variable_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterVariable_name(this);
	}
};

Variable_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitVariable_name(this);
	}
};

Variable_nameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitVariable_name(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Variable_nameContext = Variable_nameContext;

qParser.prototype.variable_name = function() {

    var localctx = new Variable_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, qParser.RULE_variable_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 326;
        this.match(qParser.ID);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function ExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_expression;
    return this;
}

ExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionContext.prototype.constructor = ExpressionContext;

ExpressionContext.prototype.or_expression = function() {
    return this.getTypedRuleContext(Or_expressionContext,0);
};

ExpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterExpression(this);
	}
};

ExpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitExpression(this);
	}
};

ExpressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitExpression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.ExpressionContext = ExpressionContext;

qParser.prototype.expression = function() {

    var localctx = new ExpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, qParser.RULE_expression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 328;
        this.or_expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Or_expressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_or_expression;
    return this;
}

Or_expressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Or_expressionContext.prototype.constructor = Or_expressionContext;

Or_expressionContext.prototype.and_expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(And_expressionContext);
    } else {
        return this.getTypedRuleContext(And_expressionContext,i);
    }
};

Or_expressionContext.prototype.OR = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(qParser.OR);
    } else {
        return this.getToken(qParser.OR, i);
    }
};


Or_expressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterOr_expression(this);
	}
};

Or_expressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitOr_expression(this);
	}
};

Or_expressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitOr_expression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Or_expressionContext = Or_expressionContext;

qParser.prototype.or_expression = function() {

    var localctx = new Or_expressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, qParser.RULE_or_expression);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 330;
        this.and_expression();
        this.state = 335;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===qParser.OR) {
            this.state = 331;
            this.match(qParser.OR);
            this.state = 332;
            this.and_expression();
            this.state = 337;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function And_expressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_and_expression;
    return this;
}

And_expressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
And_expressionContext.prototype.constructor = And_expressionContext;

And_expressionContext.prototype.comparison_expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Comparison_expressionContext);
    } else {
        return this.getTypedRuleContext(Comparison_expressionContext,i);
    }
};

And_expressionContext.prototype.AND = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(qParser.AND);
    } else {
        return this.getToken(qParser.AND, i);
    }
};


And_expressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAnd_expression(this);
	}
};

And_expressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAnd_expression(this);
	}
};

And_expressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAnd_expression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.And_expressionContext = And_expressionContext;

qParser.prototype.and_expression = function() {

    var localctx = new And_expressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, qParser.RULE_and_expression);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 338;
        this.comparison_expression();
        this.state = 343;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===qParser.AND) {
            this.state = 339;
            this.match(qParser.AND);
            this.state = 340;
            this.comparison_expression();
            this.state = 345;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Comparison_expressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_comparison_expression;
    return this;
}

Comparison_expressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Comparison_expressionContext.prototype.constructor = Comparison_expressionContext;

Comparison_expressionContext.prototype.additive_expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Additive_expressionContext);
    } else {
        return this.getTypedRuleContext(Additive_expressionContext,i);
    }
};

Comparison_expressionContext.prototype.EQUALS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(qParser.EQUALS);
    } else {
        return this.getToken(qParser.EQUALS, i);
    }
};


Comparison_expressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterComparison_expression(this);
	}
};

Comparison_expressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitComparison_expression(this);
	}
};

Comparison_expressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitComparison_expression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Comparison_expressionContext = Comparison_expressionContext;

qParser.prototype.comparison_expression = function() {

    var localctx = new Comparison_expressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, qParser.RULE_comparison_expression);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 346;
        this.additive_expression();
        this.state = 351;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===qParser.EQUALS) {
            this.state = 347;
            this.match(qParser.EQUALS);
            this.state = 348;
            this.additive_expression();
            this.state = 353;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Additive_expressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_additive_expression;
    return this;
}

Additive_expressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Additive_expressionContext.prototype.constructor = Additive_expressionContext;

Additive_expressionContext.prototype.multiplicative_expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Multiplicative_expressionContext);
    } else {
        return this.getTypedRuleContext(Multiplicative_expressionContext,i);
    }
};

Additive_expressionContext.prototype.PLUS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(qParser.PLUS);
    } else {
        return this.getToken(qParser.PLUS, i);
    }
};


Additive_expressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAdditive_expression(this);
	}
};

Additive_expressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAdditive_expression(this);
	}
};

Additive_expressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAdditive_expression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Additive_expressionContext = Additive_expressionContext;

qParser.prototype.additive_expression = function() {

    var localctx = new Additive_expressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, qParser.RULE_additive_expression);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 354;
        this.multiplicative_expression();
        this.state = 359;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===qParser.PLUS) {
            this.state = 355;
            this.match(qParser.PLUS);
            this.state = 356;
            this.multiplicative_expression();
            this.state = 361;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Multiplicative_expressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_multiplicative_expression;
    return this;
}

Multiplicative_expressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Multiplicative_expressionContext.prototype.constructor = Multiplicative_expressionContext;

Multiplicative_expressionContext.prototype.unary_expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Unary_expressionContext);
    } else {
        return this.getTypedRuleContext(Unary_expressionContext,i);
    }
};

Multiplicative_expressionContext.prototype.MULTIPLY = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(qParser.MULTIPLY);
    } else {
        return this.getToken(qParser.MULTIPLY, i);
    }
};


Multiplicative_expressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMultiplicative_expression(this);
	}
};

Multiplicative_expressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMultiplicative_expression(this);
	}
};

Multiplicative_expressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMultiplicative_expression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Multiplicative_expressionContext = Multiplicative_expressionContext;

qParser.prototype.multiplicative_expression = function() {

    var localctx = new Multiplicative_expressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, qParser.RULE_multiplicative_expression);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 362;
        this.unary_expression();
        this.state = 367;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===qParser.MULTIPLY) {
            this.state = 363;
            this.match(qParser.MULTIPLY);
            this.state = 364;
            this.unary_expression();
            this.state = 369;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Unary_expressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_unary_expression;
    return this;
}

Unary_expressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Unary_expressionContext.prototype.constructor = Unary_expressionContext;

Unary_expressionContext.prototype.primary_expression = function() {
    return this.getTypedRuleContext(Primary_expressionContext,0);
};

Unary_expressionContext.prototype.MINUS = function() {
    return this.getToken(qParser.MINUS, 0);
};

Unary_expressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterUnary_expression(this);
	}
};

Unary_expressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitUnary_expression(this);
	}
};

Unary_expressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitUnary_expression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Unary_expressionContext = Unary_expressionContext;

qParser.prototype.unary_expression = function() {

    var localctx = new Unary_expressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, qParser.RULE_unary_expression);
    try {
        this.state = 373;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case qParser.T__1:
        case qParser.ID:
        case qParser.NUMBER:
        case qParser.STRING:
            this.enterOuterAlt(localctx, 1);
            this.state = 370;
            this.primary_expression();
            break;
        case qParser.MINUS:
            this.enterOuterAlt(localctx, 2);
            this.state = 371;
            this.match(qParser.MINUS);
            this.state = 372;
            this.primary_expression();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Primary_expressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_primary_expression;
    return this;
}

Primary_expressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Primary_expressionContext.prototype.constructor = Primary_expressionContext;

Primary_expressionContext.prototype.NUMBER = function() {
    return this.getToken(qParser.NUMBER, 0);
};

Primary_expressionContext.prototype.STRING = function() {
    return this.getToken(qParser.STRING, 0);
};

Primary_expressionContext.prototype.variable_name = function() {
    return this.getTypedRuleContext(Variable_nameContext,0);
};

Primary_expressionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Primary_expressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterPrimary_expression(this);
	}
};

Primary_expressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitPrimary_expression(this);
	}
};

Primary_expressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitPrimary_expression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Primary_expressionContext = Primary_expressionContext;

qParser.prototype.primary_expression = function() {

    var localctx = new Primary_expressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, qParser.RULE_primary_expression);
    try {
        this.state = 382;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case qParser.NUMBER:
            this.enterOuterAlt(localctx, 1);
            this.state = 375;
            this.match(qParser.NUMBER);
            break;
        case qParser.STRING:
            this.enterOuterAlt(localctx, 2);
            this.state = 376;
            this.match(qParser.STRING);
            break;
        case qParser.ID:
            this.enterOuterAlt(localctx, 3);
            this.state = 377;
            this.variable_name();
            break;
        case qParser.T__1:
            this.enterOuterAlt(localctx, 4);
            this.state = 378;
            this.match(qParser.T__1);
            this.state = 379;
            this.expression();
            this.state = 380;
            this.match(qParser.T__2);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Abs_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_abs_function;
    return this;
}

Abs_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Abs_functionContext.prototype.constructor = Abs_functionContext;

Abs_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Abs_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAbs_function(this);
	}
};

Abs_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAbs_function(this);
	}
};

Abs_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAbs_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Abs_functionContext = Abs_functionContext;

qParser.prototype.abs_function = function() {

    var localctx = new Abs_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, qParser.RULE_abs_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 384;
        this.match(qParser.T__3);
        this.state = 385;
        this.match(qParser.T__1);
        this.state = 386;
        this.expression();
        this.state = 387;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Acos_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_acos_function;
    return this;
}

Acos_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Acos_functionContext.prototype.constructor = Acos_functionContext;

Acos_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Acos_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAcos_function(this);
	}
};

Acos_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAcos_function(this);
	}
};

Acos_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAcos_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Acos_functionContext = Acos_functionContext;

qParser.prototype.acos_function = function() {

    var localctx = new Acos_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, qParser.RULE_acos_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 389;
        this.match(qParser.T__4);
        this.state = 390;
        this.match(qParser.T__1);
        this.state = 391;
        this.expression();
        this.state = 392;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function All_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_all_function;
    return this;
}

All_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
All_functionContext.prototype.constructor = All_functionContext;

All_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

All_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAll_function(this);
	}
};

All_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAll_function(this);
	}
};

All_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAll_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.All_functionContext = All_functionContext;

qParser.prototype.all_function = function() {

    var localctx = new All_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, qParser.RULE_all_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 394;
        this.match(qParser.T__5);
        this.state = 395;
        this.match(qParser.T__1);
        this.state = 396;
        this.expression();
        this.state = 397;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function And_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_and_function;
    return this;
}

And_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
And_functionContext.prototype.constructor = And_functionContext;

And_functionContext.prototype.AND = function() {
    return this.getToken(qParser.AND, 0);
};

And_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

And_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAnd_function(this);
	}
};

And_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAnd_function(this);
	}
};

And_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAnd_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.And_functionContext = And_functionContext;

qParser.prototype.and_function = function() {

    var localctx = new And_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, qParser.RULE_and_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 399;
        this.match(qParser.AND);
        this.state = 400;
        this.match(qParser.T__1);
        this.state = 401;
        this.expression();
        this.state = 402;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Any_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_any_function;
    return this;
}

Any_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Any_functionContext.prototype.constructor = Any_functionContext;

Any_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Any_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAny_function(this);
	}
};

Any_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAny_function(this);
	}
};

Any_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAny_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Any_functionContext = Any_functionContext;

qParser.prototype.any_function = function() {

    var localctx = new Any_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, qParser.RULE_any_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 404;
        this.match(qParser.T__6);
        this.state = 405;
        this.match(qParser.T__1);
        this.state = 406;
        this.expression();
        this.state = 407;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Asin_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_asin_function;
    return this;
}

Asin_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Asin_functionContext.prototype.constructor = Asin_functionContext;

Asin_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Asin_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAsin_function(this);
	}
};

Asin_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAsin_function(this);
	}
};

Asin_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAsin_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Asin_functionContext = Asin_functionContext;

qParser.prototype.asin_function = function() {

    var localctx = new Asin_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, qParser.RULE_asin_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 409;
        this.match(qParser.T__7);
        this.state = 410;
        this.match(qParser.T__1);
        this.state = 411;
        this.expression();
        this.state = 412;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Atan_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_atan_function;
    return this;
}

Atan_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Atan_functionContext.prototype.constructor = Atan_functionContext;

Atan_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Atan_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAtan_function(this);
	}
};

Atan_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAtan_function(this);
	}
};

Atan_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAtan_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Atan_functionContext = Atan_functionContext;

qParser.prototype.atan_function = function() {

    var localctx = new Atan_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, qParser.RULE_atan_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 414;
        this.match(qParser.T__8);
        this.state = 415;
        this.match(qParser.T__1);
        this.state = 416;
        this.expression();
        this.state = 417;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Avg_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_avg_function;
    return this;
}

Avg_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Avg_functionContext.prototype.constructor = Avg_functionContext;

Avg_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Avg_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterAvg_function(this);
	}
};

Avg_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitAvg_function(this);
	}
};

Avg_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitAvg_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Avg_functionContext = Avg_functionContext;

qParser.prototype.avg_function = function() {

    var localctx = new Avg_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, qParser.RULE_avg_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 419;
        this.match(qParser.T__9);
        this.state = 420;
        this.match(qParser.T__1);
        this.state = 421;
        this.expression();
        this.state = 422;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Ceiling_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_ceiling_function;
    return this;
}

Ceiling_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ceiling_functionContext.prototype.constructor = Ceiling_functionContext;

Ceiling_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Ceiling_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterCeiling_function(this);
	}
};

Ceiling_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitCeiling_function(this);
	}
};

Ceiling_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitCeiling_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Ceiling_functionContext = Ceiling_functionContext;

qParser.prototype.ceiling_function = function() {

    var localctx = new Ceiling_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, qParser.RULE_ceiling_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 424;
        this.match(qParser.T__10);
        this.state = 425;
        this.match(qParser.T__1);
        this.state = 426;
        this.expression();
        this.state = 427;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Cos_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_cos_function;
    return this;
}

Cos_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Cos_functionContext.prototype.constructor = Cos_functionContext;

Cos_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Cos_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterCos_function(this);
	}
};

Cos_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitCos_function(this);
	}
};

Cos_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitCos_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Cos_functionContext = Cos_functionContext;

qParser.prototype.cos_function = function() {

    var localctx = new Cos_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, qParser.RULE_cos_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 429;
        this.match(qParser.T__11);
        this.state = 430;
        this.match(qParser.T__1);
        this.state = 431;
        this.expression();
        this.state = 432;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Count_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_count_function;
    return this;
}

Count_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Count_functionContext.prototype.constructor = Count_functionContext;

Count_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Count_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterCount_function(this);
	}
};

Count_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitCount_function(this);
	}
};

Count_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitCount_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Count_functionContext = Count_functionContext;

qParser.prototype.count_function = function() {

    var localctx = new Count_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, qParser.RULE_count_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 434;
        this.match(qParser.T__12);
        this.state = 435;
        this.match(qParser.T__1);
        this.state = 436;
        this.expression();
        this.state = 437;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Cross_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_cross_function;
    return this;
}

Cross_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Cross_functionContext.prototype.constructor = Cross_functionContext;

Cross_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Cross_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterCross_function(this);
	}
};

Cross_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitCross_function(this);
	}
};

Cross_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitCross_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Cross_functionContext = Cross_functionContext;

qParser.prototype.cross_function = function() {

    var localctx = new Cross_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, qParser.RULE_cross_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 439;
        this.match(qParser.T__13);
        this.state = 440;
        this.match(qParser.T__1);
        this.state = 441;
        this.expression();
        this.state = 442;
        this.match(qParser.T__14);
        this.state = 443;
        this.expression();
        this.state = 444;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Delete_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_delete_function;
    return this;
}

Delete_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Delete_functionContext.prototype.constructor = Delete_functionContext;

Delete_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Delete_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterDelete_function(this);
	}
};

Delete_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitDelete_function(this);
	}
};

Delete_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitDelete_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Delete_functionContext = Delete_functionContext;

qParser.prototype.delete_function = function() {

    var localctx = new Delete_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, qParser.RULE_delete_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 446;
        this.match(qParser.T__15);
        this.state = 447;
        this.match(qParser.T__1);
        this.state = 448;
        this.expression();
        this.state = 449;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Deltas_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_deltas_function;
    return this;
}

Deltas_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Deltas_functionContext.prototype.constructor = Deltas_functionContext;

Deltas_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Deltas_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterDeltas_function(this);
	}
};

Deltas_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitDeltas_function(this);
	}
};

Deltas_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitDeltas_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Deltas_functionContext = Deltas_functionContext;

qParser.prototype.deltas_function = function() {

    var localctx = new Deltas_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, qParser.RULE_deltas_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 451;
        this.match(qParser.T__16);
        this.state = 452;
        this.match(qParser.T__1);
        this.state = 453;
        this.expression();
        this.state = 454;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Dev_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_dev_function;
    return this;
}

Dev_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Dev_functionContext.prototype.constructor = Dev_functionContext;

Dev_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Dev_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterDev_function(this);
	}
};

Dev_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitDev_function(this);
	}
};

Dev_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitDev_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Dev_functionContext = Dev_functionContext;

qParser.prototype.dev_function = function() {

    var localctx = new Dev_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, qParser.RULE_dev_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 456;
        this.match(qParser.T__17);
        this.state = 457;
        this.match(qParser.T__1);
        this.state = 458;
        this.expression();
        this.state = 459;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Distinct_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_distinct_function;
    return this;
}

Distinct_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Distinct_functionContext.prototype.constructor = Distinct_functionContext;

Distinct_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Distinct_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterDistinct_function(this);
	}
};

Distinct_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitDistinct_function(this);
	}
};

Distinct_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitDistinct_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Distinct_functionContext = Distinct_functionContext;

qParser.prototype.distinct_function = function() {

    var localctx = new Distinct_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, qParser.RULE_distinct_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 461;
        this.match(qParser.T__18);
        this.state = 462;
        this.match(qParser.T__1);
        this.state = 463;
        this.expression();
        this.state = 464;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Div_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_div_function;
    return this;
}

Div_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Div_functionContext.prototype.constructor = Div_functionContext;

Div_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Div_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterDiv_function(this);
	}
};

Div_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitDiv_function(this);
	}
};

Div_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitDiv_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Div_functionContext = Div_functionContext;

qParser.prototype.div_function = function() {

    var localctx = new Div_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, qParser.RULE_div_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 466;
        this.match(qParser.T__19);
        this.state = 467;
        this.match(qParser.T__1);
        this.state = 468;
        this.expression();
        this.state = 469;
        this.match(qParser.T__14);
        this.state = 470;
        this.expression();
        this.state = 471;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Drop_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_drop_function;
    return this;
}

Drop_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Drop_functionContext.prototype.constructor = Drop_functionContext;

Drop_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Drop_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterDrop_function(this);
	}
};

Drop_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitDrop_function(this);
	}
};

Drop_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitDrop_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Drop_functionContext = Drop_functionContext;

qParser.prototype.drop_function = function() {

    var localctx = new Drop_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, qParser.RULE_drop_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 473;
        this.match(qParser.T__20);
        this.state = 474;
        this.match(qParser.T__1);
        this.state = 475;
        this.expression();
        this.state = 476;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Each_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_each_function;
    return this;
}

Each_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Each_functionContext.prototype.constructor = Each_functionContext;

Each_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Each_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterEach_function(this);
	}
};

Each_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitEach_function(this);
	}
};

Each_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitEach_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Each_functionContext = Each_functionContext;

qParser.prototype.each_function = function() {

    var localctx = new Each_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, qParser.RULE_each_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 478;
        this.match(qParser.T__21);
        this.state = 479;
        this.match(qParser.T__1);
        this.state = 480;
        this.expression();
        this.state = 481;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Enlist_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_enlist_function;
    return this;
}

Enlist_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Enlist_functionContext.prototype.constructor = Enlist_functionContext;

Enlist_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Enlist_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterEnlist_function(this);
	}
};

Enlist_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitEnlist_function(this);
	}
};

Enlist_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitEnlist_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Enlist_functionContext = Enlist_functionContext;

qParser.prototype.enlist_function = function() {

    var localctx = new Enlist_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, qParser.RULE_enlist_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 483;
        this.match(qParser.T__22);
        this.state = 484;
        this.match(qParser.T__1);
        this.state = 485;
        this.expression();
        this.state = 486;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Eval_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_eval_function;
    return this;
}

Eval_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Eval_functionContext.prototype.constructor = Eval_functionContext;

Eval_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Eval_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterEval_function(this);
	}
};

Eval_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitEval_function(this);
	}
};

Eval_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitEval_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Eval_functionContext = Eval_functionContext;

qParser.prototype.eval_function = function() {

    var localctx = new Eval_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, qParser.RULE_eval_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 488;
        this.match(qParser.T__23);
        this.state = 489;
        this.match(qParser.T__1);
        this.state = 490;
        this.expression();
        this.state = 491;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Except_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_except_function;
    return this;
}

Except_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Except_functionContext.prototype.constructor = Except_functionContext;

Except_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Except_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterExcept_function(this);
	}
};

Except_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitExcept_function(this);
	}
};

Except_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitExcept_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Except_functionContext = Except_functionContext;

qParser.prototype.except_function = function() {

    var localctx = new Except_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, qParser.RULE_except_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 493;
        this.match(qParser.T__24);
        this.state = 494;
        this.match(qParser.T__1);
        this.state = 495;
        this.expression();
        this.state = 496;
        this.match(qParser.T__14);
        this.state = 497;
        this.expression();
        this.state = 498;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Exec_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_exec_function;
    return this;
}

Exec_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Exec_functionContext.prototype.constructor = Exec_functionContext;

Exec_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Exec_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterExec_function(this);
	}
};

Exec_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitExec_function(this);
	}
};

Exec_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitExec_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Exec_functionContext = Exec_functionContext;

qParser.prototype.exec_function = function() {

    var localctx = new Exec_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 66, qParser.RULE_exec_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 500;
        this.match(qParser.T__25);
        this.state = 501;
        this.match(qParser.T__1);
        this.state = 502;
        this.expression();
        this.state = 503;
        this.match(qParser.T__14);
        this.state = 504;
        this.expression();
        this.state = 505;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Exp_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_exp_function;
    return this;
}

Exp_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Exp_functionContext.prototype.constructor = Exp_functionContext;

Exp_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Exp_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterExp_function(this);
	}
};

Exp_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitExp_function(this);
	}
};

Exp_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitExp_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Exp_functionContext = Exp_functionContext;

qParser.prototype.exp_function = function() {

    var localctx = new Exp_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 68, qParser.RULE_exp_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 507;
        this.match(qParser.T__26);
        this.state = 508;
        this.match(qParser.T__1);
        this.state = 509;
        this.expression();
        this.state = 510;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Fby_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_fby_function;
    return this;
}

Fby_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Fby_functionContext.prototype.constructor = Fby_functionContext;

Fby_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Fby_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterFby_function(this);
	}
};

Fby_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitFby_function(this);
	}
};

Fby_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitFby_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Fby_functionContext = Fby_functionContext;

qParser.prototype.fby_function = function() {

    var localctx = new Fby_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, qParser.RULE_fby_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 512;
        this.match(qParser.T__27);
        this.state = 513;
        this.match(qParser.T__1);
        this.state = 514;
        this.expression();
        this.state = 515;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Fill_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_fill_function;
    return this;
}

Fill_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Fill_functionContext.prototype.constructor = Fill_functionContext;

Fill_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Fill_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterFill_function(this);
	}
};

Fill_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitFill_function(this);
	}
};

Fill_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitFill_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Fill_functionContext = Fill_functionContext;

qParser.prototype.fill_function = function() {

    var localctx = new Fill_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, qParser.RULE_fill_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 517;
        this.match(qParser.T__28);
        this.state = 518;
        this.match(qParser.T__1);
        this.state = 519;
        this.expression();
        this.state = 520;
        this.match(qParser.T__14);
        this.state = 521;
        this.expression();
        this.state = 522;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function First_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_first_function;
    return this;
}

First_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
First_functionContext.prototype.constructor = First_functionContext;

First_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

First_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterFirst_function(this);
	}
};

First_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitFirst_function(this);
	}
};

First_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitFirst_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.First_functionContext = First_functionContext;

qParser.prototype.first_function = function() {

    var localctx = new First_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 74, qParser.RULE_first_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 524;
        this.match(qParser.T__29);
        this.state = 525;
        this.match(qParser.T__1);
        this.state = 526;
        this.expression();
        this.state = 527;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Flip_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_flip_function;
    return this;
}

Flip_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Flip_functionContext.prototype.constructor = Flip_functionContext;

Flip_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Flip_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterFlip_function(this);
	}
};

Flip_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitFlip_function(this);
	}
};

Flip_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitFlip_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Flip_functionContext = Flip_functionContext;

qParser.prototype.flip_function = function() {

    var localctx = new Flip_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 76, qParser.RULE_flip_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 529;
        this.match(qParser.T__30);
        this.state = 530;
        this.match(qParser.T__1);
        this.state = 531;
        this.expression();
        this.state = 532;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Floor_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_floor_function;
    return this;
}

Floor_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Floor_functionContext.prototype.constructor = Floor_functionContext;

Floor_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Floor_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterFloor_function(this);
	}
};

Floor_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitFloor_function(this);
	}
};

Floor_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitFloor_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Floor_functionContext = Floor_functionContext;

qParser.prototype.floor_function = function() {

    var localctx = new Floor_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 78, qParser.RULE_floor_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 534;
        this.match(qParser.T__31);
        this.state = 535;
        this.match(qParser.T__1);
        this.state = 536;
        this.expression();
        this.state = 537;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Get_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_get_function;
    return this;
}

Get_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Get_functionContext.prototype.constructor = Get_functionContext;

Get_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Get_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterGet_function(this);
	}
};

Get_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitGet_function(this);
	}
};

Get_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitGet_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Get_functionContext = Get_functionContext;

qParser.prototype.get_function = function() {

    var localctx = new Get_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, qParser.RULE_get_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 539;
        this.match(qParser.T__32);
        this.state = 540;
        this.match(qParser.T__1);
        this.state = 541;
        this.expression();
        this.state = 542;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Group_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_group_function;
    return this;
}

Group_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Group_functionContext.prototype.constructor = Group_functionContext;

Group_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Group_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterGroup_function(this);
	}
};

Group_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitGroup_function(this);
	}
};

Group_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitGroup_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Group_functionContext = Group_functionContext;

qParser.prototype.group_function = function() {

    var localctx = new Group_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, qParser.RULE_group_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 544;
        this.match(qParser.T__33);
        this.state = 545;
        this.match(qParser.T__1);
        this.state = 546;
        this.expression();
        this.state = 547;
        this.match(qParser.T__14);
        this.state = 548;
        this.expression();
        this.state = 549;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Gtime_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_gtime_function;
    return this;
}

Gtime_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Gtime_functionContext.prototype.constructor = Gtime_functionContext;

Gtime_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Gtime_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterGtime_function(this);
	}
};

Gtime_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitGtime_function(this);
	}
};

Gtime_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitGtime_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Gtime_functionContext = Gtime_functionContext;

qParser.prototype.gtime_function = function() {

    var localctx = new Gtime_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, qParser.RULE_gtime_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 551;
        this.match(qParser.T__34);
        this.state = 552;
        this.match(qParser.T__1);
        this.state = 553;
        this.expression();
        this.state = 554;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Hclose_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_hclose_function;
    return this;
}

Hclose_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hclose_functionContext.prototype.constructor = Hclose_functionContext;

Hclose_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Hclose_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterHclose_function(this);
	}
};

Hclose_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitHclose_function(this);
	}
};

Hclose_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitHclose_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Hclose_functionContext = Hclose_functionContext;

qParser.prototype.hclose_function = function() {

    var localctx = new Hclose_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 86, qParser.RULE_hclose_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 556;
        this.match(qParser.T__35);
        this.state = 557;
        this.match(qParser.T__1);
        this.state = 558;
        this.expression();
        this.state = 559;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Hcount_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_hcount_function;
    return this;
}

Hcount_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hcount_functionContext.prototype.constructor = Hcount_functionContext;

Hcount_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Hcount_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterHcount_function(this);
	}
};

Hcount_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitHcount_function(this);
	}
};

Hcount_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitHcount_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Hcount_functionContext = Hcount_functionContext;

qParser.prototype.hcount_function = function() {

    var localctx = new Hcount_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 88, qParser.RULE_hcount_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 561;
        this.match(qParser.T__36);
        this.state = 562;
        this.match(qParser.T__1);
        this.state = 563;
        this.expression();
        this.state = 564;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Hdel_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_hdel_function;
    return this;
}

Hdel_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hdel_functionContext.prototype.constructor = Hdel_functionContext;

Hdel_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Hdel_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterHdel_function(this);
	}
};

Hdel_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitHdel_function(this);
	}
};

Hdel_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitHdel_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Hdel_functionContext = Hdel_functionContext;

qParser.prototype.hdel_function = function() {

    var localctx = new Hdel_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, qParser.RULE_hdel_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 566;
        this.match(qParser.T__37);
        this.state = 567;
        this.match(qParser.T__1);
        this.state = 568;
        this.expression();
        this.state = 569;
        this.match(qParser.T__14);
        this.state = 570;
        this.expression();
        this.state = 571;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Hopen_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_hopen_function;
    return this;
}

Hopen_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hopen_functionContext.prototype.constructor = Hopen_functionContext;

Hopen_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Hopen_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterHopen_function(this);
	}
};

Hopen_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitHopen_function(this);
	}
};

Hopen_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitHopen_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Hopen_functionContext = Hopen_functionContext;

qParser.prototype.hopen_function = function() {

    var localctx = new Hopen_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 92, qParser.RULE_hopen_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 573;
        this.match(qParser.T__38);
        this.state = 574;
        this.match(qParser.T__1);
        this.state = 575;
        this.expression();
        this.state = 576;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Hsym_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_hsym_function;
    return this;
}

Hsym_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hsym_functionContext.prototype.constructor = Hsym_functionContext;

Hsym_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Hsym_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterHsym_function(this);
	}
};

Hsym_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitHsym_function(this);
	}
};

Hsym_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitHsym_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Hsym_functionContext = Hsym_functionContext;

qParser.prototype.hsym_function = function() {

    var localctx = new Hsym_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 94, qParser.RULE_hsym_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 578;
        this.match(qParser.T__39);
        this.state = 579;
        this.match(qParser.T__1);
        this.state = 580;
        this.expression();
        this.state = 581;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Iasc_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_iasc_function;
    return this;
}

Iasc_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Iasc_functionContext.prototype.constructor = Iasc_functionContext;

Iasc_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Iasc_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterIasc_function(this);
	}
};

Iasc_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitIasc_function(this);
	}
};

Iasc_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitIasc_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Iasc_functionContext = Iasc_functionContext;

qParser.prototype.iasc_function = function() {

    var localctx = new Iasc_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, qParser.RULE_iasc_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 583;
        this.match(qParser.T__40);
        this.state = 584;
        this.match(qParser.T__1);
        this.state = 585;
        this.expression();
        this.state = 586;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Idesc_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_idesc_function;
    return this;
}

Idesc_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Idesc_functionContext.prototype.constructor = Idesc_functionContext;

Idesc_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Idesc_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterIdesc_function(this);
	}
};

Idesc_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitIdesc_function(this);
	}
};

Idesc_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitIdesc_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Idesc_functionContext = Idesc_functionContext;

qParser.prototype.idesc_function = function() {

    var localctx = new Idesc_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, qParser.RULE_idesc_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 588;
        this.match(qParser.T__41);
        this.state = 589;
        this.match(qParser.T__1);
        this.state = 590;
        this.expression();
        this.state = 591;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Ij_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_ij_function;
    return this;
}

Ij_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ij_functionContext.prototype.constructor = Ij_functionContext;

Ij_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Ij_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterIj_function(this);
	}
};

Ij_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitIj_function(this);
	}
};

Ij_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitIj_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Ij_functionContext = Ij_functionContext;

qParser.prototype.ij_function = function() {

    var localctx = new Ij_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, qParser.RULE_ij_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 593;
        this.match(qParser.T__42);
        this.state = 594;
        this.match(qParser.T__1);
        this.state = 595;
        this.expression();
        this.state = 596;
        this.match(qParser.T__14);
        this.state = 597;
        this.expression();
        this.state = 598;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function In_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_in_function;
    return this;
}

In_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
In_functionContext.prototype.constructor = In_functionContext;

In_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

In_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterIn_function(this);
	}
};

In_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitIn_function(this);
	}
};

In_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitIn_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.In_functionContext = In_functionContext;

qParser.prototype.in_function = function() {

    var localctx = new In_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, qParser.RULE_in_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 600;
        this.match(qParser.T__43);
        this.state = 601;
        this.match(qParser.T__1);
        this.state = 602;
        this.expression();
        this.state = 603;
        this.match(qParser.T__14);
        this.state = 604;
        this.expression();
        this.state = 605;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Insert_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_insert_function;
    return this;
}

Insert_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Insert_functionContext.prototype.constructor = Insert_functionContext;

Insert_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Insert_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterInsert_function(this);
	}
};

Insert_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitInsert_function(this);
	}
};

Insert_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitInsert_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Insert_functionContext = Insert_functionContext;

qParser.prototype.insert_function = function() {

    var localctx = new Insert_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, qParser.RULE_insert_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 607;
        this.match(qParser.T__44);
        this.state = 608;
        this.match(qParser.T__1);
        this.state = 609;
        this.expression();
        this.state = 610;
        this.match(qParser.T__14);
        this.state = 611;
        this.expression();
        this.state = 612;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Inter_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_inter_function;
    return this;
}

Inter_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Inter_functionContext.prototype.constructor = Inter_functionContext;

Inter_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Inter_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterInter_function(this);
	}
};

Inter_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitInter_function(this);
	}
};

Inter_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitInter_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Inter_functionContext = Inter_functionContext;

qParser.prototype.inter_function = function() {

    var localctx = new Inter_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, qParser.RULE_inter_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 614;
        this.match(qParser.T__45);
        this.state = 615;
        this.match(qParser.T__1);
        this.state = 616;
        this.expression();
        this.state = 617;
        this.match(qParser.T__14);
        this.state = 618;
        this.expression();
        this.state = 619;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Inv_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_inv_function;
    return this;
}

Inv_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Inv_functionContext.prototype.constructor = Inv_functionContext;

Inv_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Inv_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterInv_function(this);
	}
};

Inv_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitInv_function(this);
	}
};

Inv_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitInv_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Inv_functionContext = Inv_functionContext;

qParser.prototype.inv_function = function() {

    var localctx = new Inv_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, qParser.RULE_inv_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 621;
        this.match(qParser.T__46);
        this.state = 622;
        this.match(qParser.T__1);
        this.state = 623;
        this.expression();
        this.state = 624;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Keys_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_keys_function;
    return this;
}

Keys_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Keys_functionContext.prototype.constructor = Keys_functionContext;

Keys_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Keys_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterKeys_function(this);
	}
};

Keys_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitKeys_function(this);
	}
};

Keys_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitKeys_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Keys_functionContext = Keys_functionContext;

qParser.prototype.keys_function = function() {

    var localctx = new Keys_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, qParser.RULE_keys_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 626;
        this.match(qParser.T__47);
        this.state = 627;
        this.match(qParser.T__1);
        this.state = 628;
        this.expression();
        this.state = 629;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Last_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_last_function;
    return this;
}

Last_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Last_functionContext.prototype.constructor = Last_functionContext;

Last_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Last_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterLast_function(this);
	}
};

Last_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitLast_function(this);
	}
};

Last_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitLast_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Last_functionContext = Last_functionContext;

qParser.prototype.last_function = function() {

    var localctx = new Last_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, qParser.RULE_last_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 631;
        this.match(qParser.T__48);
        this.state = 632;
        this.match(qParser.T__1);
        this.state = 633;
        this.expression();
        this.state = 634;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Like_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_like_function;
    return this;
}

Like_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Like_functionContext.prototype.constructor = Like_functionContext;

Like_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Like_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterLike_function(this);
	}
};

Like_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitLike_function(this);
	}
};

Like_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitLike_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Like_functionContext = Like_functionContext;

qParser.prototype.like_function = function() {

    var localctx = new Like_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, qParser.RULE_like_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 636;
        this.match(qParser.T__49);
        this.state = 637;
        this.match(qParser.T__1);
        this.state = 638;
        this.expression();
        this.state = 639;
        this.match(qParser.T__14);
        this.state = 640;
        this.expression();
        this.state = 641;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function List_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_list_function;
    return this;
}

List_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
List_functionContext.prototype.constructor = List_functionContext;

List_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

List_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterList_function(this);
	}
};

List_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitList_function(this);
	}
};

List_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitList_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.List_functionContext = List_functionContext;

qParser.prototype.list_function = function() {

    var localctx = new List_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, qParser.RULE_list_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 643;
        this.match(qParser.T__50);
        this.state = 644;
        this.match(qParser.T__1);
        this.state = 645;
        this.expression();
        this.state = 646;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Lj_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_lj_function;
    return this;
}

Lj_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Lj_functionContext.prototype.constructor = Lj_functionContext;

Lj_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Lj_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterLj_function(this);
	}
};

Lj_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitLj_function(this);
	}
};

Lj_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitLj_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Lj_functionContext = Lj_functionContext;

qParser.prototype.lj_function = function() {

    var localctx = new Lj_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, qParser.RULE_lj_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 648;
        this.match(qParser.T__51);
        this.state = 649;
        this.match(qParser.T__1);
        this.state = 650;
        this.expression();
        this.state = 651;
        this.match(qParser.T__14);
        this.state = 652;
        this.expression();
        this.state = 653;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Load_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_load_function;
    return this;
}

Load_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Load_functionContext.prototype.constructor = Load_functionContext;

Load_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Load_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterLoad_function(this);
	}
};

Load_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitLoad_function(this);
	}
};

Load_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitLoad_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Load_functionContext = Load_functionContext;

qParser.prototype.load_function = function() {

    var localctx = new Load_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, qParser.RULE_load_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 655;
        this.match(qParser.T__52);
        this.state = 656;
        this.match(qParser.T__1);
        this.state = 657;
        this.expression();
        this.state = 658;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Log_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_log_function;
    return this;
}

Log_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Log_functionContext.prototype.constructor = Log_functionContext;

Log_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Log_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterLog_function(this);
	}
};

Log_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitLog_function(this);
	}
};

Log_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitLog_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Log_functionContext = Log_functionContext;

qParser.prototype.log_function = function() {

    var localctx = new Log_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 122, qParser.RULE_log_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 660;
        this.match(qParser.T__53);
        this.state = 661;
        this.match(qParser.T__1);
        this.state = 662;
        this.expression();
        this.state = 663;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Lower_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_lower_function;
    return this;
}

Lower_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Lower_functionContext.prototype.constructor = Lower_functionContext;

Lower_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Lower_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterLower_function(this);
	}
};

Lower_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitLower_function(this);
	}
};

Lower_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitLower_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Lower_functionContext = Lower_functionContext;

qParser.prototype.lower_function = function() {

    var localctx = new Lower_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 124, qParser.RULE_lower_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 665;
        this.match(qParser.T__54);
        this.state = 666;
        this.match(qParser.T__1);
        this.state = 667;
        this.expression();
        this.state = 668;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Lsq_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_lsq_function;
    return this;
}

Lsq_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Lsq_functionContext.prototype.constructor = Lsq_functionContext;

Lsq_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Lsq_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterLsq_function(this);
	}
};

Lsq_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitLsq_function(this);
	}
};

Lsq_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitLsq_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Lsq_functionContext = Lsq_functionContext;

qParser.prototype.lsq_function = function() {

    var localctx = new Lsq_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 126, qParser.RULE_lsq_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 670;
        this.match(qParser.T__55);
        this.state = 671;
        this.match(qParser.T__1);
        this.state = 672;
        this.expression();
        this.state = 673;
        this.match(qParser.T__14);
        this.state = 674;
        this.expression();
        this.state = 675;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Ltime_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_ltime_function;
    return this;
}

Ltime_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ltime_functionContext.prototype.constructor = Ltime_functionContext;

Ltime_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Ltime_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterLtime_function(this);
	}
};

Ltime_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitLtime_function(this);
	}
};

Ltime_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitLtime_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Ltime_functionContext = Ltime_functionContext;

qParser.prototype.ltime_function = function() {

    var localctx = new Ltime_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 128, qParser.RULE_ltime_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 677;
        this.match(qParser.T__56);
        this.state = 678;
        this.match(qParser.T__1);
        this.state = 679;
        this.expression();
        this.state = 680;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Ltrim_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_ltrim_function;
    return this;
}

Ltrim_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ltrim_functionContext.prototype.constructor = Ltrim_functionContext;

Ltrim_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Ltrim_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterLtrim_function(this);
	}
};

Ltrim_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitLtrim_function(this);
	}
};

Ltrim_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitLtrim_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Ltrim_functionContext = Ltrim_functionContext;

qParser.prototype.ltrim_function = function() {

    var localctx = new Ltrim_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, qParser.RULE_ltrim_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 682;
        this.match(qParser.T__57);
        this.state = 683;
        this.match(qParser.T__1);
        this.state = 684;
        this.expression();
        this.state = 685;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Mavg_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_mavg_function;
    return this;
}

Mavg_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Mavg_functionContext.prototype.constructor = Mavg_functionContext;

Mavg_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Mavg_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMavg_function(this);
	}
};

Mavg_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMavg_function(this);
	}
};

Mavg_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMavg_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Mavg_functionContext = Mavg_functionContext;

qParser.prototype.mavg_function = function() {

    var localctx = new Mavg_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 132, qParser.RULE_mavg_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 687;
        this.match(qParser.T__58);
        this.state = 688;
        this.match(qParser.T__1);
        this.state = 689;
        this.expression();
        this.state = 690;
        this.match(qParser.T__14);
        this.state = 691;
        this.expression();
        this.state = 692;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Max_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_max_function;
    return this;
}

Max_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Max_functionContext.prototype.constructor = Max_functionContext;

Max_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Max_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMax_function(this);
	}
};

Max_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMax_function(this);
	}
};

Max_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMax_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Max_functionContext = Max_functionContext;

qParser.prototype.max_function = function() {

    var localctx = new Max_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, qParser.RULE_max_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 694;
        this.match(qParser.T__59);
        this.state = 695;
        this.match(qParser.T__1);
        this.state = 696;
        this.expression();
        this.state = 697;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Maxs_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_maxs_function;
    return this;
}

Maxs_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Maxs_functionContext.prototype.constructor = Maxs_functionContext;

Maxs_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Maxs_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMaxs_function(this);
	}
};

Maxs_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMaxs_function(this);
	}
};

Maxs_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMaxs_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Maxs_functionContext = Maxs_functionContext;

qParser.prototype.maxs_function = function() {

    var localctx = new Maxs_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, qParser.RULE_maxs_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 699;
        this.match(qParser.T__60);
        this.state = 700;
        this.match(qParser.T__1);
        this.state = 701;
        this.expression();
        this.state = 702;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Mcount_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_mcount_function;
    return this;
}

Mcount_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Mcount_functionContext.prototype.constructor = Mcount_functionContext;

Mcount_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Mcount_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMcount_function(this);
	}
};

Mcount_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMcount_function(this);
	}
};

Mcount_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMcount_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Mcount_functionContext = Mcount_functionContext;

qParser.prototype.mcount_function = function() {

    var localctx = new Mcount_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, qParser.RULE_mcount_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 704;
        this.match(qParser.T__61);
        this.state = 705;
        this.match(qParser.T__1);
        this.state = 706;
        this.expression();
        this.state = 707;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Md5_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_md5_function;
    return this;
}

Md5_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Md5_functionContext.prototype.constructor = Md5_functionContext;

Md5_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Md5_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMd5_function(this);
	}
};

Md5_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMd5_function(this);
	}
};

Md5_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMd5_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Md5_functionContext = Md5_functionContext;

qParser.prototype.md5_function = function() {

    var localctx = new Md5_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, qParser.RULE_md5_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 709;
        this.match(qParser.T__62);
        this.state = 710;
        this.match(qParser.T__1);
        this.state = 711;
        this.expression();
        this.state = 712;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Mdev_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_mdev_function;
    return this;
}

Mdev_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Mdev_functionContext.prototype.constructor = Mdev_functionContext;

Mdev_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Mdev_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMdev_function(this);
	}
};

Mdev_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMdev_function(this);
	}
};

Mdev_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMdev_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Mdev_functionContext = Mdev_functionContext;

qParser.prototype.mdev_function = function() {

    var localctx = new Mdev_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, qParser.RULE_mdev_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 714;
        this.match(qParser.T__63);
        this.state = 715;
        this.match(qParser.T__1);
        this.state = 716;
        this.expression();
        this.state = 717;
        this.match(qParser.T__14);
        this.state = 718;
        this.expression();
        this.state = 719;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Med_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_med_function;
    return this;
}

Med_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Med_functionContext.prototype.constructor = Med_functionContext;

Med_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Med_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMed_function(this);
	}
};

Med_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMed_function(this);
	}
};

Med_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMed_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Med_functionContext = Med_functionContext;

qParser.prototype.med_function = function() {

    var localctx = new Med_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, qParser.RULE_med_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 721;
        this.match(qParser.T__64);
        this.state = 722;
        this.match(qParser.T__1);
        this.state = 723;
        this.expression();
        this.state = 724;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Meta_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_meta_function;
    return this;
}

Meta_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Meta_functionContext.prototype.constructor = Meta_functionContext;

Meta_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Meta_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMeta_function(this);
	}
};

Meta_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMeta_function(this);
	}
};

Meta_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMeta_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Meta_functionContext = Meta_functionContext;

qParser.prototype.meta_function = function() {

    var localctx = new Meta_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, qParser.RULE_meta_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 726;
        this.match(qParser.T__65);
        this.state = 727;
        this.match(qParser.T__1);
        this.state = 728;
        this.expression();
        this.state = 729;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Min_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_min_function;
    return this;
}

Min_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Min_functionContext.prototype.constructor = Min_functionContext;

Min_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Min_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMin_function(this);
	}
};

Min_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMin_function(this);
	}
};

Min_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMin_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Min_functionContext = Min_functionContext;

qParser.prototype.min_function = function() {

    var localctx = new Min_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, qParser.RULE_min_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 731;
        this.match(qParser.T__66);
        this.state = 732;
        this.match(qParser.T__1);
        this.state = 733;
        this.expression();
        this.state = 734;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Mins_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_mins_function;
    return this;
}

Mins_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Mins_functionContext.prototype.constructor = Mins_functionContext;

Mins_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Mins_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMins_function(this);
	}
};

Mins_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMins_function(this);
	}
};

Mins_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMins_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Mins_functionContext = Mins_functionContext;

qParser.prototype.mins_function = function() {

    var localctx = new Mins_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, qParser.RULE_mins_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 736;
        this.match(qParser.T__67);
        this.state = 737;
        this.match(qParser.T__1);
        this.state = 738;
        this.expression();
        this.state = 739;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Mmax_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_mmax_function;
    return this;
}

Mmax_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Mmax_functionContext.prototype.constructor = Mmax_functionContext;

Mmax_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Mmax_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMmax_function(this);
	}
};

Mmax_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMmax_function(this);
	}
};

Mmax_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMmax_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Mmax_functionContext = Mmax_functionContext;

qParser.prototype.mmax_function = function() {

    var localctx = new Mmax_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, qParser.RULE_mmax_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 741;
        this.match(qParser.T__68);
        this.state = 742;
        this.match(qParser.T__1);
        this.state = 743;
        this.expression();
        this.state = 744;
        this.match(qParser.T__14);
        this.state = 745;
        this.expression();
        this.state = 746;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Mmin_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_mmin_function;
    return this;
}

Mmin_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Mmin_functionContext.prototype.constructor = Mmin_functionContext;

Mmin_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Mmin_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMmin_function(this);
	}
};

Mmin_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMmin_function(this);
	}
};

Mmin_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMmin_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Mmin_functionContext = Mmin_functionContext;

qParser.prototype.mmin_function = function() {

    var localctx = new Mmin_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, qParser.RULE_mmin_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 748;
        this.match(qParser.T__69);
        this.state = 749;
        this.match(qParser.T__1);
        this.state = 750;
        this.expression();
        this.state = 751;
        this.match(qParser.T__14);
        this.state = 752;
        this.expression();
        this.state = 753;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Mmu_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_mmu_function;
    return this;
}

Mmu_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Mmu_functionContext.prototype.constructor = Mmu_functionContext;

Mmu_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Mmu_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMmu_function(this);
	}
};

Mmu_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMmu_function(this);
	}
};

Mmu_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMmu_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Mmu_functionContext = Mmu_functionContext;

qParser.prototype.mmu_function = function() {

    var localctx = new Mmu_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, qParser.RULE_mmu_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 755;
        this.match(qParser.T__70);
        this.state = 756;
        this.match(qParser.T__1);
        this.state = 757;
        this.expression();
        this.state = 758;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Mod_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_mod_function;
    return this;
}

Mod_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Mod_functionContext.prototype.constructor = Mod_functionContext;

Mod_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Mod_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMod_function(this);
	}
};

Mod_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMod_function(this);
	}
};

Mod_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMod_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Mod_functionContext = Mod_functionContext;

qParser.prototype.mod_function = function() {

    var localctx = new Mod_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, qParser.RULE_mod_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 760;
        this.match(qParser.T__71);
        this.state = 761;
        this.match(qParser.T__1);
        this.state = 762;
        this.expression();
        this.state = 763;
        this.match(qParser.T__14);
        this.state = 764;
        this.expression();
        this.state = 765;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Msum_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_msum_function;
    return this;
}

Msum_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Msum_functionContext.prototype.constructor = Msum_functionContext;

Msum_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Msum_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterMsum_function(this);
	}
};

Msum_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitMsum_function(this);
	}
};

Msum_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitMsum_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Msum_functionContext = Msum_functionContext;

qParser.prototype.msum_function = function() {

    var localctx = new Msum_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, qParser.RULE_msum_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 767;
        this.match(qParser.T__72);
        this.state = 768;
        this.match(qParser.T__1);
        this.state = 769;
        this.expression();
        this.state = 770;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Neg_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_neg_function;
    return this;
}

Neg_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Neg_functionContext.prototype.constructor = Neg_functionContext;

Neg_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Neg_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterNeg_function(this);
	}
};

Neg_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitNeg_function(this);
	}
};

Neg_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitNeg_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Neg_functionContext = Neg_functionContext;

qParser.prototype.neg_function = function() {

    var localctx = new Neg_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, qParser.RULE_neg_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 772;
        this.match(qParser.T__73);
        this.state = 773;
        this.match(qParser.T__1);
        this.state = 774;
        this.expression();
        this.state = 775;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Next_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_next_function;
    return this;
}

Next_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Next_functionContext.prototype.constructor = Next_functionContext;

Next_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Next_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterNext_function(this);
	}
};

Next_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitNext_function(this);
	}
};

Next_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitNext_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Next_functionContext = Next_functionContext;

qParser.prototype.next_function = function() {

    var localctx = new Next_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 164, qParser.RULE_next_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 777;
        this.match(qParser.T__74);
        this.state = 778;
        this.match(qParser.T__1);
        this.state = 779;
        this.expression();
        this.state = 780;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Not_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_not_function;
    return this;
}

Not_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Not_functionContext.prototype.constructor = Not_functionContext;

Not_functionContext.prototype.NOT = function() {
    return this.getToken(qParser.NOT, 0);
};

Not_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Not_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterNot_function(this);
	}
};

Not_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitNot_function(this);
	}
};

Not_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitNot_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Not_functionContext = Not_functionContext;

qParser.prototype.not_function = function() {

    var localctx = new Not_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, qParser.RULE_not_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 782;
        this.match(qParser.NOT);
        this.state = 783;
        this.match(qParser.T__1);
        this.state = 784;
        this.expression();
        this.state = 785;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Null_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_null_function;
    return this;
}

Null_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Null_functionContext.prototype.constructor = Null_functionContext;

Null_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Null_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterNull_function(this);
	}
};

Null_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitNull_function(this);
	}
};

Null_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitNull_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Null_functionContext = Null_functionContext;

qParser.prototype.null_function = function() {

    var localctx = new Null_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, qParser.RULE_null_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 787;
        this.match(qParser.T__75);
        this.state = 788;
        this.match(qParser.T__1);
        this.state = 789;
        this.expression();
        this.state = 790;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Or_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_or_function;
    return this;
}

Or_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Or_functionContext.prototype.constructor = Or_functionContext;

Or_functionContext.prototype.OR = function() {
    return this.getToken(qParser.OR, 0);
};

Or_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Or_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterOr_function(this);
	}
};

Or_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitOr_function(this);
	}
};

Or_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitOr_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Or_functionContext = Or_functionContext;

qParser.prototype.or_function = function() {

    var localctx = new Or_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 170, qParser.RULE_or_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 792;
        this.match(qParser.OR);
        this.state = 793;
        this.match(qParser.T__1);
        this.state = 794;
        this.expression();
        this.state = 795;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Over_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_over_function;
    return this;
}

Over_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Over_functionContext.prototype.constructor = Over_functionContext;

Over_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Over_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterOver_function(this);
	}
};

Over_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitOver_function(this);
	}
};

Over_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitOver_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Over_functionContext = Over_functionContext;

qParser.prototype.over_function = function() {

    var localctx = new Over_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, qParser.RULE_over_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 797;
        this.match(qParser.T__76);
        this.state = 798;
        this.match(qParser.T__1);
        this.state = 799;
        this.expression();
        this.state = 800;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Parse_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_parse_function;
    return this;
}

Parse_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Parse_functionContext.prototype.constructor = Parse_functionContext;

Parse_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Parse_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterParse_function(this);
	}
};

Parse_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitParse_function(this);
	}
};

Parse_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitParse_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Parse_functionContext = Parse_functionContext;

qParser.prototype.parse_function = function() {

    var localctx = new Parse_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, qParser.RULE_parse_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 802;
        this.match(qParser.T__77);
        this.state = 803;
        this.match(qParser.T__1);
        this.state = 804;
        this.expression();
        this.state = 805;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Peach_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_peach_function;
    return this;
}

Peach_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Peach_functionContext.prototype.constructor = Peach_functionContext;

Peach_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Peach_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterPeach_function(this);
	}
};

Peach_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitPeach_function(this);
	}
};

Peach_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitPeach_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Peach_functionContext = Peach_functionContext;

qParser.prototype.peach_function = function() {

    var localctx = new Peach_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, qParser.RULE_peach_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 807;
        this.match(qParser.T__78);
        this.state = 808;
        this.match(qParser.T__1);
        this.state = 809;
        this.expression();
        this.state = 810;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Pj_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_pj_function;
    return this;
}

Pj_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pj_functionContext.prototype.constructor = Pj_functionContext;

Pj_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Pj_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterPj_function(this);
	}
};

Pj_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitPj_function(this);
	}
};

Pj_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitPj_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Pj_functionContext = Pj_functionContext;

qParser.prototype.pj_function = function() {

    var localctx = new Pj_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, qParser.RULE_pj_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 812;
        this.match(qParser.T__79);
        this.state = 813;
        this.match(qParser.T__1);
        this.state = 814;
        this.expression();
        this.state = 815;
        this.match(qParser.T__14);
        this.state = 816;
        this.expression();
        this.state = 817;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Plist_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_plist_function;
    return this;
}

Plist_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Plist_functionContext.prototype.constructor = Plist_functionContext;

Plist_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Plist_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterPlist_function(this);
	}
};

Plist_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitPlist_function(this);
	}
};

Plist_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitPlist_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Plist_functionContext = Plist_functionContext;

qParser.prototype.plist_function = function() {

    var localctx = new Plist_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, qParser.RULE_plist_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 819;
        this.match(qParser.T__80);
        this.state = 820;
        this.match(qParser.T__1);
        this.state = 821;
        this.expression();
        this.state = 822;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Prd_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_prd_function;
    return this;
}

Prd_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Prd_functionContext.prototype.constructor = Prd_functionContext;

Prd_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Prd_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterPrd_function(this);
	}
};

Prd_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitPrd_function(this);
	}
};

Prd_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitPrd_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Prd_functionContext = Prd_functionContext;

qParser.prototype.prd_function = function() {

    var localctx = new Prd_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, qParser.RULE_prd_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 824;
        this.match(qParser.T__81);
        this.state = 825;
        this.match(qParser.T__1);
        this.state = 826;
        this.expression();
        this.state = 827;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Prev_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_prev_function;
    return this;
}

Prev_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Prev_functionContext.prototype.constructor = Prev_functionContext;

Prev_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Prev_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterPrev_function(this);
	}
};

Prev_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitPrev_function(this);
	}
};

Prev_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitPrev_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Prev_functionContext = Prev_functionContext;

qParser.prototype.prev_function = function() {

    var localctx = new Prev_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 184, qParser.RULE_prev_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 829;
        this.match(qParser.T__82);
        this.state = 830;
        this.match(qParser.T__1);
        this.state = 831;
        this.expression();
        this.state = 832;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Prior_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_prior_function;
    return this;
}

Prior_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Prior_functionContext.prototype.constructor = Prior_functionContext;

Prior_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Prior_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterPrior_function(this);
	}
};

Prior_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitPrior_function(this);
	}
};

Prior_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitPrior_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Prior_functionContext = Prior_functionContext;

qParser.prototype.prior_function = function() {

    var localctx = new Prior_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, qParser.RULE_prior_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 834;
        this.match(qParser.T__83);
        this.state = 835;
        this.match(qParser.T__1);
        this.state = 836;
        this.expression();
        this.state = 837;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Rand_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_rand_function;
    return this;
}

Rand_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Rand_functionContext.prototype.constructor = Rand_functionContext;

Rand_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Rand_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRand_function(this);
	}
};

Rand_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRand_function(this);
	}
};

Rand_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRand_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Rand_functionContext = Rand_functionContext;

qParser.prototype.rand_function = function() {

    var localctx = new Rand_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 188, qParser.RULE_rand_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 839;
        this.match(qParser.T__84);
        this.state = 840;
        this.match(qParser.T__1);
        this.state = 841;
        this.expression();
        this.state = 842;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Rank_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_rank_function;
    return this;
}

Rank_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Rank_functionContext.prototype.constructor = Rank_functionContext;

Rank_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Rank_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRank_function(this);
	}
};

Rank_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRank_function(this);
	}
};

Rank_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRank_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Rank_functionContext = Rank_functionContext;

qParser.prototype.rank_function = function() {

    var localctx = new Rank_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 190, qParser.RULE_rank_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 844;
        this.match(qParser.T__85);
        this.state = 845;
        this.match(qParser.T__1);
        this.state = 846;
        this.expression();
        this.state = 847;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Ratios_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_ratios_function;
    return this;
}

Ratios_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ratios_functionContext.prototype.constructor = Ratios_functionContext;

Ratios_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Ratios_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRatios_function(this);
	}
};

Ratios_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRatios_function(this);
	}
};

Ratios_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRatios_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Ratios_functionContext = Ratios_functionContext;

qParser.prototype.ratios_function = function() {

    var localctx = new Ratios_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 192, qParser.RULE_ratios_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 849;
        this.match(qParser.T__86);
        this.state = 850;
        this.match(qParser.T__1);
        this.state = 851;
        this.expression();
        this.state = 852;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Raze_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_raze_function;
    return this;
}

Raze_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Raze_functionContext.prototype.constructor = Raze_functionContext;

Raze_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Raze_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRaze_function(this);
	}
};

Raze_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRaze_function(this);
	}
};

Raze_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRaze_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Raze_functionContext = Raze_functionContext;

qParser.prototype.raze_function = function() {

    var localctx = new Raze_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 194, qParser.RULE_raze_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 854;
        this.match(qParser.T__87);
        this.state = 855;
        this.match(qParser.T__1);
        this.state = 856;
        this.expression();
        this.state = 857;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Read0_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_read0_function;
    return this;
}

Read0_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Read0_functionContext.prototype.constructor = Read0_functionContext;

Read0_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Read0_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRead0_function(this);
	}
};

Read0_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRead0_function(this);
	}
};

Read0_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRead0_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Read0_functionContext = Read0_functionContext;

qParser.prototype.read0_function = function() {

    var localctx = new Read0_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 196, qParser.RULE_read0_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 859;
        this.match(qParser.T__88);
        this.state = 860;
        this.match(qParser.T__1);
        this.state = 861;
        this.expression();
        this.state = 862;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Read1_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_read1_function;
    return this;
}

Read1_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Read1_functionContext.prototype.constructor = Read1_functionContext;

Read1_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Read1_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRead1_function(this);
	}
};

Read1_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRead1_function(this);
	}
};

Read1_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRead1_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Read1_functionContext = Read1_functionContext;

qParser.prototype.read1_function = function() {

    var localctx = new Read1_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 198, qParser.RULE_read1_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 864;
        this.match(qParser.T__89);
        this.state = 865;
        this.match(qParser.T__1);
        this.state = 866;
        this.expression();
        this.state = 867;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Reciprocal_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_reciprocal_function;
    return this;
}

Reciprocal_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Reciprocal_functionContext.prototype.constructor = Reciprocal_functionContext;

Reciprocal_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Reciprocal_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterReciprocal_function(this);
	}
};

Reciprocal_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitReciprocal_function(this);
	}
};

Reciprocal_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitReciprocal_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Reciprocal_functionContext = Reciprocal_functionContext;

qParser.prototype.reciprocal_function = function() {

    var localctx = new Reciprocal_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 200, qParser.RULE_reciprocal_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 869;
        this.match(qParser.T__90);
        this.state = 870;
        this.match(qParser.T__1);
        this.state = 871;
        this.expression();
        this.state = 872;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Reverse_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_reverse_function;
    return this;
}

Reverse_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Reverse_functionContext.prototype.constructor = Reverse_functionContext;

Reverse_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Reverse_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterReverse_function(this);
	}
};

Reverse_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitReverse_function(this);
	}
};

Reverse_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitReverse_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Reverse_functionContext = Reverse_functionContext;

qParser.prototype.reverse_function = function() {

    var localctx = new Reverse_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 202, qParser.RULE_reverse_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 874;
        this.match(qParser.T__91);
        this.state = 875;
        this.match(qParser.T__1);
        this.state = 876;
        this.expression();
        this.state = 877;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Rload_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_rload_function;
    return this;
}

Rload_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Rload_functionContext.prototype.constructor = Rload_functionContext;

Rload_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Rload_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRload_function(this);
	}
};

Rload_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRload_function(this);
	}
};

Rload_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRload_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Rload_functionContext = Rload_functionContext;

qParser.prototype.rload_function = function() {

    var localctx = new Rload_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 204, qParser.RULE_rload_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 879;
        this.match(qParser.T__92);
        this.state = 880;
        this.match(qParser.T__1);
        this.state = 881;
        this.expression();
        this.state = 882;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Rotate_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_rotate_function;
    return this;
}

Rotate_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Rotate_functionContext.prototype.constructor = Rotate_functionContext;

Rotate_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Rotate_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRotate_function(this);
	}
};

Rotate_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRotate_function(this);
	}
};

Rotate_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRotate_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Rotate_functionContext = Rotate_functionContext;

qParser.prototype.rotate_function = function() {

    var localctx = new Rotate_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 206, qParser.RULE_rotate_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 884;
        this.match(qParser.T__93);
        this.state = 885;
        this.match(qParser.T__1);
        this.state = 886;
        this.expression();
        this.state = 887;
        this.match(qParser.T__14);
        this.state = 888;
        this.expression();
        this.state = 889;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Rsave_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_rsave_function;
    return this;
}

Rsave_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Rsave_functionContext.prototype.constructor = Rsave_functionContext;

Rsave_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Rsave_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRsave_function(this);
	}
};

Rsave_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRsave_function(this);
	}
};

Rsave_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRsave_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Rsave_functionContext = Rsave_functionContext;

qParser.prototype.rsave_function = function() {

    var localctx = new Rsave_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 208, qParser.RULE_rsave_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 891;
        this.match(qParser.T__94);
        this.state = 892;
        this.match(qParser.T__1);
        this.state = 893;
        this.expression();
        this.state = 894;
        this.match(qParser.T__14);
        this.state = 895;
        this.expression();
        this.state = 896;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Rtrim_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_rtrim_function;
    return this;
}

Rtrim_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Rtrim_functionContext.prototype.constructor = Rtrim_functionContext;

Rtrim_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Rtrim_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterRtrim_function(this);
	}
};

Rtrim_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitRtrim_function(this);
	}
};

Rtrim_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitRtrim_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Rtrim_functionContext = Rtrim_functionContext;

qParser.prototype.rtrim_function = function() {

    var localctx = new Rtrim_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 210, qParser.RULE_rtrim_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 898;
        this.match(qParser.T__95);
        this.state = 899;
        this.match(qParser.T__1);
        this.state = 900;
        this.expression();
        this.state = 901;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Save_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_save_function;
    return this;
}

Save_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Save_functionContext.prototype.constructor = Save_functionContext;

Save_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Save_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSave_function(this);
	}
};

Save_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSave_function(this);
	}
};

Save_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSave_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Save_functionContext = Save_functionContext;

qParser.prototype.save_function = function() {

    var localctx = new Save_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 212, qParser.RULE_save_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 903;
        this.match(qParser.T__96);
        this.state = 904;
        this.match(qParser.T__1);
        this.state = 905;
        this.expression();
        this.state = 906;
        this.match(qParser.T__14);
        this.state = 907;
        this.expression();
        this.state = 908;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Scan_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_scan_function;
    return this;
}

Scan_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Scan_functionContext.prototype.constructor = Scan_functionContext;

Scan_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Scan_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterScan_function(this);
	}
};

Scan_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitScan_function(this);
	}
};

Scan_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitScan_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Scan_functionContext = Scan_functionContext;

qParser.prototype.scan_function = function() {

    var localctx = new Scan_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 214, qParser.RULE_scan_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 910;
        this.match(qParser.T__97);
        this.state = 911;
        this.match(qParser.T__1);
        this.state = 912;
        this.expression();
        this.state = 913;
        this.match(qParser.T__14);
        this.state = 914;
        this.expression();
        this.state = 915;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Select_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_select_function;
    return this;
}

Select_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Select_functionContext.prototype.constructor = Select_functionContext;

Select_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Select_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSelect_function(this);
	}
};

Select_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSelect_function(this);
	}
};

Select_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSelect_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Select_functionContext = Select_functionContext;

qParser.prototype.select_function = function() {

    var localctx = new Select_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 216, qParser.RULE_select_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 917;
        this.match(qParser.T__98);
        this.state = 918;
        this.match(qParser.T__1);
        this.state = 919;
        this.expression();
        this.state = 920;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Set_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_set_function;
    return this;
}

Set_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Set_functionContext.prototype.constructor = Set_functionContext;

Set_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Set_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSet_function(this);
	}
};

Set_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSet_function(this);
	}
};

Set_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSet_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Set_functionContext = Set_functionContext;

qParser.prototype.set_function = function() {

    var localctx = new Set_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 218, qParser.RULE_set_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 922;
        this.match(qParser.T__99);
        this.state = 923;
        this.match(qParser.T__1);
        this.state = 924;
        this.expression();
        this.state = 925;
        this.match(qParser.T__14);
        this.state = 926;
        this.expression();
        this.state = 927;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Show_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_show_function;
    return this;
}

Show_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Show_functionContext.prototype.constructor = Show_functionContext;

Show_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Show_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterShow_function(this);
	}
};

Show_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitShow_function(this);
	}
};

Show_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitShow_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Show_functionContext = Show_functionContext;

qParser.prototype.show_function = function() {

    var localctx = new Show_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 220, qParser.RULE_show_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 929;
        this.match(qParser.T__100);
        this.state = 930;
        this.match(qParser.T__1);
        this.state = 931;
        this.expression();
        this.state = 932;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Signum_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_signum_function;
    return this;
}

Signum_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signum_functionContext.prototype.constructor = Signum_functionContext;

Signum_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Signum_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSignum_function(this);
	}
};

Signum_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSignum_function(this);
	}
};

Signum_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSignum_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Signum_functionContext = Signum_functionContext;

qParser.prototype.signum_function = function() {

    var localctx = new Signum_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 222, qParser.RULE_signum_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 934;
        this.match(qParser.T__101);
        this.state = 935;
        this.match(qParser.T__1);
        this.state = 936;
        this.expression();
        this.state = 937;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Sin_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_sin_function;
    return this;
}

Sin_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sin_functionContext.prototype.constructor = Sin_functionContext;

Sin_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Sin_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSin_function(this);
	}
};

Sin_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSin_function(this);
	}
};

Sin_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSin_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Sin_functionContext = Sin_functionContext;

qParser.prototype.sin_function = function() {

    var localctx = new Sin_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 224, qParser.RULE_sin_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 939;
        this.match(qParser.T__102);
        this.state = 940;
        this.match(qParser.T__1);
        this.state = 941;
        this.expression();
        this.state = 942;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Sqrt_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_sqrt_function;
    return this;
}

Sqrt_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sqrt_functionContext.prototype.constructor = Sqrt_functionContext;

Sqrt_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Sqrt_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSqrt_function(this);
	}
};

Sqrt_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSqrt_function(this);
	}
};

Sqrt_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSqrt_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Sqrt_functionContext = Sqrt_functionContext;

qParser.prototype.sqrt_function = function() {

    var localctx = new Sqrt_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 226, qParser.RULE_sqrt_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 944;
        this.match(qParser.T__103);
        this.state = 945;
        this.match(qParser.T__1);
        this.state = 946;
        this.expression();
        this.state = 947;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Ssr_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_ssr_function;
    return this;
}

Ssr_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ssr_functionContext.prototype.constructor = Ssr_functionContext;

Ssr_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Ssr_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSsr_function(this);
	}
};

Ssr_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSsr_function(this);
	}
};

Ssr_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSsr_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Ssr_functionContext = Ssr_functionContext;

qParser.prototype.ssr_function = function() {

    var localctx = new Ssr_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 228, qParser.RULE_ssr_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 949;
        this.match(qParser.T__104);
        this.state = 950;
        this.match(qParser.T__1);
        this.state = 951;
        this.expression();
        this.state = 952;
        this.match(qParser.T__14);
        this.state = 953;
        this.expression();
        this.state = 954;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function String_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_string_function;
    return this;
}

String_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
String_functionContext.prototype.constructor = String_functionContext;

String_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

String_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterString_function(this);
	}
};

String_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitString_function(this);
	}
};

String_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitString_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.String_functionContext = String_functionContext;

qParser.prototype.string_function = function() {

    var localctx = new String_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 230, qParser.RULE_string_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 956;
        this.match(qParser.T__105);
        this.state = 957;
        this.match(qParser.T__1);
        this.state = 958;
        this.expression();
        this.state = 959;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Sublist_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_sublist_function;
    return this;
}

Sublist_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sublist_functionContext.prototype.constructor = Sublist_functionContext;

Sublist_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Sublist_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSublist_function(this);
	}
};

Sublist_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSublist_function(this);
	}
};

Sublist_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSublist_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Sublist_functionContext = Sublist_functionContext;

qParser.prototype.sublist_function = function() {

    var localctx = new Sublist_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 232, qParser.RULE_sublist_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 961;
        this.match(qParser.T__106);
        this.state = 962;
        this.match(qParser.T__1);
        this.state = 963;
        this.expression();
        this.state = 964;
        this.match(qParser.T__14);
        this.state = 965;
        this.expression();
        this.state = 966;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Sum_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_sum_function;
    return this;
}

Sum_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sum_functionContext.prototype.constructor = Sum_functionContext;

Sum_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Sum_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSum_function(this);
	}
};

Sum_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSum_function(this);
	}
};

Sum_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSum_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Sum_functionContext = Sum_functionContext;

qParser.prototype.sum_function = function() {

    var localctx = new Sum_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 234, qParser.RULE_sum_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 968;
        this.match(qParser.T__107);
        this.state = 969;
        this.match(qParser.T__1);
        this.state = 970;
        this.expression();
        this.state = 971;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Sums_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_sums_function;
    return this;
}

Sums_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sums_functionContext.prototype.constructor = Sums_functionContext;

Sums_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Sums_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSums_function(this);
	}
};

Sums_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSums_function(this);
	}
};

Sums_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSums_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Sums_functionContext = Sums_functionContext;

qParser.prototype.sums_function = function() {

    var localctx = new Sums_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 236, qParser.RULE_sums_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 973;
        this.match(qParser.T__108);
        this.state = 974;
        this.match(qParser.T__1);
        this.state = 975;
        this.expression();
        this.state = 976;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Sv_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_sv_function;
    return this;
}

Sv_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sv_functionContext.prototype.constructor = Sv_functionContext;

Sv_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Sv_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSv_function(this);
	}
};

Sv_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSv_function(this);
	}
};

Sv_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSv_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Sv_functionContext = Sv_functionContext;

qParser.prototype.sv_function = function() {

    var localctx = new Sv_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 238, qParser.RULE_sv_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 978;
        this.match(qParser.T__109);
        this.state = 979;
        this.match(qParser.T__1);
        this.state = 980;
        this.expression();
        this.state = 981;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function System_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_system_function;
    return this;
}

System_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
System_functionContext.prototype.constructor = System_functionContext;

System_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

System_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterSystem_function(this);
	}
};

System_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitSystem_function(this);
	}
};

System_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitSystem_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.System_functionContext = System_functionContext;

qParser.prototype.system_function = function() {

    var localctx = new System_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 240, qParser.RULE_system_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 983;
        this.match(qParser.T__110);
        this.state = 984;
        this.match(qParser.T__1);
        this.state = 985;
        this.expression();
        this.state = 986;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Tables_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_tables_function;
    return this;
}

Tables_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Tables_functionContext.prototype.constructor = Tables_functionContext;

Tables_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Tables_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterTables_function(this);
	}
};

Tables_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitTables_function(this);
	}
};

Tables_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitTables_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Tables_functionContext = Tables_functionContext;

qParser.prototype.tables_function = function() {

    var localctx = new Tables_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 242, qParser.RULE_tables_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 988;
        this.match(qParser.T__111);
        this.state = 989;
        this.match(qParser.T__1);
        this.state = 990;
        this.expression();
        this.state = 991;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Tan_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_tan_function;
    return this;
}

Tan_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Tan_functionContext.prototype.constructor = Tan_functionContext;

Tan_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Tan_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterTan_function(this);
	}
};

Tan_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitTan_function(this);
	}
};

Tan_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitTan_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Tan_functionContext = Tan_functionContext;

qParser.prototype.tan_function = function() {

    var localctx = new Tan_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 244, qParser.RULE_tan_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 993;
        this.match(qParser.T__112);
        this.state = 994;
        this.match(qParser.T__1);
        this.state = 995;
        this.expression();
        this.state = 996;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Til_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_til_function;
    return this;
}

Til_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Til_functionContext.prototype.constructor = Til_functionContext;

Til_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Til_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterTil_function(this);
	}
};

Til_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitTil_function(this);
	}
};

Til_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitTil_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Til_functionContext = Til_functionContext;

qParser.prototype.til_function = function() {

    var localctx = new Til_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 246, qParser.RULE_til_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 998;
        this.match(qParser.T__113);
        this.state = 999;
        this.match(qParser.T__1);
        this.state = 1000;
        this.expression();
        this.state = 1001;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Trim_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_trim_function;
    return this;
}

Trim_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Trim_functionContext.prototype.constructor = Trim_functionContext;

Trim_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Trim_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterTrim_function(this);
	}
};

Trim_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitTrim_function(this);
	}
};

Trim_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitTrim_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Trim_functionContext = Trim_functionContext;

qParser.prototype.trim_function = function() {

    var localctx = new Trim_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 248, qParser.RULE_trim_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1003;
        this.match(qParser.T__114);
        this.state = 1004;
        this.match(qParser.T__1);
        this.state = 1005;
        this.expression();
        this.state = 1006;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Type_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_type_function;
    return this;
}

Type_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Type_functionContext.prototype.constructor = Type_functionContext;

Type_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Type_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterType_function(this);
	}
};

Type_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitType_function(this);
	}
};

Type_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitType_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Type_functionContext = Type_functionContext;

qParser.prototype.type_function = function() {

    var localctx = new Type_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 250, qParser.RULE_type_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1008;
        this.match(qParser.T__115);
        this.state = 1009;
        this.match(qParser.T__1);
        this.state = 1010;
        this.expression();
        this.state = 1011;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Uj_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_uj_function;
    return this;
}

Uj_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Uj_functionContext.prototype.constructor = Uj_functionContext;

Uj_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Uj_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterUj_function(this);
	}
};

Uj_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitUj_function(this);
	}
};

Uj_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitUj_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Uj_functionContext = Uj_functionContext;

qParser.prototype.uj_function = function() {

    var localctx = new Uj_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 252, qParser.RULE_uj_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1013;
        this.match(qParser.T__116);
        this.state = 1014;
        this.match(qParser.T__1);
        this.state = 1015;
        this.expression();
        this.state = 1016;
        this.match(qParser.T__14);
        this.state = 1017;
        this.expression();
        this.state = 1018;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Ungroup_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_ungroup_function;
    return this;
}

Ungroup_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ungroup_functionContext.prototype.constructor = Ungroup_functionContext;

Ungroup_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Ungroup_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterUngroup_function(this);
	}
};

Ungroup_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitUngroup_function(this);
	}
};

Ungroup_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitUngroup_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Ungroup_functionContext = Ungroup_functionContext;

qParser.prototype.ungroup_function = function() {

    var localctx = new Ungroup_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 254, qParser.RULE_ungroup_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1020;
        this.match(qParser.T__117);
        this.state = 1021;
        this.match(qParser.T__1);
        this.state = 1022;
        this.expression();
        this.state = 1023;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Union_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_union_function;
    return this;
}

Union_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Union_functionContext.prototype.constructor = Union_functionContext;

Union_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Union_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterUnion_function(this);
	}
};

Union_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitUnion_function(this);
	}
};

Union_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitUnion_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Union_functionContext = Union_functionContext;

qParser.prototype.union_function = function() {

    var localctx = new Union_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 256, qParser.RULE_union_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1025;
        this.match(qParser.T__118);
        this.state = 1026;
        this.match(qParser.T__1);
        this.state = 1027;
        this.expression();
        this.state = 1028;
        this.match(qParser.T__14);
        this.state = 1029;
        this.expression();
        this.state = 1030;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Update_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_update_function;
    return this;
}

Update_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Update_functionContext.prototype.constructor = Update_functionContext;

Update_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Update_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterUpdate_function(this);
	}
};

Update_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitUpdate_function(this);
	}
};

Update_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitUpdate_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Update_functionContext = Update_functionContext;

qParser.prototype.update_function = function() {

    var localctx = new Update_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 258, qParser.RULE_update_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1032;
        this.match(qParser.T__119);
        this.state = 1033;
        this.match(qParser.T__1);
        this.state = 1034;
        this.expression();
        this.state = 1035;
        this.match(qParser.T__14);
        this.state = 1036;
        this.expression();
        this.state = 1037;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Upper_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_upper_function;
    return this;
}

Upper_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Upper_functionContext.prototype.constructor = Upper_functionContext;

Upper_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Upper_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterUpper_function(this);
	}
};

Upper_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitUpper_function(this);
	}
};

Upper_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitUpper_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Upper_functionContext = Upper_functionContext;

qParser.prototype.upper_function = function() {

    var localctx = new Upper_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 260, qParser.RULE_upper_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1039;
        this.match(qParser.T__120);
        this.state = 1040;
        this.match(qParser.T__1);
        this.state = 1041;
        this.expression();
        this.state = 1042;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Upsert_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_upsert_function;
    return this;
}

Upsert_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Upsert_functionContext.prototype.constructor = Upsert_functionContext;

Upsert_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Upsert_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterUpsert_function(this);
	}
};

Upsert_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitUpsert_function(this);
	}
};

Upsert_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitUpsert_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Upsert_functionContext = Upsert_functionContext;

qParser.prototype.upsert_function = function() {

    var localctx = new Upsert_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 262, qParser.RULE_upsert_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1044;
        this.match(qParser.T__121);
        this.state = 1045;
        this.match(qParser.T__1);
        this.state = 1046;
        this.expression();
        this.state = 1047;
        this.match(qParser.T__14);
        this.state = 1048;
        this.expression();
        this.state = 1049;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Value_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_value_function;
    return this;
}

Value_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Value_functionContext.prototype.constructor = Value_functionContext;

Value_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Value_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterValue_function(this);
	}
};

Value_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitValue_function(this);
	}
};

Value_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitValue_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Value_functionContext = Value_functionContext;

qParser.prototype.value_function = function() {

    var localctx = new Value_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 264, qParser.RULE_value_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1051;
        this.match(qParser.T__122);
        this.state = 1052;
        this.match(qParser.T__1);
        this.state = 1053;
        this.expression();
        this.state = 1054;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Var_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_var_function;
    return this;
}

Var_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Var_functionContext.prototype.constructor = Var_functionContext;

Var_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Var_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterVar_function(this);
	}
};

Var_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitVar_function(this);
	}
};

Var_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitVar_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Var_functionContext = Var_functionContext;

qParser.prototype.var_function = function() {

    var localctx = new Var_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 266, qParser.RULE_var_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1056;
        this.match(qParser.T__123);
        this.state = 1057;
        this.match(qParser.T__1);
        this.state = 1058;
        this.expression();
        this.state = 1059;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function View_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_view_function;
    return this;
}

View_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
View_functionContext.prototype.constructor = View_functionContext;

View_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

View_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterView_function(this);
	}
};

View_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitView_function(this);
	}
};

View_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitView_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.View_functionContext = View_functionContext;

qParser.prototype.view_function = function() {

    var localctx = new View_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 268, qParser.RULE_view_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1061;
        this.match(qParser.T__124);
        this.state = 1062;
        this.match(qParser.T__1);
        this.state = 1063;
        this.expression();
        this.state = 1064;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Vs_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_vs_function;
    return this;
}

Vs_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Vs_functionContext.prototype.constructor = Vs_functionContext;

Vs_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Vs_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterVs_function(this);
	}
};

Vs_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitVs_function(this);
	}
};

Vs_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitVs_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Vs_functionContext = Vs_functionContext;

qParser.prototype.vs_function = function() {

    var localctx = new Vs_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 270, qParser.RULE_vs_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1066;
        this.match(qParser.T__125);
        this.state = 1067;
        this.match(qParser.T__1);
        this.state = 1068;
        this.expression();
        this.state = 1069;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Wavg_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_wavg_function;
    return this;
}

Wavg_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Wavg_functionContext.prototype.constructor = Wavg_functionContext;

Wavg_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Wavg_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterWavg_function(this);
	}
};

Wavg_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitWavg_function(this);
	}
};

Wavg_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitWavg_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Wavg_functionContext = Wavg_functionContext;

qParser.prototype.wavg_function = function() {

    var localctx = new Wavg_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 272, qParser.RULE_wavg_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1071;
        this.match(qParser.T__126);
        this.state = 1072;
        this.match(qParser.T__1);
        this.state = 1073;
        this.expression();
        this.state = 1074;
        this.match(qParser.T__14);
        this.state = 1075;
        this.expression();
        this.state = 1076;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Where_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_where_function;
    return this;
}

Where_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Where_functionContext.prototype.constructor = Where_functionContext;

Where_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Where_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterWhere_function(this);
	}
};

Where_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitWhere_function(this);
	}
};

Where_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitWhere_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Where_functionContext = Where_functionContext;

qParser.prototype.where_function = function() {

    var localctx = new Where_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 274, qParser.RULE_where_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1078;
        this.match(qParser.T__127);
        this.state = 1079;
        this.match(qParser.T__1);
        this.state = 1080;
        this.expression();
        this.state = 1081;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Within_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_within_function;
    return this;
}

Within_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Within_functionContext.prototype.constructor = Within_functionContext;

Within_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Within_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterWithin_function(this);
	}
};

Within_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitWithin_function(this);
	}
};

Within_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitWithin_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Within_functionContext = Within_functionContext;

qParser.prototype.within_function = function() {

    var localctx = new Within_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 276, qParser.RULE_within_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1083;
        this.match(qParser.T__128);
        this.state = 1084;
        this.match(qParser.T__1);
        this.state = 1085;
        this.expression();
        this.state = 1086;
        this.match(qParser.T__14);
        this.state = 1087;
        this.expression();
        this.state = 1088;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Wj1_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_wj1_function;
    return this;
}

Wj1_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Wj1_functionContext.prototype.constructor = Wj1_functionContext;

Wj1_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Wj1_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterWj1_function(this);
	}
};

Wj1_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitWj1_function(this);
	}
};

Wj1_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitWj1_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Wj1_functionContext = Wj1_functionContext;

qParser.prototype.wj1_function = function() {

    var localctx = new Wj1_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 278, qParser.RULE_wj1_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1090;
        this.match(qParser.T__129);
        this.state = 1091;
        this.match(qParser.T__1);
        this.state = 1092;
        this.expression();
        this.state = 1093;
        this.match(qParser.T__14);
        this.state = 1094;
        this.expression();
        this.state = 1095;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Wj2_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_wj2_function;
    return this;
}

Wj2_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Wj2_functionContext.prototype.constructor = Wj2_functionContext;

Wj2_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Wj2_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterWj2_function(this);
	}
};

Wj2_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitWj2_function(this);
	}
};

Wj2_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitWj2_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Wj2_functionContext = Wj2_functionContext;

qParser.prototype.wj2_function = function() {

    var localctx = new Wj2_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 280, qParser.RULE_wj2_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1097;
        this.match(qParser.T__130);
        this.state = 1098;
        this.match(qParser.T__1);
        this.state = 1099;
        this.expression();
        this.state = 1100;
        this.match(qParser.T__14);
        this.state = 1101;
        this.expression();
        this.state = 1102;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Ww_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_ww_function;
    return this;
}

Ww_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ww_functionContext.prototype.constructor = Ww_functionContext;

Ww_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Ww_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterWw_function(this);
	}
};

Ww_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitWw_function(this);
	}
};

Ww_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitWw_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Ww_functionContext = Ww_functionContext;

qParser.prototype.ww_function = function() {

    var localctx = new Ww_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 282, qParser.RULE_ww_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1104;
        this.match(qParser.T__131);
        this.state = 1105;
        this.match(qParser.T__1);
        this.state = 1106;
        this.expression();
        this.state = 1107;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xasc_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xasc_function;
    return this;
}

Xasc_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xasc_functionContext.prototype.constructor = Xasc_functionContext;

Xasc_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xasc_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXasc_function(this);
	}
};

Xasc_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXasc_function(this);
	}
};

Xasc_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXasc_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xasc_functionContext = Xasc_functionContext;

qParser.prototype.xasc_function = function() {

    var localctx = new Xasc_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 284, qParser.RULE_xasc_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1109;
        this.match(qParser.T__132);
        this.state = 1110;
        this.match(qParser.T__1);
        this.state = 1111;
        this.expression();
        this.state = 1112;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xbar_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xbar_function;
    return this;
}

Xbar_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xbar_functionContext.prototype.constructor = Xbar_functionContext;

Xbar_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Xbar_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXbar_function(this);
	}
};

Xbar_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXbar_function(this);
	}
};

Xbar_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXbar_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xbar_functionContext = Xbar_functionContext;

qParser.prototype.xbar_function = function() {

    var localctx = new Xbar_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 286, qParser.RULE_xbar_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1114;
        this.match(qParser.T__133);
        this.state = 1115;
        this.match(qParser.T__1);
        this.state = 1116;
        this.expression();
        this.state = 1117;
        this.match(qParser.T__14);
        this.state = 1118;
        this.expression();
        this.state = 1119;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xcols_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xcols_function;
    return this;
}

Xcols_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xcols_functionContext.prototype.constructor = Xcols_functionContext;

Xcols_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xcols_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXcols_function(this);
	}
};

Xcols_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXcols_function(this);
	}
};

Xcols_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXcols_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xcols_functionContext = Xcols_functionContext;

qParser.prototype.xcols_function = function() {

    var localctx = new Xcols_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 288, qParser.RULE_xcols_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1121;
        this.match(qParser.T__134);
        this.state = 1122;
        this.match(qParser.T__1);
        this.state = 1123;
        this.expression();
        this.state = 1124;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xdesc_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xdesc_function;
    return this;
}

Xdesc_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xdesc_functionContext.prototype.constructor = Xdesc_functionContext;

Xdesc_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xdesc_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXdesc_function(this);
	}
};

Xdesc_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXdesc_function(this);
	}
};

Xdesc_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXdesc_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xdesc_functionContext = Xdesc_functionContext;

qParser.prototype.xdesc_function = function() {

    var localctx = new Xdesc_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 290, qParser.RULE_xdesc_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1126;
        this.match(qParser.T__135);
        this.state = 1127;
        this.match(qParser.T__1);
        this.state = 1128;
        this.expression();
        this.state = 1129;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xexp_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xexp_function;
    return this;
}

Xexp_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xexp_functionContext.prototype.constructor = Xexp_functionContext;

Xexp_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xexp_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXexp_function(this);
	}
};

Xexp_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXexp_function(this);
	}
};

Xexp_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXexp_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xexp_functionContext = Xexp_functionContext;

qParser.prototype.xexp_function = function() {

    var localctx = new Xexp_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 292, qParser.RULE_xexp_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1131;
        this.match(qParser.T__136);
        this.state = 1132;
        this.match(qParser.T__1);
        this.state = 1133;
        this.expression();
        this.state = 1134;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xgroup_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xgroup_function;
    return this;
}

Xgroup_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xgroup_functionContext.prototype.constructor = Xgroup_functionContext;

Xgroup_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Xgroup_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXgroup_function(this);
	}
};

Xgroup_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXgroup_function(this);
	}
};

Xgroup_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXgroup_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xgroup_functionContext = Xgroup_functionContext;

qParser.prototype.xgroup_function = function() {

    var localctx = new Xgroup_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 294, qParser.RULE_xgroup_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1136;
        this.match(qParser.T__137);
        this.state = 1137;
        this.match(qParser.T__1);
        this.state = 1138;
        this.expression();
        this.state = 1139;
        this.match(qParser.T__14);
        this.state = 1140;
        this.expression();
        this.state = 1141;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xkey_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xkey_function;
    return this;
}

Xkey_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xkey_functionContext.prototype.constructor = Xkey_functionContext;

Xkey_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Xkey_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXkey_function(this);
	}
};

Xkey_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXkey_function(this);
	}
};

Xkey_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXkey_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xkey_functionContext = Xkey_functionContext;

qParser.prototype.xkey_function = function() {

    var localctx = new Xkey_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 296, qParser.RULE_xkey_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1143;
        this.match(qParser.T__138);
        this.state = 1144;
        this.match(qParser.T__1);
        this.state = 1145;
        this.expression();
        this.state = 1146;
        this.match(qParser.T__14);
        this.state = 1147;
        this.expression();
        this.state = 1148;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xlog_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xlog_function;
    return this;
}

Xlog_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xlog_functionContext.prototype.constructor = Xlog_functionContext;

Xlog_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xlog_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXlog_function(this);
	}
};

Xlog_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXlog_function(this);
	}
};

Xlog_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXlog_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xlog_functionContext = Xlog_functionContext;

qParser.prototype.xlog_function = function() {

    var localctx = new Xlog_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 298, qParser.RULE_xlog_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1150;
        this.match(qParser.T__139);
        this.state = 1151;
        this.match(qParser.T__1);
        this.state = 1152;
        this.expression();
        this.state = 1153;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xprev_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xprev_function;
    return this;
}

Xprev_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xprev_functionContext.prototype.constructor = Xprev_functionContext;

Xprev_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xprev_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXprev_function(this);
	}
};

Xprev_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXprev_function(this);
	}
};

Xprev_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXprev_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xprev_functionContext = Xprev_functionContext;

qParser.prototype.xprev_function = function() {

    var localctx = new Xprev_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 300, qParser.RULE_xprev_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1155;
        this.match(qParser.T__140);
        this.state = 1156;
        this.match(qParser.T__1);
        this.state = 1157;
        this.expression();
        this.state = 1158;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xrank_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xrank_function;
    return this;
}

Xrank_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xrank_functionContext.prototype.constructor = Xrank_functionContext;

Xrank_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xrank_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXrank_function(this);
	}
};

Xrank_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXrank_function(this);
	}
};

Xrank_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXrank_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xrank_functionContext = Xrank_functionContext;

qParser.prototype.xrank_function = function() {

    var localctx = new Xrank_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 302, qParser.RULE_xrank_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1160;
        this.match(qParser.T__141);
        this.state = 1161;
        this.match(qParser.T__1);
        this.state = 1162;
        this.expression();
        this.state = 1163;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xranked_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xranked_function;
    return this;
}

Xranked_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xranked_functionContext.prototype.constructor = Xranked_functionContext;

Xranked_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xranked_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXranked_function(this);
	}
};

Xranked_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXranked_function(this);
	}
};

Xranked_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXranked_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xranked_functionContext = Xranked_functionContext;

qParser.prototype.xranked_function = function() {

    var localctx = new Xranked_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 304, qParser.RULE_xranked_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1165;
        this.match(qParser.T__142);
        this.state = 1166;
        this.match(qParser.T__1);
        this.state = 1167;
        this.expression();
        this.state = 1168;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xrecs_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xrecs_function;
    return this;
}

Xrecs_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xrecs_functionContext.prototype.constructor = Xrecs_functionContext;

Xrecs_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xrecs_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXrecs_function(this);
	}
};

Xrecs_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXrecs_function(this);
	}
};

Xrecs_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXrecs_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xrecs_functionContext = Xrecs_functionContext;

qParser.prototype.xrecs_function = function() {

    var localctx = new Xrecs_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 306, qParser.RULE_xrecs_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1170;
        this.match(qParser.T__143);
        this.state = 1171;
        this.match(qParser.T__1);
        this.state = 1172;
        this.expression();
        this.state = 1173;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xrows_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xrows_function;
    return this;
}

Xrows_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xrows_functionContext.prototype.constructor = Xrows_functionContext;

Xrows_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xrows_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXrows_function(this);
	}
};

Xrows_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXrows_function(this);
	}
};

Xrows_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXrows_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xrows_functionContext = Xrows_functionContext;

qParser.prototype.xrows_function = function() {

    var localctx = new Xrows_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 308, qParser.RULE_xrows_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1175;
        this.match(qParser.T__144);
        this.state = 1176;
        this.match(qParser.T__1);
        this.state = 1177;
        this.expression();
        this.state = 1178;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xss_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xss_function;
    return this;
}

Xss_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xss_functionContext.prototype.constructor = Xss_functionContext;

Xss_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xss_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXss_function(this);
	}
};

Xss_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXss_function(this);
	}
};

Xss_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXss_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xss_functionContext = Xss_functionContext;

qParser.prototype.xss_function = function() {

    var localctx = new Xss_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 310, qParser.RULE_xss_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1180;
        this.match(qParser.T__145);
        this.state = 1181;
        this.match(qParser.T__1);
        this.state = 1182;
        this.expression();
        this.state = 1183;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Xtype_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_xtype_function;
    return this;
}

Xtype_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Xtype_functionContext.prototype.constructor = Xtype_functionContext;

Xtype_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Xtype_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterXtype_function(this);
	}
};

Xtype_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitXtype_function(this);
	}
};

Xtype_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitXtype_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Xtype_functionContext = Xtype_functionContext;

qParser.prototype.xtype_function = function() {

    var localctx = new Xtype_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 312, qParser.RULE_xtype_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1185;
        this.match(qParser.T__146);
        this.state = 1186;
        this.match(qParser.T__1);
        this.state = 1187;
        this.expression();
        this.state = 1188;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Yield_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_yield_function;
    return this;
}

Yield_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Yield_functionContext.prototype.constructor = Yield_functionContext;

Yield_functionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Yield_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterYield_function(this);
	}
};

Yield_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitYield_function(this);
	}
};

Yield_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitYield_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Yield_functionContext = Yield_functionContext;

qParser.prototype.yield_function = function() {

    var localctx = new Yield_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 314, qParser.RULE_yield_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1190;
        this.match(qParser.T__147);
        this.state = 1191;
        this.match(qParser.T__1);
        this.state = 1192;
        this.expression();
        this.state = 1193;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


function Zip_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = qParser.RULE_zip_function;
    return this;
}

Zip_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Zip_functionContext.prototype.constructor = Zip_functionContext;

Zip_functionContext.prototype.expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExpressionContext);
    } else {
        return this.getTypedRuleContext(ExpressionContext,i);
    }
};

Zip_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.enterZip_function(this);
	}
};

Zip_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof qListener ) {
        listener.exitZip_function(this);
	}
};

Zip_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof qVisitor ) {
        return visitor.visitZip_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




qParser.Zip_functionContext = Zip_functionContext;

qParser.prototype.zip_function = function() {

    var localctx = new Zip_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 316, qParser.RULE_zip_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1195;
        this.match(qParser.T__148);
        this.state = 1196;
        this.match(qParser.T__1);
        this.state = 1197;
        this.expression();
        this.state = 1198;
        this.match(qParser.T__14);
        this.state = 1199;
        this.expression();
        this.state = 1200;
        this.match(qParser.T__2);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


exports.qParser = qParser;
