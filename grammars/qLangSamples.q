abs:{[numbers]};
acos:{[numbers]};
aj:{[syms;table;table]};
aj0:{[syms;table;table]};
ajf:{[syms;table;table]};
ajf0:{[syms;table;table]};
all:{[numbers]};
and:{[numbers;numbers]};
any:{[numbers]};
asc:{[list]};
asin:{[numbers]};
asof:{[table;table]};
atan:{[numbers]};
attr:{[object]};
avg:{[numbers]};
avgs:{[numbers]};
bin:{[sortedList;list]};
binr:{[sortedList;list]};
ceiling:{[numbers]};
cols:{[table]};
cor:{[numbers;numbers]};
cos:{[numbers]};
count:{[object]};
cov:{[numbers;numbers]};
cross:{[list;list]};
cut:{[ints;list]};
delete:{[col1, col2]};
deltas:{[numbers]};
desc:{[list]};
dev:{[numbers]};
differ:{[list]};
distinct:{[list]};
div:{[numbers;numbers]};
do:[{times;e1;e2}];
dsave:{[file;syms]};
each:{[v1;list]};
ej:{[syms;table;table]};
ema:{[smoothingFactors;numbers]};
enlist:{[object]};
eval:{[list]};
except:{[list;exclusions]};
exec:{col1,col2 [by col3]};
exit:{[number]};
exp:{[numbers]};
fby:{group([]group1;group2)};
fills:{[list]};
first:{[object]};
fkeys:{[table]};
flip:{[listOrDictOrTable]};
floor:{[numbers]};
get:{[symOrFile]};
getenv:{[sym]};
group:{[listOrDict]};
gtime:{[timestamps]};
hclose:{[handle]};
hcount:{[file]};
hdel:{[fileOrDir]};
hopen:{[fileOrSocketString]};
hsym:{[syms]};
iasc:{[list]};
idesc:{[list]};
if:{[test;e1;e2]};
ij:{[table;keyedTable]};
ijf:{[table;keyedTable]};
in:{[items;list]};
insert:{[table;records]};
inter:{[list;list]};
inv:{[matrix]};
key:{[symOrDict]};
keys:{[table]};
last:{[list]};
like:{[symsOrStrings;stri]};
lj:{[table;keyedTable]};
ljf:{[table;keyedTable]};
load:{[fileOrDir]};
log:{[numbers]};
lower:{[symsOrStrings]};
lsq:{[yMatrixes;xMatrixes]};
ltime:{[ts]};
ltrim:{[str]};
mavg:{[int;numbers]};
max:{[numbers]};
maxs:{[numbers]};
maxs:{[numbers]};
mcount:{[int;list]};
md5:{[str]};
mdev:{[int;numbers]};
med:{[numbers]};
meta:{[table]};
min:{[numbers]};
mmax:{[int;numbers]};
mmin:{[int;numbers]};
mmu:{[matrix;matrix]};
mod:{[divisors;dividends]};
msum:{[int;numbers]};
neg:{[numbers]};
next:{[list]};
not:{[numbers]};
null:{[object]};
over:{[v1vv;list]};
parse:{[str]};
peach:{[list]};
pj:{[table;keyed table]};
prd:{[numbers]};
prds:{[numbers]};
prev:{[list]};
prior:{[v2vv;list]};
rand:{[numberOrList]};
rank:{[list]};
ratios:{[numbers]};
raze:{[list]};
read0:{[file_offset_length]};
read1:{[file_offset_length]};
reciprocal:{[numbers]};
reval:{[list]};
reverse:{[list]};
rload:{[dir]};
rotate:{[int;list]};
rsave:{[sym]};
rtrim:{[str]};
save:{[sym]};
scan:{[v1vv;list]};
scov:{[numbers;numbers]};
sdev:{[numbers]};
set:{[symOrFileOrDir;object]};
setenv:{[sym;str]};
select:{column where table by};
show:{[object]};
signum:{[numbers]};
sin:{[numbers]};
sqrt:{[numbers]};
ss:{[str;pattern]};
ssr:{[str;pattern;strOrFunction]};
string:{[object]};
sublist:{[int;list]};
sum:{[numbers]};
sums:{[numbers]};
sv:{[str;strings]};
svar:{[numbers]};
system:{[str]};
tables:{[namespaceSym]};
tan:{[numbers]};
til:{[long]};
trim:{[str]};
type:{[object]};
uj:{[table;table]};
ujf:{[table;table]};
ungroup:{[table]};
union:{[list;list]};
update:{col1,col2 [by col3] from table [where cond]};
upper:{[symOrString]};
upsert:{[tableOrSym;recordsOrTable]};
value:{[symbolOrStringOrListOrDict]};
var:{[numbers]};
view:{[sym]};
views:{[namespaceSym]};
vs:{[str;str]};
wavg:{[weights;numbers]};
where:{[numbersOrBooleans]};
while:{[test;e1;e2...]};
within:{[list;range]};
wj:{[windows;syms;table;table_aggregation]};
wj1:{[windows;syms;table;table_aggregation]};
wsum:{[weights;numbers]};
xasc:{[syms;table]};
xbar:{[base;numbers]};
xcol:{[syms;table]};
xcols:{[syms;table]};
xdesc:{[syms;table]};
xexp:{[bases;powers]};
xgroup:{[syms;table]};
xkey:{[syms;table]};
xlog:{[bases;numbers]};
xprev:{[int;list]};
xrank:{[int;list]};
.h.cd:{[table]};
.h.code:{[str]};
.h.ed:{[table]};
.h.edsn:{[sheetSymsTablesDict]};
.h.fram:{[titleString;strings;(leftFrameStrings;rightFrameStrings)]};
.h.ha:{[urlSym;str]};
.h.hb:{[urlStr;str]};
.h.hc:{[str]};
.h.he:{[errorString]};
.h.hn:{[statusCodeString;contentTypeSym;contentString]};
.h.hp:{[preString]};
.h.hr:{[str]};
.h.ht:{[file]};
.h.hta:{[htmlTagSym;attributesValuesDict]};
.h.htac:{[htmlTagSym;attributesValuesDict;content]};
.h.htc:{[htmlTagSym;content]};
.h.html:{[htmlBodyString]};
.h.http:{[str]};
.h.hu:{[str]};
.h.hug:{[str]};
.h.hy:{[httpContentTypeSym;str]};
.h.iso8601:{[nanoseconds]};
.h.jx:{[offset;tableSym]};
.h.nbr:{[str]};
.h.pre:{[strings]};
.h.td:{[table]};
.h.text:{[strings]};
.h.uh:{[str]};
.h.val:{:{[expressionStr]}};
.h.xd:{[table]};
.h.xmp:{[strings]};
.h.xs:{[str]};
.h.xt:{[jsonSym;jsonStr]};
.j.j:{[object]};
.j.jd:{[object;dict]};};
.j.k:{[str]};
.Q.addmonths:{[dates;ints]};
.Q.addr:{[hostSym]};
.Q.btoa:{[str]};
.Q.Cf:{[file]};
.Q.chk:{[dir]};
.Q.cn:{[partitionedTable]};
.Q.dd:{[sym;atomOrList]};
.Q.def:{[defaultValueDict;paramsDict]};
.Q.dpft:{[dir;partition;columnSyms;tableSym]};
.Q.dpfts:{[dir;partition;columnSyms;tableSym;enumDomainSym]};
.Q.dsftg:{[dirHsym_partition_tableSym;srcHsym_offset_length;columnSyms;typeString_Widths;postProcessingV1]};
.Q.en:{[dir;table]};
.Q.ens:{[dir;table;enumDomainSym]};
.Q.f:{[decimalPlace;number]};
.Q.fc:{[v1;list]};
.Q.ff:{[toBeAppendedTable;table]};
.Q.fk:{[columnSym]};
.Q.fmt:{[offset;decimalPlace;number]};
.Q.fps:{[v1;file]};
.Q.fs:{[v1;file]};
.Q.fsn:{[v1;file;chunkSize]};
.Q.ft:{[v1;keyedTable]};
.Q.fu:{[v1;list]};
.Q.gz:{[charsOrBytes]};
.Q.hdpf:{[hdbSocket;dir;partition;partedColumnSym]};
.Q.hg:{[urlHsym]};
.Q.host:{[ipInt]};
.Q.hp:{[urlHsym;MIMEString;queryString]};
.Q.id:{[table]};
.Q.ind:{[partitionedTable;indices]};
.Q.j10:{[str]};
.Q.j12:{[str]};
.Q.l:{[dir]};
.Q.opt:{[strings]};
.Q.par:{[dir;partition;tableSym]};
.Q.qp:{[table]};
.Q.qt:{[table]};
.Q.S:{[consoleSize;page;object]};
.Q.s:{[object]};
.Q.s1:{[object]};
.Q.sbt:{[backTraceObject]};
.Q.sha1:{[str]};
.Q.trp:{[v1;args;v2]};
.Q.ts:{[v;args]};
.Q.ty:{[list]};
.Q.v:{[sym]};
.Q.V:{[table]};
.Q.view:{[partitions]};
.Q.x10:{[long]};
.Q.x12:{[long]};
.Q.Xf:{[upperCaseChar;file]};