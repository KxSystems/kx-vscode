name: KX VS Code Release Workflow

on: [push, pull_request]
#limit to dev and main
env:
  PACKAGE_VERSION: "0.1.16"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install dependencies
        run: yarn install
      - name: Build VSIX file
        run: yarn run build
      - name: Run Tests
        run: xvfb-run -a yarn run test
      - name: Update package.json
        run: |
          sed -i '/"version":/c\  "version": $PACKAGE_VERSION,' package.json
          cat package.json
      - name: Packaging
        run: yarn run package
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: KDB-VSCode-Extension
          path: kdb-${PACKAGE_VERSION}.vsix

  app-sec:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: yarn install

      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Snyk scan for all vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.pink_snyk_api_key }}

      - name: Snyk scan for high or critical vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.pink_snyk_api_key }}
        with:
          args: --severity-threshold=high

      - name: Snyk Monitor
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.pink_snyk_api_key }}
        with:
          command: monitor
          args: --target-reference=${{ github.ref_name }}
        if: github.ref_name == 'main' || github.ref_name == 'dev'

  release:
    runs-on: ubuntu-latest
    needs: app-sec
    steps:
      - name: Download VSIX file from build job
        uses: actions/download-artifact@v3
        with:
          name: KDB-VSCode-Extension
      # - name: Release to Portal
      #   run: |
      # curl -s --header "PRIVATE-TOKEN: ${{ secrets.download_portal_key }} \
      # --upload-file kdb-${PACKAGE_VERSION}.vsix  \
      # ${{ DOWNLOAD_PORTAL_URL }}/assets/raw/kdb-vscode/kdb-vscode-${{ github.ref_name }}.rc.${PACKAGE_VERSION}.vsix
